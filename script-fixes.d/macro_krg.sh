#!/bin/sh
##
###
##
#
#Wed Oct 19 16:04:55 GMT+1 2011
#
#################################################

########################################################################
#
#
#
#
#
# /dev/sda5:
# LABEL="MacPup430_F3"
# UUID="07443de5-1fab-4656-a3ab-7b1c14ccc8c8"
# TYPE="ext3"
# DISTRO_VERSION=430·#481·#416·#218·#478······#####change·this·as·required#####
# DISTRO_BINARY_COMPAT="puppy"·#"ubuntu"·#"puppy"·#####change·this·as·required#####
# case·$DISTRO_BINARY_COMPAT·in
# ubuntu)
# DISTRO_NAME="Jaunty·Puppy"
# DISTRO_FILE_PREFIX="upup"
# DISTRO_COMPAT_VERSION="jaunty"
# ;;
# debian)
# DISTRO_NAME="Lenny·Puppy"
# DISTRO_FILE_PREFIX="dpup"
# DISTRO_COMPAT_VERSION="lenny"
# ;;
# slackware)
# DISTRO_NAME="Slack·Puppy"
# DISTRO_FILE_PREFIX="spup"
# DISTRO_COMPAT_VERSION="12.2"
# ;;
# arch)
# DISTRO_NAME="Arch·Puppy"
# DISTRO_FILE_PREFIX="apup"
# DISTRO_COMPAT_VERSION="200904"
# ;;
# t2)
# DISTRO_NAME="T2·Puppy"
# DISTRO_FILE_PREFIX="tpup"
# DISTRO_COMPAT_VERSION="puppy5"
# ;;
# puppy)·#built·entirely·from·Puppy·v2.x·or·v3.x·or·4.x·pet·pkgs.
# DISTRO_NAME="Puppy"
# DISTRO_FILE_PREFIX="pup"·#"ppa"·#"ppa4"·#"pup2"··#pup4··###CHANGE·AS·REQUIRED,·recommend·limit·four·characters###
# DISTRO_COMPAT_VERSION="4"·#"2"··#4·····###CHANGE·AS·REQUIRED,·recommend·single·digit·5,·4,·3,·or·2###
# ;;
# esac
# PUPMODE=2
# KERNVER=2.6.30.6-KRG-i486
# ATADRIVES='·sda'
# USB_SATAD=''
# PUP_HOME='/'
# Linux·puppypc·2.6.30.6-KRG-i486·#1·SMP·Sun·Jan·2·20:32:12·GMT-1·2011·i686·GNU/Linux
# Xserver=/usr/X11R7/bin/Xvesa_stripped_upx9
# $LANG=en_US
# today=Mon·Oct·24·22:32:25·CEST·2011
#
#
#
#
#
########################################################################


########################################################################
#
#
#
#
#
# DISTRO_NAME='Wary·Puppy'
# DISTRO_VERSION=098
# DISTRO_MINOR_VERSION=00
# DISTRO_BINARY_COMPAT='puppy'
# DISTRO_FILE_PREFIX='wary'
# DISTRO_COMPAT_VERSION='wary5'
# DISTRO_KERNEL_PET='linux_kernel-2.6.31.14-2-w5.pet'
# DISTRO_IDSTRING='w098101114074008'
# DISTRO_PUPPYSFS='wary_098.sfs'
# DISTRO_ZDRVSFS='zw098114.sfs'
# PUPMODE=12
# PDEV1='sda7'
# DEV1FS='ext4'
# PUPSFS='sda7,ext4,/wary098/wary_098.sfs'
# PUPSAVE='sda7,ext4,/wary098/warysave-098F.3fs'
# PMEDIA='atahd'
# ATADRIVES='sda·'
# SAVE_LAYER='/pup_rw'
# PUP_LAYER='/pup_ro2'
# PUP_HOME='/mnt/dev_save'
# ZDRV='sda7,ext4,/wary098/zw098114.sfs'
# ZDRVINIT='no'
# PSAVEMARK=''
# Linux·puppypc·2.6.31.14·#1·SMP·Mon·Oct·25·23:28:59·GMT-8·2010·i686·GNU/Linux
# Xserver=/usr/X11R7/bin/Xorg
# $LANG=en_US
# today=Mon·Oct·24·18:43:54·GMT-1·2011
#
#
#
#
#
########################################################################


########################################################################
#
#
#
#
#
# /dev/sda10:
# LABEL="/"
# UUID="1b68d71e-9a29-4d83-8dbd-01f71248e7a1"
# TYPE="ext3"
# DISTRO_NAME='Lighthouse·Pup'
# DISTRO_VERSION=443
# DISTRO_BINARY_COMPAT='slackware'
# DISTRO_FILE_PREFIX='spup'
# DISTRO_COMPAT_VERSION='13.0'
# PUPMODE=2
# ATADRIVES='sda·'
# PUP_HOME='/'
# Linux·Mariner·2.6.30.5·#1·SMP·Tue·Sep·1·15:48:26·GMT-8·2009·i686·GNU/Linux
# Xserver=/usr/X11R7/bin/Xorg
# $LANG=de_DE@euro
# today=Sa·22.·Okt·10:18:46·UTC·2011
# TODO1: fix nonexisting file && non-writeble file ~fixed 2011_10_22
#
#
#
#
########################################################################


########################################################################
#
# Written by Karl Reimer Godt
# 
#
#
# DISTRO_NAME='Lucid·Puppy'
# DISTRO_VERSION=254
# DISTRO_MINOR_VERSION=00
# DISTRO_BINARY_COMPAT='ubuntu'
# DISTRO_FILE_PREFIX='luci'
# DISTRO_COMPAT_VERSION='lucid'
# DISTRO_KERNEL_PET='linux_kernel-2.6.33.2-tickless_smp_patched-L3.pet'
# DISTRO_IDSTRING='l254110311115218'
# DISTRO_PUPPYSFS='luci_254.sfs'
# DISTRO_ZDRVSFS='zl254332.sfs'
# PUPMODE=12
# PDEV1='sda3'
# DEV1FS='ext3'
# PUPSFS='sda3,ext3,/luci254/luci_254.sfs'
# PUPSAVE='sda3,ext3,/luci254/lucisave-luci254luci254_1.3fs'
# PMEDIA='atahd'
# ATADRIVES='sda·'
# ATAOPTICALDRIVES=''
# SAVE_LAYER='/pup_rw'
# PUP_LAYER='/pup_ro2'
# PUP_HOME='/mnt/dev_save'
# ZDRV=''
# ZDRVINIT='no'
# PSAVEMARK=''
# Linux·puppypc·2.6.33.2·#1·SMP·Thu·May·27·10:56:32·EST·2010·i686·GNU/Linux
# Xserver=/usr/bin/Xorg
# $LANG=en_US
# today=Fri·Oct·21·23:47:22·CEST·2011
#
#
#
#
#
########################################################################


########################################################################
#
#
#
#
#
# /dev/sda6:
# LABEL="/"
# UUID="f28bc57e-d1a8-4599-839b-4e30525f554c"
# TYPE="ext3"
# DISTRO_NAME='Lighthouse·Pup'
# DISTRO_VERSION=443
# DISTRO_BINARY_COMPAT='slackware'
# DISTRO_FILE_PREFIX='spup'
# DISTRO_COMPAT_VERSION='13.0'
# PUPMODE=2
# ATADRIVES='sda·'
# PUP_HOME='/'
# Linux·Mariner·2.6.30.5·#1·SMP·Tue·Sep·1·15:48:26·GMT-8·2009·i686·GNU/Linux
# Xserver=/usr/X11R7/bin/Xorg
# $LANG=de_DE@euro
# today=Fr·21.·Okt·20:16:45·UTC·2011
# TODO1 : check for file existance
#
#
#
#
########################################################################



help_func(){
echo "USAGE: $0 /path/to/filename.ext

$1

"
exit 9
}

fileName="$1"
[ -z "$1" ] && help_func "no filename specified"
[ ! -f "$1" ] && help_func "file $1 does not exist -- TYPO ?"  ##+++2011_10_22
[ ! -w "$1" ] && help_func "file $1 is not writeable"  ##+++2011_10_22

filterSpace(){
sed 's/^[[:blank:]]*//g;s/[[:blank:]]*$//g'
}

. /etc/DISTRO_SPECS                 ##+++2011_10_20
. /etc/rc.d/PUPSTATE                ##+++2011_10_20
if [ "$PUPMODE" == 2 ] ; then       ##+++2011_10_20
rootDevice=`rdev |cut -f 1 -d ' '`  ##+++2011_10_20
blockID=`blkid $rootDevice`         ##+++2011_10_20
fi                                  ##+++2011_10_20
language='$LANG='"`echo $LANG`"
time='today='"`date | tr ' ' '·'`"
distroSpecs=`cat /etc/DISTRO_SPECS  | grep -v '^#' | filterSpace | tr ' ' '·'`
pupState=`cat /etc/rc.d/PUPSTATE | grep -v '^#' | filterSpace | tr ' ' '·'`
kernel=`uname -a | tr ' ' '·'`   ##| tr ' ' 'Â·'
xServer="Xserver=`readlink -e $(which X)`"

debug(){
p1="$1"
if [ -z "`echo $p1 | grep -w -e '[[:digit:]]*'`" ] ; then
p1='-'; fi
shift
echo "$0 line: $p1 $@"
}

old_func(){
echo '##########################################################################'
echo '#' "$distroSpecs"
echo '#' "$pupState"
echo '#' "$kernel"
echo '#' "$xServer"
echo '#' "$time"
echo '#' "$language"
echo '##########################################################################'
}

exec 1>/tmp/`basename $0`.txt
#echo  ##+++2011_10_21
echo  ##+++2011_10_20
for n in `seq 1 72` ; do
echo -n '#'
done
echo
for n in `seq 1 5` ; do
echo '#'
done

cont_func(){
for cont in $@ ; do
echo '#' $cont
done
}
[ "$blockID" ] && cont_func "$blockID"  ##+++2011_10_20
cont_func "$distroSpecs"
cont_func "$pupState"
cont_func "$kernel"
cont_func "$xServer"
cont_func "$language"
cont_func "$time"

for n in `seq 1 5` ; do
echo '#'
done
for n in `seq 1 72` ; do
echo -n '#'
done
echo
echo  ##+-+2011_10_20
#echo ##workaround needs this
exec 1>&0
echo hallo

#insertLineNumber9=`grep -m1 -n '^[[:alnum:]]' "$fileName" | cut -f 1 -d ':'`  ##+-+2011_10_21 
insertLineNumber9=`grep -m1 -n -v -E -e '^[!#.*]|^[![:blank:]*#.*]' "$fileName" | cut -f 1 -d ':'`  ##+++2011_10_21
#insertLineNumber1=$((insertLineNumber9-1))  ##+-+2011_10_21 
insertLineNumber1=$((insertLineNumber9))  ##+-+2011_10_21 
[ -z "$insertLineNumber1" -o "$insertLineNumber1" -lt 3 ] && insertLineNumber1=3
insertLineNumber8=`wc -l /tmp/$(basename $0).txt | filterSpace | cut -f 1 -d ' '`
insertLineNumber2=$((insertLineNumber1+insertLineNumber8)) 

echo insertLineNumber1=$insertLineNumber1
echo insertLineNumber2=$insertLineNumber2

#sedPattern=`cat /tmp/$(basename $0).txt`
#echo "$sedPattern"

sed_func(){
cp "$fileName" "$fileName".backup.$$
chmod 0440 "$fileName".backup.$$  ##2011_10_21

sedPattern=`cat /tmp/$(basename $0).txt`
echo "$sedPattern"
#sed -i "$insertLineNumber1,$insertLineNumber2 a\ $sedPattern" "$fileName" ##only one line

count=$insertLineNumber1
for number in `seq 1 $insertLineNumber8`; do
sedPattern=`sed -n "$number p" /tmp/$(basename $0).txt`
echo sedPattern=$sedPattern
sed -i "$count i\ $sedPattern" "$fileName"
sed -i "$count s/^[[:blank:]]*//" "$fileName"
count=$((count+1))
done

}
sed_func


work_around(){
head -n $insertLineNumber "$fileName" > /tmp/`basename "$fileName"`.tmp
cat /tmp/$(basename $0).txt >> /tmp/`basename "$fileName"`.tmp

if [ -n "`tail -n1 "$fileName" | grep -E '^[[:alnum:]]|^[[:punct:]]'`" ] ; then
echo >> "$fileName" ; fi

totalNumber=`wc -l "$fileName" | cut -f 1 -d ' '`
tailNumber=$((totalNumber-insertLineNumber))
tail -n $tailNumber "$fileName" >> /tmp/`basename "$fileName"`.tmp

cp "$fileName" "$fileName".backup.$$
cp -f /tmp/`basename "$fileName"`.tmp "$fileName"
###end work around
}
#work_around

