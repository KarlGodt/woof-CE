#!/bin/ash
# uses /proc/partitions
# two parts:
#       /proc/partitions and
# ls -1 /sys/class/block for sr[0-9] cd drives
# because some kernels do not print sr[0-9] drives in /proc/partitions
#
# New header by Karl Reimer Godt, September 2014
  _TITLE_="Puppy_probepart2"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="/sbin/probepart2"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
[ "$HAVE_F4PUPPY5" ] || . /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

TWO_HELP='1'; TWO_VERSION='1'; TWO_VERBOSE=''; TWO_DEBUG=''; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap

}
# End new header
#

trap "exit 1" HUP INT QUIT KILL TERM

OUT=/dev/null;ERR=$OUT

[ "$DEBUG" ] && { OUT=/dev/stdout;ERR=/dev/stderr; }
[ "$DEBUG" = "2" ] && set -x
# VALID special DEBUG parameters : F=fdisk(fat,extended), D=disktype, B=blkid, G=guess_fstype
# probepart needs to run as '# DEBUG=1 probepart' to turn debugging on

Version='2.1'

_usage(){
USAGE_MSG="
$0 [ PARAMETERS ]

example usage : probepart -m

PARAMETERS:
-V|--version : showing version information
-H|--help : show this usage information

-k : show sizes in kilobytes (KiB)
-m : show sizes in megabytes (MiB)
Without one of the above parameters it is the value found in
/sys/class/block/drive/size
; usually as blocksize=512 .

$2
"
USAGE_MSG=`gettext "$USAGE_MSG"`
echo "$USAGE_MSG"
exit $1
}

[ "`echo "$1" | grep -wiE "help|\-H"`" ] && _usage 0
[ "`echo "$1" | grep -wiE "version|\-V"`" ] && { echo "$0 -version $Version";exit 0; }

##
SIZE_FACTOR=1
SIZE_PARAM=`echo "$@" | grep -o -E '\-k|\-m'`
[ "$SIZE_PARAM" = '-k' ] && SIZE_FACTOR=2
[ "$SIZE_PARAM" = '-m' ] && SIZE_FACTOR=2024

FDISK=`fdisk -l`

while read maj min size drive; do
[ "$maj" ] || continue
[ -b "/dev/$drive" ] || continue
SIZE='';FSTYPE='';
read SIZE </sys/class/block/$drive/size
[ "$SIZE" = 2 ] && {
	SIZE=$((`echo "$FDISK" |grep -w "^/dev/$drive" |rev| awk '{print $3}' |rev |sed 's#[^[:digit:]]##g'`*2));
	FSTYPE=`echo "$FDISK"  |grep -w "^/dev/$drive" |rev| awk '{print $1}' |rev`; }
SIZE=$((SIZE/SIZE_FACTOR))
REMOVEABLE=0
if [ -d /sys/class/block/$drive/device ]; then
 read REMOVEABLE </sys/class/block/$drive/removable
fi
#[ "$REMOVEABLE" = 0 ] || { cddetect_quick -d/dev/$drive >$OUT && FSTYPE=`disktype /dev/$drive |grep -m1 'file system' |awk '{print $1}' |tr '[A-Z]' '[a-z]'` || FSTYPE='not inserted' ; }

[ "$REMOVEABLE" = 0 ] || { cddetect_quick -d/dev/$drive >>$OUT && { FSTYPE=`guess_fstype /dev/$drive` || true; } || FSTYPE='not inserted'; }

[ "$FSTYPE" ] || FSTYPE=`guess_fstype /dev/$drive`

case $FSTYPE in
""|unknown) FSTYPE=`disktype /dev/$drive |grep -m1 'file system' |awk '{print $1}' |tr '[A-Z]' '[a-z]'`;;
esac
[ "$FSTYPE" ] || FSTYPE=unknown

echo "/dev/$drive|$FSTYPE|$SIZE"

done </proc/partitions

if ! grep $Q 'sr[0-9]' /proc/partitions >>$ERR 2>&1; then

SATA_CD_DRIVES=`ls -1 /sys/class/block | grep -e '^sr[0-9]*'`

while read drive; do
[ "$drive" ] || continue            ##+++ edit1 if no cd drives attached
[ -b /dev/$drive ] || continue  ##+++ edit1 further test if node correct
SIZE='';FSTYPE='';
read SIZE </sys/class/block/$drive/size

[ "$SIZE" = 2 ] && { SIZE=$((`echo "$FDISK" |grep -w "^/dev/$drive" |rev| awk '{print $3}' |rev |sed 's#[^[:digit:]]##g'`*2));FSTYPE=`echo "$FDISK" |grep -w "^/dev/$drive" |rev| awk '{print $1}' |rev`; }
SIZE=$((SIZE/SIZE_FACTOR))
REMOVEABLE=0
if [ -d /sys/class/block/$drive/device ]; then
 read  REMOVEABLE </sys/class/block/$drive/removable
fi

 [ "$REMOVEABLE" = 0 ] || { cddetect_quick -d/dev/$drive >$OUT && { FSTYPE=`guess_fstype /dev/$drive` || true; } || FSTYPE='not inserted'; }

[ "$FSTYPE" ] || FSTYPE=`guess_fstype /dev/$drive`
case $FSTYPE in
""|unknown) FSTYPE=`disktype /dev/$drive |grep -m1 'file system' |awk '{print $1}' |tr '[A-Z]' '[a-z]'`;;
esac
[ "$FSTYPE" ] || FSTYPE=unknown

 echo "/dev/$drive|$FSTYPE|$SIZE"

done <<EoI
$(echo "${SATA_CD_DRIVES}")
EoI

fi

# Very End of this file 'sbin/probepart2' #
###END###
