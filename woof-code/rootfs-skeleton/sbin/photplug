#!/bin/ash

  _TITLE_=pup_hotplug
_VERSION_=1.0omega
_COMMENT_="Kernel module loading helper"

MY_SELF="$0"
MY_PID=$$

[ "$*" ] && echo "Kernel hotplug helper. Replaces UDEV. No common cli tool."

__too_heavy__(){
test -f /etc/rc.d/f4puppy5 && {
[ "$HAVE_F4PUPPY5" ] || source /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

TWO_HELP=''; TWO_VERSION=''; TWO_VERBOSE=''; TWO_DEBUG=''; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap
 }
}

Q=-q
VERB=-v
EMERGENCY=1
ALERT=1
CRIT=1
ERROR=1
WARN=1
NOTICE=1
INFO=1
DEBUG=1

exec 1>>/tmp/photplug.log 2>&1
[ "$DEBUG" ] && echo
echo "$0:$*:$ACTION"
[ "$DEBUG" ] && env

_emerg(){
test "$EMERGENCY" || return 1
echo -e "$0:EMERGENGY:$*"   >&2
}
_alert(){
test "$ALERT" || return 1
echo -e "$0:ALERT:$*"  >&2
}
_crit(){
test "$CRIT" || return 1
echo -e "$0:CRITICAL:$*" >&2
}
_err(){
test "$ERROR" || return 1
echo -e "$0:ERROR:$*"  >&2
}
_warn(){
test "$WARN" || return 1
echo -e "$0:WARNING:$*"  >&2
}
_notice(){
test "$NOTICE" || return 1
echo -e "$0:NOTICE:$*"   >&2
}
_info(){
test "$INFO" || return 1
echo -e "$0:INFO:$*"  >&2
}
 _debug(){
test "$DEBUG" || return 1
echo "$0:DEBUG:$*"  >&2
}


case $ACTION in
add)
[ "$MODALIAS" -o "$DRIVER" ] && {
        _info "'$MODALIAS' '$DRIVER'"
        [ "$DRIVER" ] && modprobe -b $Q $VERB "$DRIVER" || {
        LIST=`modprobe -b -D "$MODALIAS" | grep -vE '^install|^blacklist|^options' | sed 's%.*\(/.*\)\.k.*%\1%'`
        for m in $LIST ; do
        modprobe -b $Q $VERB "${m##*/}"
        done
    }
         exit 0
}

[ "$MAJOR" -a "$MINOR" -a "$SUBSYSTEM" ] && { [ "$DEVNAME" -o "$DEVPATH" ] && {
_debug $MAJOR $MINOR $SUBSYSTEM $DEVNAME $DEVPATH

[ "$DEVNAME" ] || {
    case $SUBSYSTEM in
    sound) DEVNAME="snd/${DEVPATH##*/}";;
    block|graphics|rtc|tty|video4linux) DEVNAME=${DEVPATH##*/};;
    *) DEVNAME="${SUBSYSTEM}/${DEVPATH##*/}";;
    esac
}

#sed -n '/Block devices:/,$ p' /proc/devices | grep "$SUBSYSTEM" | awk '{print $1}' | grep -w "$MAJOR" && {
if [ "$DEVTYPE" = disk -o "$DEVTYPE" = partition ]; then
        [ -e /dev/$DEVNAME ] && exit
        DEV="/${DEVNAME}"
        [ -e "/dev/${DEV%/*}" ] || mkdir $VERB -p "/dev/${DEV%/*}"
        mknod /dev/$DEVNAME b $MAJOR $MINOR
        exit $?
        #}
else
#[ "$SUBSYSTEM" = sound ] && GPATTERN='alsa|sound' || GPATTERN="$SUBSYSTEM"
#sed -n '/Character devices:/,/Block devices:/p' /proc/devices | grep -E "$GPATTERN" | awk '{print $1}' | grep -w "$MAJOR" && {
        [ -e /dev/$DEVNAME ] && exit
        DEV="/${DEVNAME}"
        [ -e "/dev/${DEV%/*}" ] || mkdir $VERB -p "/dev/${DEV%/*}"
        mknod /dev/$DEVNAME c $MAJOR $MINOR
        exit $?
        #}
fi
 }
}

test "$FIRMWARE" && {

FIRMWAREBIN=`ls /lib/firmware/$FIRMWARE`
test "$FIRMWAREBIN" || FIRMWAREBIN=`ls /lib/firmware/*/$FIRMWARE`
test "$FIRMWAREBIN" || exit 1
test -f "$FIRMWAREBIN" || exit 1
_notice "FIRMWAREBIN='$FIRMWAREBIN'"

echo 1 > /sys/$DEVPATH/loading

cat "$FIRMWAREBIN" > /sys/$DEVPATH/data
if [ $? = 0 ]; then
    echo 0 >/sys/$DEVPATH/loading
else
_warn "ERROR loading '$FIRMWAREBIN'"
fi
}

;;
#kernel/lib/kobject_uevent.c:kobject_actions[] = {
remove )
_notice "remove:FIXME";;
change )
_notice "change:FIXME";;
move   )
_notice "move:FIXME";;
online )
_notice "online:FIXME";;
offline)
_notice "offline:FIXME";;
*      )
_warn "anything else:FIXME";;
esac
# Very End of this file 'sbin/photplug' #
###END###
