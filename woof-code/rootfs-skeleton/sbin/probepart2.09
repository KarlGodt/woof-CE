#!/bin/ash
#
# switch to use grep -E sda|sdb formatted DEVICES variable
# identical to probepart2.07.01
# version 0.1 bugfixes for grep DEVICES:
# use -w option always since -d/dev/sda1 also printed sda10, sda11, ..
# but -w option is useless in case of -d/dev/sda to print all partitions of a drive
#
# New header by Karl Reimer Godt, September 2014
  _TITLE_="Puppy_probepart2.09"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="/sbin/probepart2.09"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
[ "$HAVE_F4PUPPY5" ] || . /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

TWO_HELP='1'; TWO_VERSION='1'; TWO_VERBOSE=''; TWO_DEBUG='1'; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap

}
# End new header
#

###INTRO
# Karl Reimer Godt, March 2013
# /sbin/probepart originally written by
#
# Barry Kauler www.puppylinux.com
# LGPL 2007 Puppy Linux www.puppylinux.com
#
# Different code for /sbin/probepart
# that is used by
# /sbin/pup_event_frontend_d,
# /usr/sbin/partview,
# /usr/sbin/pmount
# ,
# /usr/local/bin/drive_all
# and
# /usr/sbin/shutdownconfig
# and probably some more .
#
# May output fat as Fat[16|32] by disktype, not as vfat
# so take this into account if these scripts don't
# show your fat partitions.
# Also omitting the /root/.usb-drive-log-probepart file
# , the forcing of USB by
# dd if=/dev/$ONEUSBDRV of=/dev/null bs=512 count=1 >/dev/null 2>&1 #v3.97 faster.
# and unfortunately
# /usr/lib/mut/bin/guess_fstype
# since the developer jesse had not ported it to support ext4.
#
# Thanks very much to Keef for patience while testing and
# helping me detecting some wrong formatted code, confirmations
# and to keep pmount happier.
# Thanks muchly to wjaguar to remind/teach me to use the read command more effectively,
# which solved problems posted by Keef and also encountered by me, and did
# increase the speed reasonably.
# Also thanks to Ted Dog and headfound for company.
###ENDINTRO

##HEAD
trap "exit 1" HUP INT QUIT KILL TERM

OUT=/dev/null;ERR=$OUT
[ "$DEBUG" ] || DEBUG=`sed 's% %\n%g' /proc/cmdline | grep -w -i '^debug'`
[ "$DEBUG" ] && { OUT=/dev/stdout;ERR=/dev/stderr; }

Version='2.09.01'  ##changes from 2.04 : ash support, read instead of cat, for + case in parameters instead of dozends test

_usage(){
USAGE_MSG="
$0 [ PARAMETERS ]

example usage : DEBUG=1 probepart -d/dev/sdc1 /dev/sdd1 -m

PARAMETERS:
-V|--version : Showing version information.
-H|--help : Show this usage information.
-A|--all  : Show all disks noted in /proc/diskstats like ram|loop|mtd|md.
-M|--mach : Sets LANG to C for fdisk and does not prepend /dev/ in output.
#-d/dev/sdX [/dev/sdaY ..] : output only for given partitions or drives
-d/dev/sdaX [/dev/sdbY ..] : output only for given partitions

-b   : show size in bits (default)
-B   : Bytes
-kb  : 1000-kilo bits
-mb  : 1000-mega bits
-gb  : 1000-giga bits
-kib : 1024-kilo bits
-mib : 1024-mega bits
-gib : 1024-giga bits
-KB  : 1000-kilo Bytes
-MB  : 1000-mega Bytes
-GB  : 1000-giga Bytes
-KIB : 1024-kilo Bytes
-MIB : 1024-mega Bytes
-GIB : 1024-giga Bytes
-k : show sizes in kilobytes (KiB) #compat.
-m : show sizes in megabytes (MiB) #compat.
Without one of the above parameters it is the value found in
/sys/class/block/drive/size
; usually as blocksize=512 formatted to bits .

$2
"
USAGE_MSG=`gettext "$USAGE_MSG"`
echo "$USAGE_MSG"
exit $1
}

[ "`echo "$1" | grep -wiE "help|\-H"`" ] && _usage 0
[ "`echo "$1" | grep -wiE "version|\-V"`" ] && { echo "$0 -version $Version";exit 0; }
(mount |grep $Q -o "/proc " 2>>$ERR && mount |grep $Q -o "/sys " 2>>$ERR) || _usage 1 '/proc or /sys not mounted!'  ##+++edit4 sanity check

DEV='/dev/';LNG="$LANG";SIZE_FACTOR=1;
parameter_func(){
for p in $*; do P=${p//\-/}
case $P in
M|mach) DEV='';LNG=C;;
A|all)  SHOWALL=YES;;
b)		SIZE_FACTOR=1;;
kb)		SIZE_FACTOR=$((1*1000));;
mb)		SIZE_FACTOR=$((1*1000*1000));;
gb)		SIZE_FACTOR=$((1*1000*1000*1000));;
kib)	SIZE_FACTOR=$((1*1024));;
mib)	SIZE_FACTOR=$((1*1024*1024));;
gib)	SIZE_FACTOR=$((1*1024*1024*1024));;
B) 		SIZE_FACTOR=8;;
KB)		SIZE_FACTOR=$((8*1000));;
MB)		SIZE_FACTOR=$((8*1000*1000));;
GB)		SIZE_FACTOR=$((8*1000*1000*1000));;
KIB|k)	SIZE_FACTOR=$((8*1024));;
MIB|m)	SIZE_FACTOR=$((8*1024*1024));;
GIB)	SIZE_FACTOR=$((8*1024*1024*1024));;
d*|/dev/*)
test "$P" = d && continue
DEVICE=${P##*/}
#DEVICE=${DEVICE//[[:digit:]]/}
#DEVICE="${DEVICE}[0-9][0-9]"
[ "$DEVICES" ] && DEVICES="$DEVICES|$DEVICE" || DEVICES="$DEVICE"
;;
esac ; done
_debug "DEVICES='$DEVICES'"
}
#time parameter_func ##time for while or_function works only in bash, ash time only works on external commands
parameter_func $*
##ENDHEAD

disktype_func(){
     disktype /dev/"$1" |grep -iE -o '.* file system|swap|squashfs' |tail -n1 |awk '{print $1}' |tr '[A-Z]' '[a-z]'  ##+edit2 support detection of squashfs
}

filesystem_func(){  ##+++edit1
    [ "$FSTYPE" ] || FSTYPE=`guess_fstype /dev/"$1" 2>>$ERR`
    [ "$FSTYPE" = 'unknown' ] && FSTYPE=`disktype_func "$1"`   ##-+edit2
    [ "$FSTYPE" ] || FSTYPE='none or unknown'  ##-+edit2 added none to please pmount thanks to Keef
}

cddetect_func(){  ##+++edit1
    cddetect_quick -d/dev/"$1" >>$OUT && FSTYPE=`disktype_func "$1"` || FSTYPE='none or not inserted'   ##+edit3 none to please pmount thanks to Keef
}

present_removable(){
   cddetect_func "$drive"
   filesystem_func "$drive"
   echo "${DEV}$drive|$FSTYPE|$SIZE"
}

LANG=$LNG FDISK=`fdisk -l | grep '^/dev' |tr -s ' ' |sed 's%\(/dev/[[:alpha:]]*[0-9]*\) \([[:digit:]]*\) \(.*\)%\1 N \2 \3%'`

##MAIN
main_func(){
while read maj min drive rest; do
[ "$maj" -a " $min" -a "$drive" -a "$rest" ] || continue  ##+++edit4
[ "$drive" ] || continue   ##+++edit3
[ "$SHOWALL" ] || { [ "`echo $drive | grep -vE 'ram|loop|mtd|md'`" ] || continue; }
[ -b /dev/$drive ] || {
   _debug "'$maj' '$min' '$drive'";
   [ "$maj" -a "$min" -a "$drive" ] && mknod /dev/$drive b $maj $min 2>>$ERR || continue; }  ##+++edit2 : create nodes if not exists, older Puppy's static /dev/ directory supported only up to 15 partitions for each drive, newer only for sda up to 23.  ##+edit3 check for maj min not NULL
_debug "drive='$drive'"
#[ "$DEVICES" ] && { [ "`echo "$DEVICES" | grep -Ew "$drive"`" -o "`echo "$drive" | grep -E "$DEVICES"`" ] || continue; }
[ "$DEVICES" ] && { [ "`echo "$DEVICES" | grep -Ew "$drive"`" -o "`echo "$drive" | grep -Ew "$DEVICES"`" ] || continue; }
SIZE='';FSTYPE='';
[ -f /sys/class/block/$drive/size ] || continue
read SIZE </sys/class/block/$drive/size && SIZE=$((SIZE*512*8)) || continue
[ "$SIZE" = $((2*8*512)) ] && {
	SIZE=$((`echo "$FDISK" |grep -w "^/dev/$drive" | awk '{print $5}' |sed 's%[^[:digit:]]%%g'`*2*512*8));
	FSTYPE=`echo "$FDISK" |grep -w "^/dev/$drive" |cut -f7- -d ' '`'(none)'; }  ##+ edit2 added (none) to please pmount
SIZE=$((SIZE/SIZE_FACTOR))
REMOVEABLE=0
if [ "${drive//[[:alpha:]]/}" ]; then
 if [ -d /sys/class/block/$drive/device ]; then
 read REMOVEABLE </sys/class/block/$drive/removable || continue
 fi
 [ "$REMOVEABLE" = 0 ] || cddetect_func "$drive"
  filesystem_func "$drive"
  echo "${DEV}$drive|$FSTYPE|$SIZE"  ##edit1 wrong order for pmount
else  #whole drive
 if [ -d /sys/class/block/$drive/device ]; then
 read REMOVEABLE </sys/class/block/$drive/removable || continue
 if [ "$REMOVEABLE" = 1 ]; then
 if [ -f /sys/class/block/$drive/device/type ]; then  ##+++edit3
  if [ "`cat /sys/class/block/$drive/device/type`" = 5 ]; then
   present_removable
  fi
 else  ##+++edit3
   present_removable
 fi
 fi;fi
fi
#done</proc/partitions
done </proc/diskstats  ##-+edit3
}
#time main_func ##time for while or_function works only in bash, ash time only works on external commands
main_func
# Very End of this file 'sbin/probepart2.09' #
###END###
