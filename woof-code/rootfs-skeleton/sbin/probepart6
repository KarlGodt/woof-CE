#!/bin/bash
# bash for [[ A =~ syntax
# uses /proc/partitions
# two parts:
#       /proc/partitions and
# ls -1 /sys/class/block for sr[0-9] cd drives
# because some kernels do not print sr[0-9] drives in /proc/partitions
# this prints /dev/sr[0-9] twice
# duplicate code into functions
# more parameters for SIZE

test -f /etc/rc.d/f4puppy5 && . /etc/rc.d/f4puppy5

trap "exit 1" HUP INT QUIT KILL TERM

OUT=/dev/null;ERR=$OUT

[ "$DEBUG" ] && { OUT=/dev/stdout;ERR=/dev/stderr; }
[ "$DEBUG" = "2" ] && set -x

Version='1.4.1.1'  # duplicate of 1.4

_usage(){
USAGE_MSG="
$0 [ PARAMETERS ]

example usage : probepart -m

PARAMETERS:
-V|--version : showing version information
-H|--help    : show this usage information

-b   : show size in bits
-B   : Bytes
-kb  : 1000-kilo bits
-mb  : 1000-mega bits
-gb  : 1000-giga bits
-kib : 1024-kilo bits
-mib : 1024-mega bits
-gib : 1024-giga bits
-KB  : 1000-kilo Bytes
-MB  : 1000-mega Bytes
-GB  : 1000-giga Bytes
-KIB : 1024-kilo Bytes
-MIB : 1024-mega Bytes
-GIB : 1024-giga Bytes
-k : show sizes in kilobytes (KiB) #compat.
-m : show sizes in megabytes (MiB) #compat.
Without one of the above parameters it is the value found in
/sys/class/block/drive/size
; usually as blocksize=512 formatted to bits .

$2
"
USAGE_MSG=`gettext "$USAGE_MSG"`
echo "$USAGE_MSG"
exit $1
}

[ "`echo "$1" | grep -wiE "help|\-H"`" ] && _usage 0
[ "`echo "$1" | grep -wiE "version|\-V"`" ] && { echo "$0 -version $Version";exit 0; }

##
SIZE_FACTOR=1
#SIZE_PARAM=`echo "$@" | grep -m1 -o -w -E '\-k|\-m|\-b|\-B|\-kb|\-mb|\-gb|\-KB|\-MB|\-GB|\-kib|\-mib|\-gib|\-KIB|\-MIB|\-GIB'`
SIZE_PARAM=`echo "$@" | grep -m1 -o -w -i -E '\-k|\-m|\-b|\-B|\-kb|\-mb|\-gb|\-kib|\-mib|\-gib'`
_debug SIZE_PARAM=$SIZE_PARAM
  [ "$SIZE_PARAM" = '-b' ] && SIZE_FACTOR=1
  [ "$SIZE_PARAM" = '-B' ] && SIZE_FACTOR=8
 [ "$SIZE_PARAM" = '-kb' ] && SIZE_FACTOR=$((1*1000))
 [ "$SIZE_PARAM" = '-mb' ] && SIZE_FACTOR=$((1*1000*1000))
 [ "$SIZE_PARAM" = '-gb' ] && SIZE_FACTOR=$((1*1000*1000*1000))
 [ "$SIZE_PARAM" = '-KB' ] && SIZE_FACTOR=$((8*1000))
 [ "$SIZE_PARAM" = '-MB' ] && SIZE_FACTOR=$((8*1000*1000))
 [ "$SIZE_PARAM" = '-GB' ] && SIZE_FACTOR=$((8*1000*1000*1000))
[ "$SIZE_PARAM" = '-kib' ] && SIZE_FACTOR=$((1*1024))
[ "$SIZE_PARAM" = '-mib' ] && SIZE_FACTOR=$((1*1024*1024))
[ "$SIZE_PARAM" = '-gib' ] && SIZE_FACTOR=$((1*1024*1024*1024))
[ "$SIZE_PARAM" = '-KIB' ] && SIZE_FACTOR=$((8*1024))
  [ "$SIZE_PARAM" = '-k' ] && SIZE_FACTOR=$((8*1024))
[ "$SIZE_PARAM" = '-MIB' ] && SIZE_FACTOR=$((8*1024*1024))
  [ "$SIZE_PARAM" = '-m' ] && SIZE_FACTOR=$((8*1024*1024))
[ "$SIZE_PARAM" = '-GIB' ] && SIZE_FACTOR=$((8*1024*1024*1024))
_debug SIZE_FACTOR=$SIZE_FACTOR

disktype_func(){
    disktype /dev/"$1" |grep -iE 'file system|Swap' |tail -n1|awk '{print $1}' |tr '[A-Z]' '[a-z]'
}

filesystem_func(){
    [ "$FSTYPE" ] || FSTYPE=`guess_fstype /dev/"$1"`
    [ "$FSTYPE" = 'unknown' ] && FSTYPE=`disktype /dev/"$1" |grep -iE 'file system|Swap' |tail -n1 |awk '{print $1}' |tr '[A-Z]' '[a-z]'`
    [ "$FSTYPE" ] || FSTYPE=unknown
}

cddetect_func(){
    #cddetect_quick -d/dev/"$1" >>$OUT && FSTYPE=`disktype_func /dev/"$1"` || FSTYPE='not inserted'
     cddetect_quick -d/dev/"$1" >>$OUT && FSTYPE=`disktype_func "$1"` || FSTYPE='not inserted'
}

FDISK=`fdisk -l |grep '^/dev/' |tr -s '[[:blank:]]' |sed 's!\(/dev/[[:alnum:]]*\) \([[:digit:]]*\) \(.*\)!\1 N \2 \3!'`
while read line; do
[ "`echo "$line" | grep '^[[:digit:]]'`" ] || continue
[ "$line" ] || continue
drive=`echo $line |awk '{print $4}'`
SIZE='';FSTYPE='';
SIZE=$((`cat /sys/class/block/$drive/size`*512*8))  ##want bits
[ "$SIZE" = $((2*8*512)) ] && {
	SIZE=$((`echo "$FDISK" |grep -w "^/dev/$drive" | awk '{print $5}' |sed 's#[^[:digit:]]##g'`*2*512*8));
	FSTYPE=`echo "$FDISK" |grep -w "^/dev/$drive" |cut -f7- -d ' '`; }
SIZE=$((SIZE/SIZE_FACTOR))
REMOVEABLE=0
if [[ "${drive}" =~ '[0-9]' ]]; then
 if [ -d /sys/class/block/$drive/device ]; then
 REMOVEABLE=`cat /sys/class/block/$drive/removable`
 fi
#[ "$REMOVEABLE" = 0 ] || { cddetect_quick -d/dev/$drive >>$OUT && FSTYPE=`disktype /dev/$drive |grep -m1 'file system' |awk '{print $1}' |tr '[A-Z]' '[a-z]'` || FSTYPE='not inserted' ; }
[ "$REMOVEABLE" = 0 ] || cddetect_func "$drive"
#[ "$FSTYPE" ] || FSTYPE=`guess_fstype /dev/$drive`
#[ "$FSTYPE" = 'unknown' ] && FSTYPE=`disktype /dev/$drive |grep -m1 'file system' |awk '{print $1}' |tr '[A-Z]' '[a-z]'`
#[ "$FSTYPE" ] || FSTYPE=unknown
filesystem_func "$drive"

 echo "/dev/$drive|$FSTYPE|$SIZE"
else
 if [ -d /sys/class/block/$drive/device ]; then
 REMOVEABLE=`cat /sys/class/block/$drive/removable`
 if [ "$REMOVEABLE" = 1 ]; then
 if [ "`cat /sys/class/block/$drive/device/type`" = 5 ]; then

 cddetect_func "$drive"
 filesystem_func "$drive"

 echo "/dev/$drive|$FSTYPE|$SIZE"
 fi;fi;fi
fi
done </proc/partitions

SATA_CD_DRIVES=`ls -1 /sys/class/block | grep -E -e '^sr[0-9]*|^scd[0-9]*'`
while read drive; do
[ "$drive" ] || continue            ##+++ edit1 if no cd drives attached
[ -b /dev/$drive ] || continue      ##+++ edit1 further test if node correct
SIZE='';FSTYPE='';
SIZE=$((`cat /sys/class/block/$drive/size`*512*8))
SIZE=$((SIZE/SIZE_FACTOR))
REMOVEABLE=0
if [ -d /sys/class/block/$drive/device ]; then
 REMOVEABLE=`cat /sys/class/block/$drive/removable`
fi
[ "$REMOVEABLE" = 0 ] || cddetect_func "$drive"
filesystem_func "$drive"

 echo "/dev/$drive|$FSTYPE|$SIZE"
done <<EOI
$(echo "${SATA_CD_DRIVES}")
EOI
