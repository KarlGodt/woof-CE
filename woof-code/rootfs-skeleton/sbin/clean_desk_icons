#!/bin/sh
#BK called from $HOME/.xinitrc
#v410 remove icons when drives removed.
#v410 omit icon if optical drive; defer it to pup_event_frontend_d
#w014 bugfix, refresh icons if removable drive swapped when PC turned off.


  _TITLE_="pup_clean_desk_icons.sh"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="$0"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
[ "$HAVE_F4PUPPY5" ] || source /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

TWO_HELP=''; TWO_VERSION=''; TWO_VERBOSE=''; TWO_DEBUG=''; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG=""
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap
}

export LANG=C
. /etc/eventmanager #has RAMSAVEINTERVAL, ICONDESK, ICONPARTITIONS, HOTPLUGNOISY, HOTPLUGON, FLOPPYICON.
. /etc/rc.d/functions4puppy4

PUP_EVENT_DIR="$HOME/Choices/Puppy/.pup_event"
# PUP_EVENT_DIR="$HOME/.pup_event"

DEBUG=1

ePUPPYPIN=`grep -v "$PUP_EVENT_DIR/drive_" $HOME/Choices/ROX-Filer/PuppyPin | grep -v '</pinboard>'`

__old_change__(){
#v403 /usr/sbin/eventmanager creates this file if all icons need to be rebuilt...
if [ -f /tmp/pup_event_change_icons.flg ];then
 IconChange=`cat /tmp/pup_event_change_icons.flg`
fi
_info "$IconChange"

if [ "$IconChange" = "ICONWIPE" ]; then
 #rm -f /tmp/pup_event_change_icons.flg

 rm $VERB -f $HOME/Choices/ROX-Filer/PuppyPin
 echo "$ePUPPYPIN"   > $HOME/Choices/ROX-Filer/PuppyPin
 echo '</pinboard>' >> $HOME/Choices/ROX-Filer/PuppyPin
 rm $VERB -rf $PUP_EVENT_DIR/drive_* 2>$ERR
 _sync
 sleep 1

 #rox -p $HOME/Choices/ROX-Filer/PuppyPin
 #. /etc/rc.d/functions4puppy4

 _debug "now changing icons"
  pidof mut && {
      Floppy=`mut drivelist | grep -oe fd[0-9]*`; } || {
          Floppy=`mut --noserv drivelist | grep -oe fd[0-9]*`; }
  _debug "$Floppy"

  Partitions=` probepart -s | grep -v none | grep -v swap | cut -f 1 -d '|' | cut -f 3 -d '/'`
  _debug "$Partitions"

  [ "$Floppy" ] && { for i in $Floppy; do icon_remove_func $i;done;i=''; }
  [ "$Partitions" ] && { for i in $Partitions; do icon_remove_func $i; done ;i=''; }
  sleep 1

 # for i in $Floppy; do icon_unmounted_func $i floppy; done; i=0
 # for i in $Partitions; do icon_unmounted_func $i drive; done ; i=0
 # Mounted=`mount | grep mnt | cut -f 1 -d " " | cut -f 3 -d '/'`
 # for i in $Mounted; do icon_mounted_func $i drive; done; i=0
 # Rootdevice=`df | grep -w '/' | tr -s " " | cut -f 1 -d " " | cut -f 3 -d '/'`
 # icon_mounted_func $Rootdevice drive
 # sync
 # rm -f /tmp/pup_event_change_icons.flg

 #icon_remove_func
 #icon_unmounted_func
 #icon_mounted_func

 Cleandeskicons=1

 for i in $Floppy ; do
                DRV_NAME=$i
                DRV_CATEGORY="floppy"
                icon_unmounted_func $DRV_NAME $DRV_CATEGORY
            done
            Drives=`probedisk2 | cut -f 1 -d '|'`
            _debug $Drives
            PROBEPART=`probepart -k | grep -E '\|ext4\||\|ntfs\||\|msdos\||\|vfat\||\|ext2\||\|ext3\||\|iso9660\||\|xfs\||\|reiser'`
            #Partitions=`probepart | cut -f1 -d '|'`
            for i in $Partitions ; do
                DRV=`echo $i | tr -d [0-9][0-9]`
                #DRV_NAME=`echo $i | cut -f 3 -d '/'`
                DRV_CATEGORY=`probedisk2 | grep  $DRV | cut -f 2 -d '|'`
                DRV_NAME=$i
                DRVINFO=`echo "$PROBEPART" | grep "$i" | cut -f 1,2,3 -d '|' | tr '\n' ' '`
                FSTYPE=`echo -n "$DRVINFO" | cut -f 2 -d '|'`
                _debugx FSTYPE $FSTYPE
                _debugx DRV_NAME $DRV_NAME
                _debugx DRV_CATEGORY $DRV_CATEGORY
                icon_unmounted_func $DRV_NAME $DRV_CATEGORY $FSTYPE
            done

        Mounted=`/bin/df | tr -s ' ' | cut -f 1 -d " " | tr [A-Z] [a-z] | sed 's/filesystem//'`
        for i in $Mounted; do #todo :shmfs
        FSTYPE=`echo "$PROBEPART" | grep $i | cut -f 2 -d '|'`
        DRV_NAME=`echo $i | cut -f 3 -d '/'`
        DRV=`echo $i | tr -d [0-9][0-9]`
        DRV_CATEGORY=`probedisk2 | grep  $DRV | cut -f 2 -d '|'`
                _debugx FSTYPE $FSTYPE
                _debugx DRV_NAME $DRV_NAME
                _debugx DRV_CATEGORY $DRV_CATEGORY
        icon_mounted_func $DRV_NAME $DRV_CATEGORY $FSTYPE
        done
    Cleandeskicons=0
 exit
fi
}

__old__(){
#remove all invalid drive icons off desktop...
echo -n "" > /tmp/pup_event_ok_pin
if [ "$ICONDESK" = "false" ];then
 #leave single 'drives' icon on desktop...
 grep "$PUP_EVENT_DIR/drive_drives" $HOME/Choices/ROX-Filer/PuppyPin >> /tmp/pup_event_ok_pin
 rm $VERB -rf "$PUP_EVENT_DIR"/drive_[^d]* 2>$ERR #delete all except drive_drives.

else

 #v410 Delete drive_ directories for removed drives...
 #note, this will not detect removed optical and floppy discs (see /sbin/pup_event_frontend_d).
 #Get the directory names for the drives only, not the partitions, to avoid redundant iterations through the for-loop.
 DIR_DRVS=`ls -1 $PUP_EVENT_DIR | sed 's/drive_//' | grep -E "^hd.$|^sd.$|^sr|^mmcblk.$"`
 for oneDRV in $DIR_DRVS
 do
  [ -d $PUP_EVENT_DIR/drive_$oneDRV ] || continue
  [ -e /sys/block/${oneDRV} ] || rm $VERB -rf $PUP_EVENT_DIR/drive_${oneDRV}*
 done

 for oneDRV in `ls -1 /sys/block | grep -vE 'loop|ram|zram|mtd'`
 do
  odPATTERN="$HOME/\\.pup_event/drive_${oneDRV}"
  OKDRV=`grep "$odPATTERN" $HOME/Choices/ROX-Filer/PuppyPin`
  if [ "$OKDRV" = "" ];then
   rm $VERB -rf $PUP_EVENT_DIR/drive_${oneDRV}* 2>$ERR
  else
   [ -d $PUP_EVENT_DIR/drive_${oneDRV} ] || continue #v408
   DRVCUT=`echo -n "$oneDRV" | cut -c 1,2` #v410
   [ "$DRVCUT" = "sr" ] && continue #v410 omit icon if optical drive; defer it to pup_event_frontend_d
   [ "$DRVCUT" = "sc" ] && continue #v410 scd, ditto.
   if [ "$DRVCUT" = "hd" ];then
    MEDIACAT=`cat /proc/ide/${oneDRV}/media`
    [ "$MEDIACAT" = "cdrom" ] && continue #v410 omit icon if optical drive; defer it to pup_event_frontend_d
   fi
   #w014 user may have swapped removable drives while pc turned off...
   DRVMODEL1=`grep -o '<Summary>.*Size:' $HOME/.pup_event/drive_${oneDRV}/AppInfo.xml | cut -f 2-20 -d ' ' | rev | cut -f 2-20 -d ' ' | rev`
   #note, this must be same as done in /sbin/probedisk2...
   DRVMODEL2=`cat /sys/block/$oneDRV/device/vendor | tr -s ' '``cat /sys/block/${oneDRV}/device/model | tr -s ' '`
   if [ "$DRVMODEL1" != "$DRVMODEL2" ];then
    rm $VERB -rf $PUP_EVENT_DIR/drive_${oneDRV}* 2>$ERR
    continue
   fi
   echo "$OKDRV" >> /tmp/pup_event_ok_pin
  fi
 done

fi

#if [ "`cat /tmp/pup_event_ok_pin`" != "" ];then
 echo "$ePUPPYPIN" >  $HOME/Choices/ROX-Filer/PuppyPin
 cat /tmp/pup_event_ok_pin >> $HOME/Choices/ROX-Filer/PuppyPin
 echo '</pinboard>' >> $HOME/Choices/ROX-Filer/PuppyPin
#fi
}

remove_pinboard_func() { #needs name of entire drive or partition (PART_NAME)
 local DEBUG=1
 case $PART_NAME in
 hd*[0-9]*|sd*[0-9]*|mmc*[0-9]*)
 PART_NAME=`echo $PART_NAME | tr -d '/' | sed 's#dev##g'` ;;
 hd*|sd*|mmc*)
 PART_NAME=`echo $PART_NAME | tr -d '/' | sed 's#dev##g' | sed 's/[0-9].*//g'`;;
 fd*|sr*|scd*|*)
 PART_NAME=`echo $PART_NAME | tr -d '/' | sed 's#dev##g'`;;
 esac

 ppPATTERN=" label=\"$PART_NAME"
 ppPATTERN="${ppPATTERN}.*"

 if [ ! "`grep "$ppPATTERN" "$HOME"/Choices/ROX-Filer/PuppyPin`" ]; then
 return; fi
 ALLNAMES=`grep -o "$ppPATTERN" "$HOME"/Choices/ROX-Filer/PuppyPin | cut -f 2 -d '"' | sort -r` #'geany
 _debug "remove_pinboard_func:$PART_NAME:$ALLNAMES"
 for oneDRVNAME in $ALLNAMES
 do
 _debug "remove_pinboard_func:oneDRVNAME=$oneDRVNAME"

  echo "<?xml version=\"1.0\"?>
<env:Envelope xmlns:env=\"http://www.w3.org/2001/12/soap-envelope\">
 <env:Body xmlns=\"http://rox.sourceforge.net/SOAP/ROX-Filer\">
  <PinboardRemove>
   <Path>$PUP_EVENT_DIR/drive_${oneDRVNAME}</Path>
  </PinboardRemove>
 </env:Body>
</env:Envelope>"  | rox -R
 done
}

_do_clean(){
while read line
do
test "$line" || continue
ICONPATH=`echo "$line" | grep -o '>[^<>]*</icon>' | awk -F'[<>]' '{print $2}'`
echo "$ICONPATH"
rm $VERB -rf "$ICONPATH"
PART_NAME=${ICONPATH##*drive_}
remove_pinboard_func       # pup_event_frontend_d
#_icon_remove $PART_NAME # functions4puppy4
done << EoI
`grep '/drive_' $HOME/Choices/ROX-Filer/PuppyPin`
EoI

#grep -v '/drive_' $HOME/Choices/ROX-Filer/PuppyPin >/tmp/puppypin
#cp $VERB /tmp/puppypin $HOME/Choices/ROX-Filer/PuppyPin

}
_do_clean

_debug "Finished."
###END###
