#!/bin/sh
#
# New header by Karl Reimer Godt, September 2014
  _TITLE_="Puppy_poweroff"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="/sbin/poweroff"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
source /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in 1; do shift; done; }

_trap

}
# End new header
#

PROG='/sbin/poweroff'
debugging_variables(){
ERR=/dev/null;OUT=$ERR;VERB='';L_VERB='';A_VERB='';QUIET='-q'; ##+++2012-03-10
[ "$DEBUG" ] && { ERR=/dev/stderr;OUT=/dev/stdout;VERB=-v;L_VERB=--verbose;A_VERB=-verbose;QUIET=''; }
}
debugging_variables
echo "$@" | grep $QUIET -iE '\-h|help|usage' && { echo -e "\\033[0;32m`file $0`\nPuppy Linux Wrapper that calls busybox poweroff:\\033[0;39m\n";exec /bin/busybox poweroff --help; }  ##+++2013-03-11
echo "$@" | grep $QUIET -iE 'verbose|debug' && { DEBUG=Y; debugging_variables; }
echo "$@" | grep $QUIET -iE 'test|check' && { DEBUG=Y; debugging_variables;set -n; }
pidof X 1>$OUT 2>$ERR && { echo "X is still running. Please run wm${0##*/}. Exiting script.";exit 1; }

interactive(){
#sleep 5
echo "Really want to poweroff ?"
read -t 60 K
echo
if [  ! "$K" = "y" -a ! "$K" = "Y" ] ; then
echo -e "\\033[1;34m""OK , stopping $PROG""\\033[0;39m"
echo
exit 0
fi
}

/etc/rc.d/rc.shutdown
Err=$?
[ "$Err" = 199 ] && exit 0
if [ "$Err" -ne 0 ] ; then
if [ -n "`mount | grep /proc`" ] ; then
echo -e "\\033[0;31m""Something went wrong running /etc/rc.d/rc.shutdown""\\033[0;39m"
echo -e "\\033[1;31m""Error returncode is '$Err'""\\033[0;39m"
echo
exit $Err
fi
fi

exec /bin/busybox poweroff "$@"
# Very End of this file 'sbin/poweroff' #
###END###
