#!/bin/ash
#
# New header by Karl Reimer Godt, September 2014
  _TITLE_="Puppy_poweroff"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="/sbin/poweroff"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
source /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in 1; do shift; done; }

_trap

}
# End new header
#

Version='1.1 KRG'
ERR=/dev/null;OUT=$ERR;VERB='';L_VERB='';A_VERB='';QUIET='-q'; ##+++2012-03-10
[ "$DEBUG" ] && { ERR=/dev/stderr;OUT=/dev/stdout;VERB=-v;L_VERB=--verbose;A_VERB=-verbose;QUIET=''; }
#pidof X 1>$OUT 2>$ERR && { echo "X is still running. Please run wm${0##*/}. Exiting script.";exit 1; }

usage(){
MSG="
$0 [help[|force|debug|verbose]|BB PARAMETERS]
Version $Version .
Puppy poweroff script to run
/etc/rc.d/rc.shutdown and finally
/bin/busybox poweroff .
Simple PARAMETERS
verbose,debug,force are passed to rc.shutdown,
anay other PARAMETERS get passed to busybox poweroff .
`busybox poweroff --help 2>&1`
"
if [ "$2" ];then
MSG="$MSG

$2
"
fi
echo "$MSG"
[ "$DISPLAY" ] && xmessage -bg black -fg yellow "$MSG"
exit $1
}

for i in $@;do
case $i in
help)
/etc/rc.d/rc.shutdown $i
usage 0 ;;
force|debug|verbose) RC="$RC $i" ;;
*) POFF="$POFF $i" ;;
esac;done

#if [ "`ps | grep -w 'X' | grep -v 'grep'`" != "" ]; then
if [ "`pidof X`" ]; then
echo "Using '`which wmpoweroff`' $@ ..."
#exec wmpoweroff "$@"
wmpoweroff "$@"
fi

/etc/rc.d/rc.shutdown "$RC"
RV=$?
[ "$RV" = '199' ] && { echo "$0:Bailing out." >/dev/console; exit 0; }
[ "$RV" != '0' ] && { echo "rc.shutdown exited with '$RV'" >/dev/console; exit 1; }
echo -e '\033[0;34m'"Executing /bin/busybox poweroff $POFF"'\033[0;39m' >/dev/console
exec /bin/busybox poweroff $POFF
# Very End of this file 'sbin/poweroff' #
###END###
