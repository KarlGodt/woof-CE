#!/bin/ash
#
# New header by Karl Reimer Godt, September 2014
  _TITLE_="Puppy_poweroff"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="/sbin/poweroff"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
[ "$HAVE_F4PUPPY5" ] || source /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

TWO_HELP='1'; TWO_VERSION='1'; TWO_VERBOSE=''; TWO_DEBUG=''; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap

}
# End new header
#

Version='1.1 KRG'
ERR=/dev/null;OUT=$ERR;VERB='';L_VERB='';A_VERB='';QUIET='-q'; ##+++2012-03-10
[ "$DEBUG" ] && { ERR=/dev/stderr;OUT=/dev/stdout;VERB=-v;L_VERB=--verbose;A_VERB=-verbose;QUIET=''; }
#pidof X 1>$OUT 2>>$ERR && { echo "X is still running. Please run wm${0##*/}. Exiting script.";exit 1; }

usage(){
MSG="
$0 [help][force|debug|verbose][BB PARAMETERS]
Version $Version .
Puppy poweroff script to run
/etc/rc.d/rc.shutdown and finally
/bin/busybox poweroff .
The Simple PARAMETERS verbose,debug,force
are passed to rc.shutdown,
any other PARAMETERS get passed to busybox poweroff .
`busybox poweroff --help 2>&1`
"
if [ "$2" ];then
MSG="$MSG

$2
"
fi
echo "$MSG"
[ "$DISPLAY" ] && xmessage -bg black -fg yellow "$MSG"
exit $1
}

for i_ in $@;do
case $i_ in
*help|*usage)
/etc/rc.d/rc.shutdown $i_
usage 0 ;;
*force) FORCE=1; RC="$RC $i_" ;;
*debug|*verbose) RC="$RC $i_" ;;
*) POFF="$POFF $i_" ;;
esac;done

#if [ "`ps | grep -w 'X' | grep -v 'grep'`" != "" ]; then
if [ "`pidof X`" -a ! "$FORCE" ]; then
echo "Using '`which wmpoweroff`' $@ ..."
exec wmpoweroff "$@"
#wmpoweroff "$@"  #kills X, WM, pup_event
fi

# REM : Give final reboot message containing OS, KERNEL and kCMDLINE
TIME_OUT=5s
# REM: Reboot problems with Dell computers ... :(
# REM: Reboot worked for kernel 2.6.30 , but not later ones .. :(
. /etc/DISTRO_SPECS
. /etc/rc.d/f4puppy5
_kernel_version5
case $KERNEL_RELEASE in
2.6.3[1-9]*|3*) RBOOT="$RBOOT -f -n";;
esac
read KERNEL_CMDLINE </proc/cmdline # before umount -ar in rc.shutdown


/etc/rc.d/rc.shutdown "$RC"
RV=$?
[ "$RV" = '199' -a ! "$FORCE" ] && { echo "$0:Bailing out."               >/dev/console; exit 0; }
[ "$RV" != '0' -a ! "$FORCE" ]  && { echo "rc.shutdown exited with '$RV'" >/dev/console; exit 1; }


__unmount_ar__(){
# REM: could add -l --lazy option..?
busybox umount $VERB $VERB -ar 2>>$ERR

if [ "$DEBUG" ]; then
echo -e '\033[0;36m'"unmounted all -r  Tried to remount devices as read-only if mount is busy"'\033[0;39m'
test -e /proc/mounts && { ps | grep -v '\['; mount; }
fi
}

__bb_poweroff__help__(){
    cat >&1 <<EoI
BusyBox v1.21.1 (2013-07-11 04:56:32 GMT+1) multi-call binary.

Usage: poweroff [-d DELAY] [-n] [-f]

Halt and shut off power

    -d SEC  Delay interval
    -n  Do not sync
    -f  Force (don't go through init)
EoI
}

echo -e '\033[1;34m'"$DISTRO_NAME $DISTRO_VERSION
$KERNEL_RELEASE
$KERNEL_CMDLINE :
Executing busybox poweroff '$POFF' in '$TIME_OUT' sec..."'\033[0;39m'

#echo -e '\033[1;34m'"Executing /bin/busybox poweroff '$POFF'"'\033[0;39m' >/dev/console

# REM : Finally poweroff ...
sleep $TIME_OUT
echo -e '\0007' ##BEEP

/bin/busybox poweroff $POFF
exec /bin/busybox poweroff $POFF

# Very End of this file 'sbin/poweroff' #
###END###
