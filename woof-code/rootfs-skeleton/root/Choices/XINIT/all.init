case $1 in
stop) return ;;
esac


#variables created at bootup by /initrd/usr/sbin/init...
. /etc/rc.d/PUPSTATE

KERNVER="`uname -r`" #w481

BAREVIEW="bareview"
[ "`which bareview`" = "" ] && BAREVIEW="defaulthtmlviewer"

sleep 2 #let the dust settle first.

#w002 this goes into the tray. eggtray gtk app written by mu...
CURRPS="`ps`"

userresources=$HOME/.Xresources
usermodmap=$HOME/.Xmodmap
sysresources=/usr/lib/X11/xinit/Xresources
sysmodmap=/usr/lib/X11/xinit/.Xmodmap

# merge in defaults and keymaps

if [ -f $sysresources ]; then
    xrdb -merge -nocpp $sysresources
fi

if [ -f $sysmodmap ]; then
    xmodmap $sysmodmap
fi

if [ -f $userresources ]; then
    xrdb -merge -nocpp $userresources
fi

if [ -f $usermodmap ]; then
    xmodmap $usermodmap
fi

#0.9.8 sync selection-buffer and clipboard. only useful for older apps
#such as rxvt that use the selection-buffer...
[ -f /usr/bin/autocutsel ] && /usr/bin/autocutsel &
#...disadvantage of this is it creates a little square bottom-right of screen.

[ -f /usr/local/bin/agenda_chk ] && agenda_chk &

if [ -f /root/.xset.sh ];then
 #this is created by /usr/bin/pupx...
 eval "/root/.xset.sh"
else
 ##Xorg has it's own fontpath settings in /etc/X11/xorg.conf...
 #if [ "`readlink /usr/bin/X`" != "Xorg" ];then
 # #xset fp+ /usr/lib/X11/fonts/Type1/
 # #xset fp+ /usr/lib/X11/fonts/TTF/
 # xset fp+ /usr/share/fonts/default/Type1/
 # xset fp+ /usr/share/fonts/default/TTF/
 #fi
 xset s 600 600 s blank
fi

#v1.0.7 also see /etc/rc.d/rc.local0
if [ -f /root/.fonts/fonts.dir ];then
 xset fp+ /root/.fonts/
fi

setxkbmap -rules xorg -model pc102 -layout us,de -variant "" -option grp:rwin_toggle,lv3:ralt_switch


#v2.01 hide cursor when not moving... (setup in /usr/sbin/input-wizard)
if [ -f /etc/mousehide ];then
 IDLETIME="`cat /etc/mousehide | cut -f 1 -d ','`"
 [ ! "$IDLETIME" = "0" ] && unclutter -idle $IDLETIME &
fi

glipper_func(){
#v2.17 made it optional...
[ -f /root/.glipper_on ] && glipper &
}

#v2.17 suggested by andrei...

if [ -d $HOME/Startup ];then
 #EXEF=`ls /root/Startup | grep -v -i 'Readme'`
 # cd $HOME/Startup
 for a in $HOME/Startup/* #### $EXEF
 do
  [ -f "$a" -a -x "$a" ] && { echo "Starting $a"
  #&&
  exec $a &
  }
  #### $HOME/Startup/$a
  sleep 1
 done
fi

#cd $HOME
if [ "$PROG" != "$0" ] ; then
return
else
exit
fi
###END###
