
# event=button power.*
# action=/usr/local/bin/power.sh "%e"

#event=ac_adapter action=/etc/acpi/ac.sh %e


#event=button/power PWRF 00000080 action=/etc/acpi/powerbtn.sh %e
#event=0x00000080 action=/etc/acpi/powerbtn.sh %e

#PWRF /etc/acpi/powerbtn.sh %e
#PWRB /etc/acpi/powerbtn.sh %e


#event=HKEY.* action=/etc/acpi/hotkey.pl %e

#event=button[ /]sleep action=/etc/acpi/actions/sleepbtn.sh %e


############################################################
#acpid.c

#ifndef EV_SW
# define EV_SW         0x05
#endif
#ifndef EV_KEY
# define EV_KEY        0x01
#endif
#ifndef SW_LID
# define SW_LID        0x00
#endif
#ifndef SW_RFKILL_ALL
# define SW_RFKILL_ALL 0x03
#endif
#ifndef KEY_POWER
# define KEY_POWER      116     /* SC System Power Down */
#endif
#ifndef KEY_SLEEP
# define KEY_SLEEP      142     /* SC System Sleep */
#endif

#static const struct acpi_event f_evt_tab[] = {
#   { "EV_KEY", 0x01, "KEY_POWER", 116, 1, "button/power PWRF 00000080" },
#   { "EV_KEY", 0x01, "KEY_POWER", 116, 1, "button/power PWRB 00000080" },
#};


#static void parse_conf_file(const char *filename)
#{
#   parser_t *parser;
#   char *tokens[2];
#
#   parser = config_open2(filename, fopen_for_read);
#
#   if (parser) {
#       while (config_read(parser, tokens, 2, 2, "# \t", PARSE_NORMAL)) {
#           act_tab = xrealloc_vector(act_tab, 1, n_act);
#           act_tab[n_act].key = xstrdup(tokens[0]);
#           act_tab[n_act].action = xstrdup(tokens[1]);
#           n_act++;
#       }
#       config_close(parser);
#   } else {
#       act_tab = (void*)f_act_tab;
#       n_act = ARRAY_SIZE(f_act_tab);
#   }
#}
#struct acpi_action {
#   const char *key;
#   const char *action;
#};
#
#static const struct acpi_action f_act_tab[] = {
#   { "PWRF", "PWRF/00000080" },
#   { "LID0", "LID/00000080" },
#};

#if (option_mask32 & OPT_e) {
#           event = NULL;
#           if (option_mask32 & OPT_e) {
#               char *buf;
#               int len;
#
#               buf = xmalloc_reads(pfd[i].fd, NULL);
#               /* buf = "button/power PWRB 00000080 00000000" */
#               len = strlen(buf) - 9;
#               if (len >= 0)
#                   buf[len] = '\0';
#               event = find_action(NULL, buf);
#               free(buf);

## bash-3.00# cat /proc/acpi/event
## button/power PWRF 00000080 00000005

#if (buf) {
#           if (strncmp(buf, evt_tab[i].desc, strlen(buf)) == 0) {
#               action = evt_tab[i].desc;
#               break;
#           }
#       }



PWRF     busybox/powerbutton
#PWRF PWRF/00000080

#./keyboard/actions/116: ''
#UNHANDLED KEY_POWER
POWER busybox/powerbutton

#} else {
#               struct input_event ev;
#
#               if (sizeof(ev) != full_read(pfd[i].fd, &ev, sizeof(ev)))
#                   continue;
#
#               if (ev.value != 1 && ev.value != 0)
#                   continue;
#
#               event = find_action(&ev, NULL);

MUTE        keyboard/actions/113
VOLUMEDOWN      keyboard/actions/114
VOLUMEUP        keyboard/actions/115
#POWER       keyboard/actions/116
KPEQUAL     keyboard/actions/117
KPPLUSMINUS     keyboard/actions/118
PAUSE       keyboard/actions/119
SCALE       keyboard/actions/120
KPCOMMA     keyboard/actions/121
HANGEUL     keyboard/actions/122
HANJA       keyboard/actions/123
YEN     keyboard/actions/124
LEFTMETA        keyboard/actions/125
RIGHTMETA       keyboard/actions/126
COMPOSE     keyboard/actions/127
STOP        keyboard/actions/128
AGAIN       keyboard/actions/129
PROPS       keyboard/actions/130
UNDO        keyboard/actions/131
FRONT       keyboard/actions/132
COPY        keyboard/actions/133
OPEN        keyboard/actions/134
PASTE       keyboard/actions/135
FIND        keyboard/actions/136
CUT     keyboard/actions/137
HELP        keyboard/actions/138
MENU        keyboard/actions/139
CALC        keyboard/actions/140
SETUP       keyboard/actions/141
SLEEP       keyboard/actions/142
WAKEUP      keyboard/actions/143
FILE        keyboard/actions/144
SENDFILE        keyboard/actions/145
DELETEFILE      keyboard/actions/146
XFER        keyboard/actions/147
PROG1       keyboard/actions/148
PROG2       keyboard/actions/149
WWW     keyboard/actions/150
MSDOS       keyboard/actions/151
COFFEE      keyboard/actions/152
DIRECTION       keyboard/actions/153
CYCLEWINDOWS        keyboard/actions/154
MAIL        keyboard/actions/155
BOOKMARKS       keyboard/actions/156
COMPUTER        keyboard/actions/157
BACK        keyboard/actions/158
FORWARD     keyboard/actions/159
CLOSECD     keyboard/actions/160
EJECTCD     keyboard/actions/161
EJECTCLOSECD        keyboard/actions/162
NEXTSONG        keyboard/actions/163
PLAYPAUSE       keyboard/actions/164
PREVIOUSSONG        keyboard/actions/165
STOPCD      keyboard/actions/166
RECORD      keyboard/actions/167
REWIND      keyboard/actions/168
PHONE       keyboard/actions/169
ISO     keyboard/actions/170
CONFIG      keyboard/actions/171
HOMEPAGE        keyboard/actions/172
REFRESH     keyboard/actions/173
EXIT        keyboard/actions/174
MOVE        keyboard/actions/175
EDIT        keyboard/actions/176
SCROLLUP        keyboard/actions/177
SCROLLDOWN      keyboard/actions/178
KPLEFTPAREN     keyboard/actions/179
KPRIGHTPAREN        keyboard/actions/180
NEW     keyboard/actions/181
REDO        keyboard/actions/182
F13     keyboard/actions/183
F14     keyboard/actions/184
F15     keyboard/actions/185
F16     keyboard/actions/186
F17     keyboard/actions/187
F18     keyboard/actions/188
F19     keyboard/actions/189
F20     keyboard/actions/190
F21     keyboard/actions/191
F22     keyboard/actions/192
F23     keyboard/actions/193
F24     keyboard/actions/194
PLAYCD      keyboard/actions/200
PAUSECD     keyboard/actions/201
PROG3       keyboard/actions/202
PROG4       keyboard/actions/203
DASHBOARD       keyboard/actions/204
SUSPEND     keyboard/actions/205
CLOSE       keyboard/actions/206
PLAY        keyboard/actions/207
FASTFORWARD     keyboard/actions/208
BASSBOOST       keyboard/actions/209
PRINT       keyboard/actions/210
HP      keyboard/actions/211
CAMERA      keyboard/actions/212
SOUND       keyboard/actions/213
QUESTION        keyboard/actions/214
EMAIL       keyboard/actions/215
CHAT        keyboard/actions/216
SEARCH      keyboard/actions/217
CONNECT     keyboard/actions/218
FINANCE     keyboard/actions/219
SPORT       keyboard/actions/220
SHOP        keyboard/actions/221
ALTERASE        keyboard/actions/222
CANCEL      keyboard/actions/223
BRIGHTNESSDOWN      keyboard/actions/224
BRIGHTNESSUP        keyboard/actions/225
MEDIA       keyboard/actions/226
SWITCHVIDEOMODE     keyboard/actions/227
KBDILLUMTOGGLE      keyboard/actions/228
KBDILLUMDOWN        keyboard/actions/229
KBDILLUMUP      keyboard/actions/230
SEND        keyboard/actions/231
REPLY       keyboard/actions/232
FORWARDMAIL     keyboard/actions/233
SAVE        keyboard/actions/234
DOCUMENTS       keyboard/actions/235
BATTERY     keyboard/actions/236
BLUETOOTH       keyboard/actions/237
WLAN        keyboard/actions/238
UWB     keyboard/actions/239
UNKNOWN     keyboard/actions/240
VIDEO_NEXT      keyboard/actions/241
VIDEO_PREV      keyboard/actions/242
BRIGHTNESS_CYCLE        keyboard/actions/243
BRIGHTNESS_ZERO     keyboard/actions/244
DISPLAY_OFF     keyboard/actions/245
WIMAX       keyboard/actions/246
RFKILL      keyboard/actions/247
MICMUTE     keyboard/actions/248
