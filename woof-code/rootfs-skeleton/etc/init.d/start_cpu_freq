#!/bin/sh
# BK got this from http://murga-linux.com/puppy/viewtopic.php?t=55417&start=15
# but added test for /proc/acpi, bios-date, processor-manufacturer.
# added extra code provided by pakt.
#100603 gamble, any CPU >=2007 can handle acpi-cpufreq, or it will fail to load.
#101014 improve test for older computers, and fix menu --well no probably not the latter.
#101114 rerwin: refine usage of dmidecode.

#disable freq scaling for older computers...
#[ ! -d /proc/acpi ] && FLAGEXIT='yes'
if [ ! -d /proc/acpi ];then #101114
 FLAGEXIT='yes'
else
 [ `dmidecode -s "bios-release-date" | cut -f 3 -d '/' | rev | cut -c 1,2 | rev` -lt 7 ] && FLAGEXIT='yes' #<2006 100603: <2007 101014
fi
if [ "$FLAGEXIT" = "yes" ];then #101014
# if [ -f /usr/share/applications/cpu_freq.desktop  ];then
#  rm -f /usr/share/applications/cpu_freq.desktop
#  fixmenus
#  #[ "`pidof jwm`" != "" ] && jwm -restart #ideally should do this, but with any luck user will look at this item after next boot.
# fi
 exit
fi


AMD='powernow-k6 powernow-k7 powernow-k8'
CYRIX='gx-suspmod'
INTEL='p4-clockmod speedstep-centrino speedstep-ich'
NVIDIA='cpufreq-nforce2'
# description:    LongRun driver for Transmeta Crusoe and Efficeon processors.
TRANSM='longrun'
VIA='longhaul e_powersaver'

FREQMOD="acpi-cpufreq"
FREQMOD_OPS='acpi_pstate_strict=1'
GOVERNOR='ondemand'      # REM: conservative, ondemand, performance, powersave
GOVERNOR_OPS=''
case "$1" in
 start)

  _detect_cpu_manufacturer(){
  CPUMAN="`dmidecode -s 'processor-manufacturer' | tr '[A-Z]' '[a-z]' | cut -f 1 -d ' '`"
  case $CPUMAN in
   amd)    mFREQMODS="${AMD}" ;;
   cyrix)   mFREQMODS="${CYRIX}" ;;
   intel)    mFREQMODS="${INTEL}" ;;
   nvidia)    mFREQMODS="${NVIDIA}" ;;
   transmeta) mFREQMODS="${TRANSM}" ;;
   via)       mFREQMODS="${VIA}" ;;
  esac
  }
  _detect_cpu_manufacturer

  for oneMOD in $mFREQMODS
  do
   sleep 1
   modprobe $VERB $oneMOD
   [ "$?" = 0 ] || continue
   #if [ $? -eq 0 ];then
    modprobe $VERB $FREQMOD $FREQMOD_OPS
     [ "$?" = 0 ] || break
    modprobe $VERB cpufreq_${GOVERNOR} $GOVERNOR_OPS
    if [ $? -eq 0 ];then
     for cpuD in `ls -1v /sys/devices/system/cpu/ | grep 'cpu[0-9]'`
     do
      [ -w /sys/devices/system/cpu/$cpuD/cpufreq/scaling_governor ] || continue
      echo $GOVERNOR >/sys/devices/system/cpu/$cpuD/cpufreq/scaling_governor
      [ "$?" = 0 ] && echo "$0:issued '$GOVERNOR' to /sys/devices/system/cpu/$cpuD/cpufreq/scaling_governor"
     done

     break
    else
     rmmod $oneMOD
    fi
   #fi
  done
 ;;
esac

