#!/bin/ash
# BK got this from http://murga-linux.com/puppy/viewtopic.php?t=55417&start=15
# but added test for /proc/acpi, bios-date, processor-manufacturer.
# added extra code provided by pakt.
#100603 gamble, any CPU >=2007 can handle acpi-cpufreq, or it will fail to load.
#101014 improve test for older computers, and fix menu --well no probably not the latter.
#101114 rerwin: refine usage of dmidecode.

ACPI_YEAR_MIN=7 #2007

#dmidecode -s "bios-release-date"
#dmidecode -s "bios-release-date" | cut -f 3 -d '/'
#dmidecode -s "bios-release-date" | cut -f 3 -d '/' | tr -d '[:blank:]'
#dmidecode -s "bios-release-date" | cut -f 3 -d '/' | tr -d '[:blank:]' | rev
#dmidecode -s "bios-release-date" | cut -f 3 -d '/' | tr -d '[:blank:]' | rev | cut -c 1,2
#dmidecode -s "bios-release-date" | cut -f 3 -d '/' | tr -d '[:blank:]' | rev | cut -c 1,2 | rev
#dmidecode -s "bios-release-date" | cut -f 3 -d '/' | tr -d '[:blank:]' | rev | cut -c 1,2 | rev | sed 's%^0*%%'

#disable freq scaling for older computers...
#[ ! -d /proc/acpi ] && FLAGEXIT='yes'
if [ ! -d /proc/acpi ];then #101114
 FLAGEXIT='yes'
elif [ "`dmidecode -s "bios-release-date" | cut -f 3 -d '/' | tr -d '[:blank:]' | rev | cut -c 1,2 | rev | sed 's%^0*%%'`" -lt $ACPI_YEAR_MIN ]; then
 FLAGEXIT='yes' #<2006 100603: <2007 101014
elif [ "$1" = start ]; then
 echo "$0: Enabling cpufrequency scaling..."
else
 FLAGEXIT='yes'
fi

if [ "$FLAGEXIT" = "yes" ];then #101014

__remove_cpu_freq_dot_desktop__(){
 if [ -f /usr/share/applications/cpu_freq.desktop  ];then
  rm -f /usr/share/applications/cpu_freq.desktop
  fixmenus
  #[ "`pidof jwm`" != "" ] && jwm -restart #ideally should do this, but with any luck user will look at this item after next boot.
 fi
}
 echo "$0: BIOS YEAR lesser than ${ACPI_YEAR_MIN}. Exiting."
 exit
fi

case "$1" in
 start)
. /etc/rc.d/f4puppy5

# REM: TODO scaling_min_freq scaling_max_freq
_alter_scaling_min(){
echo "$2" > /sys/devices/system/cpu/$1/cpufreq/scaling_min_freq
}

_alter_scaling_max(){
echo "$2" > /sys/devices/system/cpu/$1/cpufreq/scaling_max_freq
}

test -r /etc/default/cpu_scaling.conf && . /etc/default/cpu_scaling.conf

[ "$AMD" ]    || AMD='powernow-k6 powernow-k7 powernow-k8'
[ "$CYRIX" ]  || CYRIX='gx-suspmod'
[ "$INTEL" ]  || INTEL='p4-clockmod speedstep-centrino speedstep-ich'
[ "$NVIDIA" ] || NVIDIA='cpufreq-nforce2'
# description:    LongRun driver for Transmeta Crusoe and Efficeon processors.
[ "$TRANSM" ] || TRANSM='longrun'
[ "$VIA" ]    || VIA='longhaul e_powersaver'

[ "$FREQMOD" ]      || FREQMOD="acpi-cpufreq"
[ "$FREQMOD_OPS" ]  || FREQMOD_OPS='acpi_pstate_strict=1'
[ "$GOVERNOR" ]     || GOVERNOR='ondemand'      # REM: conservative, ondemand, performance, powersave
[ "$GOVERNOR_OPS" ] || GOVERNOR_OPS=''



  _detect_cpu_manufacturer(){
  CPUMAN="`dmidecode -s 'processor-manufacturer' | tr '[A-Z]' '[a-z]' | cut -f 1 -d ' '`"
  case $CPUMAN in
   amd)    mFREQMODS_="${AMD}" ; mFREQMODOPTS_='';;
   cyrix)   mFREQMODS_="${CYRIX}" ;mFREQMODOPTS_='';;
   intel)    mFREQMODS_="${INTEL}" ;mFREQMODOPTS_='';;
   nvidia)    mFREQMODS_="${NVIDIA}" ;mFREQMODOPTS_='';;
   transmeta) mFREQMODS_="${TRANSM}" ;mFREQMODOPTS_='';;
   via)       mFREQMODS_="${VIA}" ;mFREQMODOPTS_='';;
  esac
  }
  _detect_cpu_manufacturer

[ "$mFREQMODS_" ]    && mFREQMODS="$mFREQMODS_"
[ "$mFREQMODOPTS_" ] && mFREQMODOPTS="$mFREQMODOPTS_"

  for oneMOD in $mFREQMODS
  do
   sleep 1
   DEPS0=`modprobe -D $oneMOD | sed 's%.*/%%;s%\..*$%%'`
   modprobe $VERB $oneMOD $mFREQMODOPTS
   [ "$?" = 0 ] || { rmmod $VERB $DEPS0 2>$ERR; continue; }
    DEPS1=`modprobe -D $FREQMOD | sed 's%.*/%%;s%\..*$%%'`
    modprobe $VERB $FREQMOD $FREQMOD_OPS
     [ "$?" = 0 ] || { rmmod $VERB $DEPS1 $oneMOD $DEPS0 2>$ERR; break; }
    DEPS2=`modprobe -D cpufreq_${GOVERNOR} | sed 's%.*/%%;s%\..*$%%'`
    modprobe $VERB cpufreq_${GOVERNOR} $GOVERNOR_OPS
     [ $? -eq 0 ] || { rmmod  $VERB $DEPS2 $FREQMOD $DEPS1 $oneMOD $DEPS0 2>$ERR; break; }
     for cpuD in `ls -1v /sys/devices/system/cpu/ | grep 'cpu[0-9]'`
     do
      [ -w /sys/devices/system/cpu/$cpuD/cpufreq/scaling_governor ] || continue
      echo $GOVERNOR >/sys/devices/system/cpu/$cpuD/cpufreq/scaling_governor
      [ "$?" = 0 ] && { echo "$0:Issued '$GOVERNOR' to /sys/devices/system/cpu/$cpuD/cpufreq/scaling_governor"; continue; }
      echo "$0:Failure setting '$GOVERNOR' into /sys/devices/system/cpu/$cpuD/cpufreq/scaling_governor"
     done
  done
 ;;
esac

