#!/bin/bash
# Using bash for 'export -f'
# Called from rc.sysinit (UniPup), as separate process.
#v408 attempt alsa fix. v411 again.
#w468 removed alsa stuff, now handled in /etc/init.d/alsa.

#v406 a really gross workaround for now. rerwin found that the
# /etc/init.d/slomodem script was running before slusb had properly loaded (on a slow PC).
#As this Problem could occur for any init.d script, a big sleep here...

##/etc/rc.d/rc.services & #run scripts in /etc/rc.d/init.d

########################################################################
#
#
#
#
#
# /dev/sda5:
# LABEL="MacPup430_F3"
# UUID="07443de5-1fab-4656-a3ab-7b1c14ccc8c8"
# TYPE="ext3"
# DISTRO_VERSION=430·#481·#416·#218·#478······#####change·this·as·required#####
# DISTRO_BINARY_COMPAT="puppy"·#"ubuntu"·#"puppy"·#####change·this·as·required#####
# case·$DISTRO_BINARY_COMPAT·in
# puppy)·#built·entirely·from·Puppy·v2.x·or·v3.x·or·4.x·pet·pkgs.
# DISTRO_NAME="Puppy"
# DISTRO_FILE_PREFIX="pup"·#"ppa"·#"ppa4"·#"pup2"··#pup4··###CHANGE·AS·REQUIRED,·recommend·limit·four·characters###
# DISTRO_COMPAT_VERSION="4"·#"2"··#4·····###CHANGE·AS·REQUIRED,·recommend·single·digit·5,·4,·3,·or·2###
# ;;
# esac
# PUPMODE=2
# KERNVER=2.6.30.6-KRG-i486
# ATADRIVES='·sda'
# USB_SATAD=''
# PUP_HOME='/'
# Linux·puppypc·2.6.30.6-KRG-i486·#1·SMP·Sun·Jan·2·20:32:12·GMT-1·2011·i686·GNU/Linux
# Xserver=/usr/X11R7/bin/Xvesa_stripped_upx9
# $LANG=en_US
# today=Mon·Oct·24·22:45:26·CEST·2011
#
#
#
#
#
########################################################################
. /etc/rc.d/f4puppy5

BB='busybox '

confFILE=/etc/init/functions.sh
if [ -s "$confFILE" -a -f "$confFILE" -a -r "$confFILE" ]; then
source "$confFILE"
fi

RUN_PARAMETER=start
[ "$1" ] && RUN_PARAMETER="$1"
type head_function >>$OUT && head_function $RUN_PARAMETER

#sleep 3
while [ "`pidof pup_event_backend_modprobe`" ];do sleep 1;done

_chmod_init_scripts()
{
    #LSMODS=`lsmod | cut -f 1 -d ' ' | grep -v -w -E 'snd|processor|ac'`
    #LSMODS=`sed 's# .*##' /proc/modules | grep -vwE 'snd|processor|ac'`
LSMODS1=`awk '{print $1}' /proc/modules | grep -vwE 'snd|processor|ac'`

    #for i in $LSMODS ; do
while read mod_; do
[ "$mod_" ] || continue
echo -n "$mod_ :"
/bin/find /etc/init.d/ -maxdepth 1 \( -type f -o -type l \)      -iname "*${mod_}*" -exec echo -en "\nchmoding +x {}" \; -exec chmod $VERB +x {} \;
#find /etc/init.d/ -maxdepth 1 \( -type f -o -type l \) -not -iname "*${mod_}*" -exec echo -en "\nchmoding -x {}" \; -exec chmod $VERB -x {} \;
echo
done <<EoI
$(echo "$LSMODS1")
EoI

    #LSMODS2=`echo "$LSMODS" | tr '\n' '|' | sed 's#|$##;s#^|##'`
    #LSMODS2=`echo "$LSMODS" | sed 's#\n#|#;s#|$##;s#^|##'`
    #LSMODS2=`echo $LSMODS | sed 's/[[:space:]]/|/g;s/^|*//;s/|*$//' |tr -s '|'`
    #LSMODS2=`echo $LSMODS | ${BB}sed 's/ */|/g;s/^|*//;s/|*$//'`
LSMODS2=`echo $LSMODS1 | ${BB}sed 's/[ *]/|/g;s/^|*//;s/|*$//'`
echo
echo LSMODS2="$LSMODS2"

    #for i in /etc/init.d/FIRMWARE/* ; do
    #if [ -z "`echo "$LSMODS" | grep -i "$(basename "$i")"`" ] ; then
while read mod__; do
[ "$mod__" ] || continue
if [ -z "`echo "$mod__" | grep -i -E "$LSMODS2"`" ] ; then
#echo "chmod -x $mod__"
#chmod $VERB -x /etc/init.d/FIRMWARE/"$mod__"
chmod $VERB -x "$mod__"
else
#echo "chmod +x $mod__"
#chmod $VERB +x /etc/init.d/FIRMWARE/"$mod__"
chmod $VEBR +x "$mod__"
fi
done <<EoI
`for dir in FIRMWARE; do ${BB}ls -1LF /etc/init.d/$dir/* 2>>$ERR | grep '\*$' |tr -d '\*'; done`
EoI
}
[ "$RUN_PARAMETER" = start ] && _chmod_init_scripts

__old__(){
LIST_1=`ls -1LBF /etc/init.d/DEFAULT/ 2>>$ERR | grep '\*$' |tr -d '\*'`
case $RUN_PARAMETER in *stop) LIST_1=`echo "$LIST_1" | tac`;; esac
    #for i in $LIST_2;do
while read name1; do
[ "$name1" ] || continue
echo "$RUN_PARAMETER default script '$name1' .."
/etc/init.d/DEFAULT/"$name1" $RUN_PARAMETER  #;done
done <<EoI
$(echo "$LIST_1")
EoI

LIST_2=`ls -1LBF /etc/init.d/FIRMWARE/ 2>>$ERR | grep '\*$' |tr -d '\*'`
case $RUN_PARAMETER in *stop) LIST_3=`echo "$LIST_2" | tac`;; esac
    #for i in $LIST_1;do
while read name2; do
[ "$name2" ] || continue
echo "$RUN_PARAMETER firmware script '$name2' .."
/etc/init.d/FIRMWARE/"$name2" $RUN_PARAMETER  #;done
done <<EoI
$(echo "$LIST_2")
EoI
}  ###__old__(){

INIT_D_ORDER="DEFAULT DRIVER FRIMWARE SOFTWARE"
case $RUN_PARAMETER in
*start) INIT_D_ORDER="DEFAULT DRIVER FIRMWARE SOFTWARE";;
*stop ) INIT_D_ORDER="SOFTWARE FIRMWARE DRIVER DEFAULT";;
esac

echo
for _dir_ in $INIT_D_ORDER
do
 test -d /etc/init.d/$_dir_ || continue
 echo "${RUN_PARAMETER}ing init scripts in /etc/init.d/$_dir_ ..."
 _LIST_=`ls -1LF /etc/init.d/${_dir_}/ 2>>$ERR | grep '\*$' |tr -d '\*'`
 case $RUN_PARAMETER in *stop) _LIST_=`echo "$_LIST_" | tac`;; esac
 while read _oneFILE_
  do
   [ "$_oneFILE_" ] || continue
   #case $_oneFILE_ in *~|*old|*OLD|*bac|*bak|*BAC|*BAK) continue;; esac #skip backup files
   _check_is_backup && continue
   echo "$RUN_PARAMETER init script '$_oneFILE_'"
    exec /etc/init.d/${_dir_}/${_oneFILE_} $RUN_PARAMETER &
    sleep 1
  done <<EoI
$(echo "$_LIST_")
EoI
done

echo
LIST_3=`ls -1LF /etc/init.d/ 2>>$ERR | grep '\*$' |tr -d '\*'`
case $RUN_PARAMETER in *stop) LIST_3=`echo "$LIST_3" | tac`;; esac
while read mod___; do
[ "$mod___" ] || continue
#case $mod___ in *~|*old|*OLD|*bac|*bak|*BAC|*BAK) continue;; esac #skip backup files
_check_is_backup && continue
echo "$RUN_PARAMETER init script '$mod___' .."
exec /etc/init.d/"$mod___" $RUN_PARAMETER &
sleep 1
done <<EOI
$(echo "$LIST_3")
EOI

###END###
