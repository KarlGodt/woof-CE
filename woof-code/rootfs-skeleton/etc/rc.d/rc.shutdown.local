#!/bin/bash


########################################################################
#
#
#
#
#
# /dev/hda8:
# LABEL="MacPup431_O2"
# UUID="6d9a8e91-c301-4ff8-9875-97ec708cbee8"
# TYPE="ext3"
# DISTRO_NAME='Puppy'
# DISTRO_VERSION=431
# DISTRO_BINARY_COMPAT='puppy'
# DISTRO_FILE_PREFIX='pup'
# DISTRO_COMPAT_VERSION='4'
# PUPMODE=2
# KERNVER=2.6.30.9-i586-dpup005-Celeron2G
# PUP_HOME='/'
# SATADRIVES='·'
# USBDRIVES='·'
# Linux·puppypc·2.6.30.9-i586-dpup005-Celeron2G·#6·SMP·Sat·Jan·15·13:35:51·GMT-8·2011·i686·GNU/Linux
# Xserver=/usr/X11R7/bin/Xorg
# $LANG=de_DE@euro
# today=Do·27.·Okt·22:45:37·GMT-1·2011
#
#
#
#
#
########################################################################

PATH="/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin"

[ -f /etc/rc.d/apm_power_off ] && . /etc/rc.d/apm_power_off

cp /root/.history /root/my-documents/SHELL/
mv /root/my-documents/SHELL/.history /root/my-documents/SHELL/"DOThistory`datum`"

cp /root/.bash_history /root/my-documents/SHELL/
mv /root/my-documents/SHELL/.bash_history /root/my-documents/SHELL/"DOTbash_history`datum`"


BPDIR="/root/my-documents/ROLLOUT"
[ ! -d $BPDIR ] && mkdir -p $BPDIR
KERNVERS=`uname -r`
D=`date +%d%b%Y`
D=`date +%Y_%m_%d`
[ ! -d $BPDIR/$KERNVERS/$D ] && mkdir -p $BPDIR/$KERNVERS/$D

cp /tmp/bootkernel* $BPDIR/$KERNVERS/$D/
cp /tmp/bootsysinit* $BPDIR/$KERNVERS/$D/
cp /tmp/xerrs* $BPDIR/$KERNVERS/$D/
cp /var/log/messages $BPDIR/$KERNVERS/$D/

cp /etc/X11/xorg.conf $BPDIR/$KERNVERS/$D/


dev_nodes_db_func() {
kv=`uname -r`
DDB=`find /dev -type c`
[ ! -d /var/db/boot ] && mkdir -p /var/db/boot
#[ -f /var/db/boot/dev_nodes.txt ] && rm /var/db/boot/dev_nodes.txt
#[ -f /var/db/boot/dev_nodes.lst ] && rm /var/db/boot/dev_nodes.lst

echo "$DDB" > /var/db/boot/dev_nodes.$kv.txt
for i in $DDB; do
ls -l $i >> /var/db/boot/dev_nodes.$kv.lst
done

if test ! -f /var/db/boot/dev.`uname -r`.tar.gz ; then
cp -ar /dev /tmp
tar -czf /tmp/dev.`uname -r`.tar.gz /tmp/dev
mv /tmp/dev.`uname -r`.tar.gz /var/db/boot/
rm -r /tmp/dev
fi

}
dev_nodes_db_func


#LOOPD=`mount | grep 'loop' | grep -v 'initrd' | cut -f 1 -d ' '`
LOOPM=`mount | grep '^/dev/loop' | grep -v '/initrd' | cut -f 3 -d ' '`
for i in $LOOPM ; do
echo "Unmounting $i"
umount -r -d $i
mountDirs="$mountDirs $i"
done
sleep 2s
[ "$mountDirs" ] && rmdir $mountDirs

LOOPD=`mount | grep '^/dev/loop' | grep -v '/initrd' | cut -f 1 -d ' '`
for i in $LOOPD ; do
echo "Unmounting $i"
umount -r -d $i
sleep 2s
done

#RD=`rdev | cut -f 1 -d ' '`
#PARTD=`mount | grep 'ext[2-4]' | grep -v '^/dev/root' | cut -f 1 -d ' '`
#PARTS=`mount | grep 'ext[2-4]' | grep -v '^/dev/root' | cut -f 3 -d ' '`

#PARTM=`mount | grep -wE 'ext[2-4]|reiser|xfs|jfs|hfs|hsfs|vfat|ntfs' | grep -v -E '^/dev/root|/initrd' | cut -f 3 -d ' '`

#for i in $PARTM ; do
#echo "Unmounting $i"
#umount -r $i
#sleep 2s
#done

create_fsckme_func(){
DRVP=`rdev | cut -f 1 -d ' ' | sed 's#/dev/##'`
FS=`mount | grep '^/dev/root' | cut -f 5 -d ' '`
if [ -n "$DRVP" -a -n "$FS" ] ; then
echo "$DRVP"','"$FS"',' > /etc/.fsckme.flag
fi
}
#create_fsckme_func
delete_fsckme_func(){
find / -maxdepth 3 -type f -iname "*fsckme*" -exec rm {} \;
}
delete_fsckme_func


#/root/my-applications/bin/MkMissingDev.sh



