#!/bin/ash
#(c) Copyright bkauler 2006,2007 www.puppylinux.com
#2007 Lesser GPL licence v2 (http://www.fsf.org/licensing/licenses/lgpl.html)
#updated aug 2007 for v2.20, save in a folder.
#BK updated 20,22 sept 2007 v2.22, multisession bugfix.
#v3.01 BK 10 oct 2007, attempted bugfixes for funny CD drive.
#v3.01 BK 11 oct 2007, removed multisavefunc() to functions4puppy.
#v3.02 BK 1 nov 2007, can change folder of pup_save file.
#v3.97 BK feb 2008: restore support for pcmcia-cs package.
#v3.97 BK 5 mar 2008, handle PSAVEMARK, see /etc/rc.d/PUPSTATE, init script.
#REMOVEDv3.98 BK 2 apr 2008: 'mke2fs -O none' for encrypted pup_save, fix mntg bug.
#v3.99 7apr2008: fix zombie process prevents partition unmount.
#v411 run rc.alsa as it also unloads modules (if not done, prevents shutdown some systems).
#v411 bring down network interfaces, as sometimes prevent poweroff.
#v412 /etc/DISTRO_SPECS, renamed pup_xxx.sfs, pup_save.2fs etc.
#w002 pup files renamed to format upup-555.sfs, upupsave.2fs.
#w468 alsa shutdown now handled in /etc/init.d/alsa.
#w481 if low-ram, save-file is on a fast media, and no swap file/partition, then create swapfile.
#w482 use xorriso instead of cdrtools/cdrkit if installed.

########################################################################
#
# CHANGES by Karl Reimer Godt
# 01.0 : added support for rc.shutdown.local[.start|.0|.Zero|.One|Two|.end]
# 02.0 : force the detection of PUPMODE if /etc/rc.d/PUPSTATE not readable to 2 or 12
# 03.0 : respect /root/.thumbnails if free space more than 10%
# 04.0 : added code from patriot http://www.murga-linux.com/puppy/viewtopic.php?t=55823
#
#
# /dev/sda5:
# LABEL="MacPup430_F3"
# UUID="07443de5-1fab-4656-a3ab-7b1c14ccc8c8"
# TYPE="ext3"
# DISTRO_VERSION=430·#481·#416·#218·#478······#####change·this·as·required#####
# DISTRO_BINARY_COMPAT="puppy"·#"ubuntu"·#"puppy"·#####change·this·as·required#####
# case·$DISTRO_BINARY_COMPAT·in
# ubuntu)
# DISTRO_NAME="Jaunty·Puppy"
# DISTRO_FILE_PREFIX="upup"
# DISTRO_COMPAT_VERSION="jaunty"
# ;;
# debian)
# DISTRO_NAME="Lenny·Puppy"
# DISTRO_FILE_PREFIX="dpup"
# DISTRO_COMPAT_VERSION="lenny"
# ;;
# slackware)
# DISTRO_NAME="Slack·Puppy"
# DISTRO_FILE_PREFIX="spup"
# DISTRO_COMPAT_VERSION="12.2"
# ;;
# arch)
# DISTRO_NAME="Arch·Puppy"
# DISTRO_FILE_PREFIX="apup"
# DISTRO_COMPAT_VERSION="200904"
# ;;
# t2)
# DISTRO_NAME="T2·Puppy"
# DISTRO_FILE_PREFIX="tpup"
# DISTRO_COMPAT_VERSION="puppy5"
# ;;
# puppy)·#built·entirely·from·Puppy·v2.x·or·v3.x·or·4.x·pet·pkgs.
# DISTRO_NAME="Puppy"
# DISTRO_FILE_PREFIX="pup"·#"ppa"·#"ppa4"·#"pup2"··#pup4··###CHANGE·AS·REQUIRED,·recommend·limit·four·characters###
# DISTRO_COMPAT_VERSION="4"·#"2"··#4·····###CHANGE·AS·REQUIRED,·recommend·single·digit·5,·4,·3,·or·2###
# ;;
# esac
# PUPMODE=2
# KERNVER=2.6.30.6-KRG-i486
# ATADRIVES='·sda'
# USB_SATAD=''
# PUP_HOME='/'
# Linux·puppypc·2.6.30.6-KRG-i486·#1·SMP·Sun·Jan·2·20:32:12·GMT-1·2011·i686·GNU/Linux
# Xserver=/usr/X11R7/bin/Xvesa_stripped_upx9
# $LANG=en_US
# today=Mon·Oct·24·22:45:40·CEST·2011
# TODO1 : STRAYPARTS ~FIXED
#
#
#
#
########################################################################

PATH=/bin:/sbin:/usr/bin:/usr/sbin
pidof -o $$ -o %PPID "${0##*/}" && { echo "$0 already running."; exit 1; }

echo "Executing /etc/rc.d/rc.shutdown..."

[ -f /etc/rc.d/rc.shutdown.local.start0 ] && . /etc/rc.d/rc.shutdown.local.start0  ###KRG
test -f /etc/rc.d/f4puppy5 && . /etc/rc.d/f4puppy5
test -f /etc/rc.d/functions4shutdown && . /etc/rc.d/functions4shutdown

test "$OUT" || OUT=/dev/null
test "$ERR" || ERR=/dev/null

#variables created at bootup by init script in initrd...
[ ! -f /etc/rc.d/PUPSTATE -a -f /etc/rc.d/PUPSTATE.prev ] && cp $VERB -f /etc/rc.d/PUPSTATE.prev /etc/rc.d/PUPSTATE && sleep 1  ###KRG

test -f /etc/rc.d/PUPSTATE && . /etc/rc.d/PUPSTATE #v2.02
Err=$?

echo "PUPMODE='$PUPMODE'"
if [ -z "$PUPMODE" ] ; then  ###KRG
if [ -n "`rdev`"  ]; then
echo 'rdev='`rdev`
PUPMODE=2
else ###KRG assuming 12
PUPMODE=12
fi
echo "PUPMODE='$PUPMODE'"
fi

test $PUPMODE = 2 && {
echo "FILESYSTEM STATE : "
dumpe2fs `rdev` | grep -i 'state'
echo
}

#v2.20b make shutdown less verbose...
###KRGclear
###KRGexec 1> /dev/null 2>&1

#w482 use xorriso if it is installed (see also functions4puppy)...
CDRECORD='cdrecord'
MKISOFS='mkisofs'
if [ "`which xorriso`" != "" ];then
 CDRECORD='xorrecord'
 MKISOFS='xorrisofs' #growisofs reads this variable.
fi
export CDRECORD MKISOFS
. /etc/rc.d/functions4puppy #v3.01 #multisession functions

[ -f /etc/puppyversion ] && PUPPYVERSION="`cat /etc/puppyversion`"  ###KRG added test ###is it needed here?? ##2011_10_27 /etc/puppyversion seems to be a quite old old conf file
. /etc/DISTRO_SPECS #v412

echo "${DISTRO_NAME} $DISTRO_VERSION is now shutting down..." > /dev/console

if [ -f /etc/rc.d/rc.shutdown.local.start1 ]; then
 . /etc/rc.d/rc.shutdown.local.start1
elif [ -f /etc/rc.d/rc.shutdown.local.start ]; then
 . /etc/rc.d/rc.shutdown.local.start
fi

ORIGPUPMODE=$PUPMODE #v2.22

#v2.20 if ${DISTRO_FILE_PREFIX}rxxx.sfs is in a subdirectory, default to saving in it...
PUPSFSFILE="`echo "$PUPSFS" | cut -f 3 -d ','`"
PSUBDIR="`dirname "$PUPSFSFILE"`"
[ "$PSUBDIR" = "/" ] && PSUBDIR=""

#for a full hd install, only setting PUPMODE (=2). no /initrd, no initrd.gz.

[ -f /etc/rc.d/rc.shutdown.local.start2 ] && . /etc/rc.d/rc.shutdown.local.start2

#v2.0.0 there could be a save tmpfs->persistent-storage running...
while [ "`pidof snapmergepuppy | grep '[0-9]'`" != "" ];do
 a=$(( a + 1 ))
 echo 'snapmergepuppy still running :'"$a"
 sleep 1
done
_pidof $Q savepuppyd && killall savepuppyd

which pup_event_backend_modprobe_protect >>$OUT && pup_event_backend_modprobe_protect --stop &

_old_alsa(){
#rc.local0 can read this...
setvol 0 | tr "\n" " " > /etc/.mixervolume
#v2.10 instead, probably do it this way...
/usr/sbin/alsactl store
#v4.00 ...yes, using 'alsactl restore' in rc.sysinit (fast boot) and rc.local0.
#v411 run rc.alsa as it also unloads modules (if not done, prevents shutdown some systems)...
/etc/rc.d/rc.alsa stop
}

_old_network(){
#v411 bring down network interfaces (prevents shutdown sometimes)...
for ONENETIF in `ifconfig | grep -E '^wifi[0-9]|^wlan[0-9]|^eth[0-9]' | cut -f 1 -d ' ' | tr '\n' ' '`
do
 ifconfig $ONENETIF
done
}
#no, dougal has code for doing this...
/etc/rc.d/rc.network stop

# quick hack, maybe shutdown problem if ath_pci left loaded...
[ "`lsmod | grep '^ath_pci'`" != "" ] && rmmod ath_pci

#echo LINE 573 502  ###DBG
cd /
pidof sync || sync
#just a precaution...
echo "Killing X and all X apps..."
killall -9 X
sleep 1
killall -3 X
pidof sync || sync
#echo LINE 582 511  ###DBG

#MU warns may need to do this for dillo...
killall file.dpi
killall bookmarks.dpi
killall dpid
#echo LINE 587 516  ###DBG

_stop_services(){
#v2.16 some packages have a service script that requires stopping...
for service_script in `ls -1dv /etc/init.d/* | tac`
do
  [ -f $service_script -a -x $service_script ] && exec $service_script stop & sleep 0.5
done
#note, /etc/rc.d/rc.local0 does same, with 'start' parameter.
}
/etc/rc.d/rc.services stop


_unload_pcmcia()
{
#v3.97 deprecated, for pcmcia-cs package...
if [ -f /sbin/cardmgr ];then #pcmcia-cs package installed.
 if [ "`lsmod | grep -E '^i82092|^tcic|^i82365|^yenta_socket'`" != "" ];then
  #got this out of rc.pcmcia, modified...
  echo -n "Shutting down PCMCIA services: "
  if [ -s /var/run/cardmgr.pid ] ; then
   read PID </var/run/cardmgr.pid
   if "$PID"; then
   kill $PID
   for N in 1 2 3 4 ; do
    kill -0 $PID || break #-0 is test only.
    sleep 1
   done
   fi
  fi
  if [ -s /var/lib/pcmcia/cardmgr.pid ] ; then
   read PID </var/lib/pcmcia/cardmgr.pid
   if "$PID"; then
   kill $PID
   for N in 1 2 3 4 ; do
    kill -0 $PID || break #-0 is test only.
    sleep 1
   done
   fi
  fi
  killall -3 "CardBus Watcher" #BK bug, changed -q to -3.
  /sbin/rmmod tcic || /sbin/rmmod i82365 || /sbin/rmmod yenta_socket || /sbin/rmmod i82092
  echo " done."
  rm -f /var/lock/subsys/pcmcia
 fi
fi
}
#pcmcia_func
_unload_pcmcia
#echo "PCMCIA END"  ###DBG


_pupmode5
#echo "END IF PUPMODE 5" #DBG

if [ "$PUPSAVE" != "" ];then
 #f.s. and partition where ${DISTRO_FILE_PREFIX}save.2fs is located...
 SAVEPART="`echo -n "$PUPSAVE" | cut -f 1 -d ','`"
   SAVEFS="`echo -n "$PUPSAVE" | cut -f 2 -d ','`"
 SAVEFILE="`echo -n "$PUPSAVE" | cut -f 3 -d ','`"
fi


###KRGclear >/dev/console


_save_session

#when the working files run in tmpfs in ram, they are saved above and /tmp and /var
#are screened out. however, some PUPMODES mount ${DISTRO_FILE_PREFIX}save.2fs directly on /initrd/pup_rw,
#the top unionfs layer, meaning that there is no intermediary tmpfs in ram for working
#files, hence everything is saved directly, ditto for PUPMODE=2 a full h.d. install.
#hence need to do some explicit wiping here...
#echo -n "" > /var/log/messages #delete, as it keeps growing.(note choosepartfunc uses this)
#rm -f /var/log/X*
#rm -rf /tmp/*  ##+--2011-11-10 to be done in /sbin/init
rm -f /var/lock/LCK*
rm -f /var/run/*.pid
rm -rf /root/tmp 2> /dev/null #...note, not screening this out in any of above save modes.

if test "$PUPMODE" != "2" ; then  ###KRG
 FP=`_command df | grep '/pup_rw' | tr -s ' ' | cut -f5 -d ' ' | tr -d '%'`  ###KRG
 if [ "$FP" -gt 89 ]; then  ###KRG
 echo "Frugal Install ,free space less than 11%; removing thumbnails" > /dev/console  ###DBG
 rm -rf /root/.thumbnails/* 2> /dev/null
 else  ###KRG
 echo "Frugal Install ,free space more than 10%; leaving thumbnails ok "
 fi  ###KRG
else  ###KRG
 FP=`_command df | grep -Fw '/' | tr -s ' ' | cut -f5 -d ' ' | tr -d '%'`  ###KRG
 if test "$FP" -lt 5; then  ###KRG
 echo "Full install , free space lesser than 5%; removing thumbnails"  ###KRG
 rm -rf /root/.thumbnails/* 2> /dev/null  ###KRG
 else  ###KRG
 echo "Full install , free space more than 5%; leaving thumbnails ok"  ###KRG
 fi  ###KRG
fi  ###KRG
sleep 3
pidof sync || sync
echo "RM UNEEDED FILES END"  ###KRG

[ -f /etc/rc.d/MORESFS ] && rm /etc/rc.d/MORESFS

__retired_umount_straypartitions__(){
MNTDPARTS="`mount|tac`"

#echo
##REMARK1 : fuser -c /dev/sda4 would return ntfs-3g PID but -c [||-m] /mnt/sda4 not  ##+++2011_10_27
#echo -e "\e[1;35m""Unmounting stray filesystems:""\e[0;39m"
echo "$MNTDPARTS"
#STRAYPARTL=`echo "$MNTDPARTS" |grep -v -E "/dev/pts|/proc|/sys|tmpfs|rootfs|/dev/root|usbfs|unionfs|/initrd| on / |^devramfs |^devtmpfs "`
STRAYPARTL=`echo "$MNTDPARTS" |grep -v -E " on /dev[ /]+|/proc|/sys|tmpfs|ramfs|rootfs|/dev/root|usbfs|unionfs| on /initrd[ /]+| on / type "`
echo "$STRAYPARTL"
STRAYPARTMP=`echo "$STRAYPARTL" | cut -f 3 -d " "`  ##2011_10_27 BUG though inside doublequotes , $TRAYPARTL needs doubblequotes
echo "$STRAYPARTMP"  ##2011_10_27 BUG echo"$STRAYPARTMP"
[ "$STRAYPARTMP" ] && echo -e "\e[1;35m""Unmounting stray filesystems:""\e[0;39m"
for oneSTRAY in $STRAYPARTMP  ##in MountPoints
do
 echo -e "\e[1;31mUnmounting STRAY $oneSTRAY...\e[0;39m"
 oneSTRAYP=`busybox mount | grep "$oneSTRAY" | cut -f 1 -d ' '`
 #fuser -v -k -c -m $ONESTRAYP ##Device  ##Error both mount and mountpoint dont work
 _command fuser -v -k -m  $oneSTRAY  ##+++2011_10_27
 _killzombies #v3.99
 pidof sync || sync
 if [ "`busybox mount | grep "$oneSTRAY" | grep -E 'fuse|ntfs'`" != "" ] ; then
 #fusermount version: 2.7.0 [options] mountpoint
 fusermount -u $oneSTRAY ##unmounts MountPoint
 else
 _command umount $VERB -r $oneSTRAY  ##unmounts MountPoint
 fi
done
}

tac /proc/mounts |
while read -r dev m fs ops n nn
do
case $m in /|/initrd|/initrd/*|/dev|/sys|/proc|/tmp|/run)continue;;esac
case $fs in *rootfs*|*ramfs*|*tmpfs*|*usbfs*|*aufs*|*unionfs*)continue;;esac
 m=`busybox echo -e "$m"`
 case $m in //*):;;
  *) fsUSERS=`fuser -m "$MOUNT_POINT" 2>/dev/null`
     [ "$fsUSERS" ] && fuser -k -m "$m";;
 esac
 _killzombies
 pidof sync >/dev/null || sync
 echo -e "\\033[1;33m""Unmounting '$m' ...""\\033[0;39m" >/dev/console
 umount -lr "$m"
done


swapoff -a $VERB #busybox swapoff -a works only if swaps are in mtab or fstab
_retired_swapoff(){
#v2.13 menno suggests this improvement...
STRAYPARTD=`grep "/dev/" /proc/swaps | grep -v 'deleted' | cut -f 1 -d " "`
for oneSTRAY in $STRAYPARTD
do
 echo "Swapoff $oneSTRAY" >/dev/console
 swapoff $oneSTRAY
done
}

if test -f /proc/swaps; then
while read -r f t s u p
do
case $f in *deleted*|Filename|'')continue;;esac
 echo "Swapoff $f" >/dev/console
 f=`busybox echo -e "$f"`
 swapoff "$f"
done <<EoI
`tac /proc/swaps`
EoI
fi

pidof sync || sync

#<code from patriot http://www.murga-linux.com/puppy/viewtopic.php?t=55823>
#
# Stop udev & loggers

pidof tempget && killall tempget   ## e17 daemon
#killall pup_event_backend_modprobe_protect  ##+++2011-10-27
#which pup_event_backend_modprobe_protect && pup_event_backend_modprobe_protect --stop &  ##+++2011-11-10
pidof udevd && killall udevd
pidof klogd && killall klogd       ## busybox applet
pidof syslogd && killall syslogd   ## busybox applet



remove_fsckme_func(){
find / -maxdepth 3 -type f -iname "*fsckme*" -exec rm {} \;
test -d /mnt/home && find /mnt/home -maxdepth 3 -type f -iname "*fsckme*" -delete
}
remove_fsckme_func

if [ -f /etc/rc.d/rc.shutdown.local.end2 ] ; then
 . /etc/rc.d/rc.shutdown.local.end2
elif [ -f /etc/rc.d/rc.shutdown.local.end ]; then
 . /etc/rc.d/rc.shutdown.local.end
fi

mount | grep -Fw '/'
# Patriot's lame "unmount of rootfs"
if [ $PUPMODE -ne 5 ]; then
  case $PUPMODE in
   2)   pupFS=$(awk '/\/dev\/root/ {print $3}' /proc/mounts)
      mount -o remount,ro -t $pupFS /dev/root /
      pidof sync || sync
      ;;
   *)   uniFS=$(awk '/unionfs/ {print $3}' /proc/mounts)
      pupFS=$(awk '/pup_rw/ {print $3}' /proc/mounts)
      if [ "$uniFS" -a "$pupFS" != "tmpfs" ]; then
        mkdir $VERB -p /tmp/unrootfs
        pidof sync || sync
        mount $VERB -o remount,prepend:/tmp/unrootfs,xino=/tmp/unrootfs/xino -t $uniFS / /
        pidof sync || sync
      fi
      mount $VERB -o remount,ro /initrd${SAVE_LAYER}
      pidof sync || sync
      ;;
  esac
fi
#
#</code from patriot http://www.murga-linux.com/puppy/viewtopic.php?t=55823>
mount | grep -Fw '/'
sleep 2

#rm -f /tmp/wmexitmode.txt  ##would need to be somewhere at beginning of script

#note, there is a problem with unmounting, especially ntfs as it cannot be remounted
#ro (?). A ntfs part with ${DISTRO_FILE_PREFIX}save.2fs cannot be unmounted because of the mounted
#${DISTRO_FILE_PREFIX}save.2fs.
#at least, attempt to kill anything running in the ntfs partition...
#(i don't think anything will be, only /dev/loop1 (${DISTRO_FILE_PREFIX}save.2fs), but just in case)
[ "$PUP_HOME" ] && ABSPUPHOME="/initrd${PUP_HOME}" #v2.16rc
[ ! "$ABSPUPHOME" ] && ABSPUPHOME="/initrd/mnt/dev_save" #v2.16rc
if [ ! "`busybox mount | grep "$ABSPUPHOME"`" = "" ];then
 BADPIDS="`_command fuser -v -m $ABSPUPHOME | _command grep -v --extended-regexp 'kernel|COMMAND|^$' | tr -s ' ' | cut -f 3 -d ' ' | tr '\n' ' '`"
 for oneBAD in $BADPIDS
 do
  echo "Killing process $oneBAD..." >/dev/console
  kill $oneBAD
  sleep 1
  kill -9 $oneBAD
  pidof sync || sync
 done
 _killzombies #v3.99
fi


#v2.16rc try this too... SAVE_LAYER defined in /etc/rc.d/PUPSTATE...
if [ "$SAVE_LAYER" ];then  ##PupSave ie /pup_rw
echo '$SAVE_LAYER='"$SAVE_LAYER"
 pidof sync || sync
 SAVEDEV=`mount | grep "/initrd${SAVE_LAYER}" | cut -f 1 -d ' '`
  SAVEFS=`mount | grep "/initrd${SAVE_LAYER}" | cut -f 5 -d ' '`
 busybox mount $VERB $VERB -t $SAVEFS -o remount,ro $SAVEDEV /initrd${SAVE_LAYER}
 umount-FULL $V -i -n -l /initrd/${SAVE_LAYER}  #-l is lazy unmount.
 Err=$?
 #echo $Err  ###DBG
 if [ "$Err" != 0 ] ; then
 _command umount $VERB -l /initrd/${SAVE_LAYER}
 fi
fi

#v2.16 try one more thing for ntfs... lazy unmount, suggested by GuestToo...
MNTFUSE=`busybox mount | grep -E ' fuse | fuseblk ' | head -n 1 | cut -f 3 -d ' '`  ##would need a loop I guess
if [ "$MNTFUSE" != "" ];then
 #v2.17 hairywill found the -u is required with -z...
 fusermount -z -u $MNTFUSE  ##MountPoint
elif [ "$PDEV1" ];then #from PUPSTATE
  dPATTERN="/dev/$PDEV1 "
  if [ "`busybox mount | grep "$dPATTERN"`" != "" ];then
   #[ "$PUP_HOME" ] && busybox mount -t $DEV1FS -o remount,ro /dev/$PDEV1 /initrd${PUP_HOME}
   #...no, do not attempt ro remount, will prevent ${DISTRO_FILE_PREFIX}save clean shutdown if it didn't above.
   : || umount-FULL $VERB -i -n -l /dev/$PDEV1
  fi
fi

if [ -f /etc/rc.d/rc.shutdown.local.end1 ]; then
 . /etc/rc.d/rc.shutdown.local.end1
fi


ps | grep -v '\['
mount  ###DBG

test $PUPMODE = 2 && {
echo -n "FILESYSTEM STATE : "
dumpe2fs `rdev` | grep -i 'state'
echo
}

echo "ENDING NOW"  ###DBG
#KRGbusybox umount $VERB $VERB -ar > /dev/null 2>&1
busybox umount $VERB $VERB -ar
echo "unmounted all -r  -- Tried to remount devices as read-only if mount is busy"
test -f /proc/mounts && mount ###DBG

test $PUPMODE = 2 && {
echo -n "FILESYSTEM STATE : "
dumpe2fs `rdev` | grep -i 'state'
}

[ -f /etc/rc.d/rc.shutdown.local.end0 ] && . /etc/rc.d/rc.shutdown.local.end0
sleep 2
# force exitcode 0
exit 0
#the end#
