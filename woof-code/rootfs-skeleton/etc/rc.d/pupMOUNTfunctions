#!/bin/ash

#v403 change desktop icon to unmounted status, called from pup_event_frontend_d, pmount...
__icon_unmounted_func__(){
 #passed params: drivename category  ex: sda usbdrv
 DRVICON="drive48.png" #default.
 [ "$2" = "usbdrv" ] && DRVICON="usbdrv48.png"
 [ "$2" = "card" ] && DRVICON="card48.png"
 [ "$2" = "floppy" ] && DRVICON="floppy48.png"
 [ "$2" = "optical" ] && DRVICON="optical48.png"
 #find out if already done...
 if [ -f $HOME/.config/rox.sourceforge.net/ROX-Filer/globicons ];then
  GLOBLINES="`cat $HOME/.config/rox.sourceforge.net/ROX-Filer/globicons | tr '\n' '|' | sed -e 's%</rule>|%\n%g'`"
  diPATTERN='$HOME/.pup_event/drive_'"${1}"'"'
  [ "`echo "$GLOBLINES" | grep "$diPATTERN" | grep "$DRVICON"`" != "" ] && return
 fi
 #[ "`echo "${ATADRIVES}" | grep "${1}"`" = "" ] && sleep 1 #110722 usb drive, LED light briefly flashes after unmounted, so wait a bit. ATADRIVES is in /etc/rc.d/PUPSTATE.
 echo "<?xml version=\"1.0\"?>
<env:Envelope xmlns:env=\"http://www.w3.org/2001/12/soap-envelope\">
 <env:Body xmlns=\"http://rox.sourceforge.net/SOAP/ROX-Filer\">
  <SetIcon>
   <Path>$HOME/.pup_event/drive_${1}</Path>
   <Icon>/usr/local/lib/X11/pixmaps/${DRVICON}</Icon>
  </SetIcon>
 </env:Body>
</env:Envelope>"  | rox -R
}

. /etc/rc.d/f4puppy5

my_self=/etc/rc.d/puppy_functions4Mount
homeGLOBICONS="$HOME/.config/rox.sourceforge.net/ROX-Filer/globicons"

#** DEBUG
LINENR=1
[ "`echo "$LINENO"`" ] || LINENR=''
_get_lineno(){

    if [ "$1" ] ; then
    [ "$DEBUG" ] && echo "$1" >&2
    echo `grep -n -w -m1 "$1" "$my_self" |cut -f1 -d':'`
    else
    echo 'UNKNOWN'
    fi
}
#LINEP=T001; echo "Line `_get_lineno $LINEP`"
#**DEBUG

#v403 change desktop icon to unmounted status, called from pup_event_frontend_d, pmount...
_icon_unmounted_func(){
    [ "$DEBUG" ] && echo "_icon_unmounted_func BEGIN" >&2 #DBG echo
    [ "$DEBUG" ] && echo "1:'$1' 2:'$2' 3:'$3'" >&2

local DRVICON GLOBLINES diPATTERN

    if test "$2" != "" ; then
 #passed params: drivename category  ex: sda usbdrv
 DRVICON="drive48.png" #default.
 [ "$2" = "usbdrv" ]  && DRVICON="usbdrv48.png"
 [ "$2" = "card" ]    && DRVICON="card48.png"
 [ "$2" = "floppy" ]  && DRVICON="floppy48.png"
 [ "$2" = "optical" ] && DRVICON="optical48.png"
 [ "$DEBUG" ] && { LINEP=D001; echo "Line `[ $LINENO ] && echo $LINENO || _get_lineno $LINEP` DRVICON='$DRVICON'"; }
    fi

# Skip code for Macpup e17
local CURRENTWM_
 read CURRENTWM_ </etc/windowmanager
case $CURRENTWM_ in
*enlightenment*) return 0;;
esac

#find out if already done...
if [ -f "$homeGLOBICONS" ];then
 GLOBLINES=`cat "$homeGLOBICONS" | tr "\n" '|' | sed -e 's%</rule>|%\n%g'`

  [ "$DEBUG" ] && { LINEP=D002; echo "Line `[ $LINENO ] && echo $LINENO || _get_lineno $LINEP` GLOBLINES :" >&2; }
  [ "$DEBUG" ] && echo "$GLOBLINES" | head -n 2 >&2

 #diPATTERN="$HOME/.pup_event/drive_"${1}""
  diPATTERN="$HOME/.pup_event/drive_${1}"'"'

 [ "$DEBUG" ] && { LINEP=D003; echo "Line `[ $LINENO ] && echo $LINENO || _get_lineno $LINEP` dipattern='$diPATTERN'" >&2; }
 [ "$DEBUG" ] && GRepGLob=`echo "$GLOBLINES" | grep -w "$diPATTERN" | grep "$DRVICON"`
 [ "$DEBUG" ] && { LINEP=D004; echo "Line `[ $LINENO ] && echo $LINENO || _get_lineno $LINEP` GRepGLob='$GRepGLob'" >&2; }

 [ "`echo "$GLOBLINES" | grep "$diPATTERN" | grep "$DRVICON"`" != "" ] && { echo "already there in '$homeGLOBICONS'"; return 0; }
# fi

 echo "<?xml version=\"1.0\"?>
<env:Envelope xmlns:env=\"http://www.w3.org/2001/12/soap-envelope\">
 <env:Body xmlns=\"http://rox.sourceforge.net/SOAP/ROX-Filer\">
  <SetIcon>
   <Path>$HOME/.pup_event/drive_${1}</Path>
   <Icon>/usr/local/lib/X11/pixmaps/${DRVICON}</Icon>
  </SetIcon>
</env:Body>
</env:Envelope>"  | rox -R
fi

#if test "`ps | grep clean_desk_icons | grep -v grep`" != "" ; then add_pinboard_func4 ; fi
#DBG echo "Cleandeskicons : $Cleandeskicons"
#DBG if test "`echo $Cleandeskicons`" = "1" ; then add_pinboard_func4 ; fi
#fi

[ "$DEBUG" ] && echo "_icon_unmounted_func END" >&2
}

_icon_mounted_func(){
 [ "$DEBUG" ] && echo "_icon_mounted_func BEGIN" >&2  #DBG
 [ "$DEBUG" ] && echo "1:'$1' 2:'$2' 3:'$3'"

local DRVICON PART_ICON imPATTERN GLOBLINES diPATTERN
#passed params: drivename category  ex: sda usbdrv
 DRVICON="drive_mntd48.png" #default.
 [ "$2" = "drivero" ] && DRVICON="drive_mntdro48.png"

 [ "$2" = "usbdrv" ]  && DRVICON="usbdrv_mntd48.png"
 [ "$2" = "card" ]    && DRVICON="card_mntd48.png"
 [ "$2" = "floppy" ]  && DRVICON="floppy_mntd48.png"
 [ "$2" = "optical" ] && DRVICON="optical_mntd48.png"
 [ "$2" = usbdrvro ]  && DRVICON="usbdrv_mntdro48.png"
 [ "$2" = cardro ]    && DRVICON="card_mntdro48.png"
 [ "$2" = floppyro ]  && DRVICON="floppy_mntdro48.png"
 [ "$2" = opticalro ] && DRVICON="optical_mntdro48.png"

 local hasRO
 hasRO='';
 tac /proc/mounts | grep -m1 -w "^/dev/$1" | awk '{print $4}' | grep $Q -w ro && hasRO=1
 case $2 in
 card*)       [ "$hasRO" ] && PART_ICON=card_mntdro48.png    || PART_ICON=card_mntd48.png   ;;
 floppy*)     [ "$hasRO" ] && PART_ICON=floppy_mntdro48.png  || PART_ICON=floppy_mntd48.png ;;
 optical*)    [ "$hasRO" ] && PART_ICON=optical_mntdro48.png || PART_ICON=optical_mntd48.png;;
 usbdrv*)     [ "$hasRO" ] && PART_ICON=usbdrv_mntdro48.png  || PART_ICON=usbdrv_mntd48.png ;;
 drive*|*|"") [ "$hasRO" ] && PART_ICON=drive_mntdro48.png   || PART_ICON=drive_mntd48.png  ;;
 esac

 DRVICON=${PART_ICON}
 [ "$DEBUG" ] && LINEP=D011 echo "Line `[ $LINENO ] && echo $LINENO || _get_lineno $LINEP` DRVICON '$DRVICON'" >&2

 imPATTERN='^/dev/'"${1}" #important, no space on end.
 [ "$DEBUG" ] && LINEP=D012 echo "Line `[ $LINENO ] && echo $LINENO || _get_lineno $LINEP` imPATTERN '$imPATTERN'" >&2
# if [ "`mount | cut -f 1,3 -d ' ' | grep "$imPATTERN" | grep -v ' /initrd/' | grep -v ' /$'`" = "" ];then
 [ "$DEBUG" ] && LINEP=D013 echo "Line `[ $LINENO ] && echo $LINENO || _get_lineno $LINEP` now finding the boot partition" >&2

 if [ "`/bin/df | tr -s ' ' | cut -f 1,6 -d ' ' | grep "$imPATTERN" | grep -v ' /initrd/' | grep -v ' /$'`" = "" ];then
  #only partitions mntd on /initrd/* then must be mntd at boot. cannot unmount.
  #also, full hd install has partition mntd on '/'.
  DRVICON="drive_mntd_boot48.png" #default.
  [ "$2" = "usbdrv" ]  && DRVICON="usbdrv_mntd_boot48.png"
  [ "$2" = "card" ]    && DRVICON="card_mntd_boot48.png"
  [ "$2" = "floppy" ]  && DRVICON="floppy_mntd_boot48.png"
  [ "$2" = "optical" ] && DRVICON="optical_mntd_boot48.png"
 [ "$DEBUG" ] && LINEP=D014 echo "Line `[ $LINENO ] && echo $LINENO || _get_lineno $LINEP` DRVICON-boot : '$DRVICON'" >&2
 fi

# Skip code for Macpup e17
local CURRENTWM_
 read CURRENTWM_ </etc/windowmanager
case $CURRENTWM_ in
*enlightenment*) return 0;;
esac

 #find out if already done...
 if [ -f "$homeGLOBICONS" ];then
  GLOBLINES=`cat "$homeGLOBICONS" | tr "\n" '|' | sed -e 's%</rule>|%\n%g'`
 #GLOBLINES=`cat $HOME/Choices/ROX-Filer/PuppyPin | tr "\n" '|' | sed -e 's%</rule>|%\n%g'`
 #diPATTERN='$HOME/.pup_event/drive_'"${1}"'"'
  diPATTERN="$HOME/.pup_event/drive_${1}"'"'

  [ "`echo "$GLOBLINES" | grep -w "$diPATTERN" | grep "$DRVICON"`" != "" ] && { echo "already there at $homeGLOBICONS"; return 0; }
#   fi

 echo "<?xml version=\"1.0\"?>
<env:Envelope xmlns:env=\"http://www.w3.org/2001/12/soap-envelope\">
 <env:Body xmlns=\"http://rox.sourceforge.net/SOAP/ROX-Filer\">
  <SetIcon>
   <Path>$HOME/.pup_event/drive_${1}</Path>
   <Icon>/usr/local/lib/X11/pixmaps/${DRVICON}</Icon>
  </SetIcon>
 </env:Body>
</env:Envelope>"  | rox -R
fi

#DBG  echo "$DBG line 122 DRVICON : $DRVICON"
#DBG echo $Cleandeskicons
#DBG if test "`echo $Cleandeskicons`" = "1" ; then add_pinboard_func4 ; fi

[ "$DEBUG" ] && echo "_icon_mounted_func END" >&2
}


__icon_mounted_func__(){
 #passed params: drivename category  ex: sda usbdrv
 DRVICON="drive_mntd48.png" #default.
 [ "$2" = "usbdrv" ] && DRVICON="usbdrv_mntd48.png"
 [ "$2" = "card" ] && DRVICON="card_mntd48.png"
 [ "$2" = "floppy" ] && DRVICON="floppy_mntd48.png"
 [ "$2" = "optical" ] && DRVICON="optical_mntd48.png"
 imPATTERN='^/dev/'"${1}" #important, no space on end.
 _debug "icon_mounted_func:$*"
# if [ "`mount | cut -f 1,3 -d ' ' | grep "$imPATTERN" | grep -v ' /initrd/' | grep -v ' /$'`" = "" ];then
 if [ "`_command df | tr -s ' ' | cut -f 1,6 -d ' ' | grep -w "$imPATTERN" | grep ' /$'`" != "" ];then
  #only partitions mntd on /initrd/* then must be mntd at boot. cannot unmount.
  #also, full hd install has partition mntd on '/'.
  DRVICON="drive_mntd_boot48.png" #default.
  [ "$2" = "usbdrv" ] && DRVICON="usbdrv_mntd_boot48.png"
  [ "$2" = "card" ] && DRVICON="card_mntd_boot48.png"
  [ "$2" = "floppy" ] && DRVICON="floppy_mntd_boot48.png"
  [ "$2" = "optical" ] && DRVICON="optical_mntd_boot48.png"
 fi
 #find out if already done...
 if [ -f $HOME/.config/rox.sourceforge.net/ROX-Filer/globicons ];then
  GLOBLINES="`cat $HOME/.config/rox.sourceforge.net/ROX-Filer/globicons | tr '\n' '|' | sed -e 's%</rule>|%\n%g'`"
  diPATTERN='$HOME/.pup_event/drive_'"${1}"'"'
  _debug "$HOME/.pup_event/drive_${1}"
  [ "`echo "$GLOBLINES" | grep "$diPATTERN" | grep "$DRVICON"`" != "" ] && return
 fi
 _debug "DRVICON='$DRVICON'"
 echo "<?xml version=\"1.0\"?>
<env:Envelope xmlns:env=\"http://www.w3.org/2001/12/soap-envelope\">
 <env:Body xmlns=\"http://rox.sourceforge.net/SOAP/ROX-Filer\">
  <SetIcon>
   <Path>$HOME/.pup_event/drive_${1}</Path>
   <Icon>/usr/local/lib/X11/pixmaps/${DRVICON}</Icon>
  </SetIcon>
 </env:Body>
</env:Envelope>"  | rox -R
}


_icon_remove_func(){
 #passed param is drive icon to remove from desktop. ex: sda
 echo "<?xml version=\"1.0\"?>
<env:Envelope xmlns:env=\"http://www.w3.org/2001/12/soap-envelope\">
 <env:Body xmlns=\"http://rox.sourceforge.net/SOAP/ROX-Filer\">
  <UnsetIcon>
   <Path>$HOME/.pup_event/drive_${1}</Path>
  </UnsetIcon>
 </env:Body>
</env:Envelope>"  | rox -R
}
