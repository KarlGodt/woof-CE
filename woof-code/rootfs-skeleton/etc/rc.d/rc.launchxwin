#!/bin/ash


########################################################################
#
#
#
#
#
# /dev/sda5:
# LABEL="MacPup430_F3"
# UUID="07443de5-1fab-4656-a3ab-7b1c14ccc8c8"
# TYPE="ext3"
# DISTRO_VERSION=430·#481·#416·#218·#478······#####change·this·as·required#####
# DISTRO_BINARY_COMPAT="puppy"·#"ubuntu"·#"puppy"·#####change·this·as·required#####
# case·$DISTRO_BINARY_COMPAT·in
# puppy)·#built·entirely·from·Puppy·v2.x·or·v3.x·or·4.x·pet·pkgs.
# DISTRO_NAME="Puppy"
# DISTRO_FILE_PREFIX="pup"·#"ppa"·#"ppa4"·#"pup2"··#pup4··###CHANGE·AS·REQUIRED,·recommend·limit·four·characters###
# DISTRO_COMPAT_VERSION="4"·#"2"··#4·····###CHANGE·AS·REQUIRED,·recommend·single·digit·5,·4,·3,·or·2###
# ;;
# esac
# PUPMODE=2
# KERNVER=2.6.30.6-KRG-i486
# ATADRIVES='·sda'
# USB_SATAD=''
# PUP_HOME='/'
# Linux·puppypc·2.6.30.6-KRG-i486·#1·SMP·Sun·Jan·2·20:32:12·GMT-1·2011·i686·GNU/Linux
# Xserver=/usr/X11R7/bin/Xvesa_stripped_upx9
# $LANG=en_US
# today=Mon·Oct·24·22:44:33·CEST·2011
#
#
#
#
#
########################################################################

echo "starting rc.launchxwin"
#DBGecho "starting rc.launchxwin" >/dev/console #DBG
#echo `pwd` #DBG
#DBGecho `pwd` > /dev/console #DBG
#autologinroot
#echo `pwd`
#DBGecho `pwd` > /dev/console
#FSCKME=`find / -maxdepth 2 -type f -name "fsckme*"`
#if [ -n "$FSCKME" ] ; then
#exit
#fi


#while [ -n "`ps | grep sysinit | grep -v 'grep'`" ]; do
while [ "`pidof rc.sysinit`" ]; do
#(( a++ ))
a=$((a+1))
#echo "rc.sysinit still running $a" #DBG
#DBGecho "rc.sysinit still running $a" > /dev/console #DBG
sleep 2
done
. /etc/rc.d/PUPSTATE

#rm -f /etc/.XLOADED
if [ -f /etc/.XLOADED ]; then #0.0
#echo "$0 : XLOADED exists" #DBG
#DBGecho "XLOADED exists" > /dev/console #DBG
if [ "`cat /etc/.XLOADED`" = "true" ]; then #0.1.0
echo "$0 : /etc/.XLOADED is set 'true' , exiting now.
Please run 'xwin' manually.
"
#DBGecho "XLOADED is true exit now" > /dev/console #DBG
exit 1
fi #0.1.0
fi #0.0
echo "$0 : /etc/.XLOADED is not sety 'true' , going on now..." #DBG
#DBGecho "XLOADED is not true going on now" > /dev/console #DBG

if [ "$PUPMODE" = 5 ] ; then
echo "Please run 'xorgwizard' to set up the X server.
"
exit 0
fi

if [ ! -L /usr/bin/X ];then #00.0
#v2.00r1 now support a text-mode-only puppy...
 if [ -f /usr/local/bin/elinks ];then #00.1.0
  if [ ! -f /tmp/bootcnt.txt ];then #00.1.1.0
   touch /tmp/bootcnt.txt
   exec /usr/local/bin/elinks file:///usr/share/doc/index.html
  fi #00.1.1.0
 else #00.1.0
  echo
  echo -e "\\033[1;31m$0 : Sorry, cannot start X. Link /usr/bin/X missing."
  echo -n "(suggestion: type 'xorgwizard' to run the Xorg Video Wizard)"
  echo -e "\\033[0;39m"
 fi #00.1.0
else #00.0

echo "$0 : /usr/bin/X exists"
#DBGecho "/usr/bin/X exists" > /dev/console #DBG

 #want to go straight into X on bootup only...
 #if [ ! -f /tmp/bootcnt.txt ];then
  #touch /tmp/bootcnt.txt
  # aplay -N /usr/share/audio/bark.au
  #dmesg > /tmp/bootkernel.log
  #exec xwin
 #fi
 if test -f /tmp/X.status ; then #1.0
  if [ "`cat /tmp/X.status`" = "X" ]; then #1.1.0
   echo "Found X in /tmp/X.status" #DBG
    #DBGecho "found X in /tmp/X.status" >/dev/console #DBG

    if [ "`grep 'autologinroot' /etc/inittab | grep -v -E '^#|^ #'`" != "" ]; then #1.1.1.0
     echo "found autologinroot in /etc/inittab"
      #DBGecho "found autologinroot in /etc/inittab" >/dev/console#DBG
      #exec xwin &
      #xwin &
      #exec xwin
     xwin
      #echo "did xwin start ?" #DBG
      #DBGecho "did xwin start ?" >/dev/console #DBG
    else
     echo "No autologin, exiting.
"
     exit 0
    fi #1.1.1.0
  else
   echo "Boot parameter apparently set to non-X environment. Exiting.
"
   exit 0
  fi #1.1.0
 fi #1.0
fi #00.0
#DBGecho >/dev/console #DBG
#echo  #DBG
#DBGecho 'X.status:'"`cat /tmp/X.status`" >/dev/console #DBG
#[ -f /tmp/X.status ] && echo 'X.status:'"`cat /tmp/X.status`" #DBG
#DBGecho 'XLOADED :'"`cat /etc/.XLOADED`" >/dev/console #DBG
#[ -f /etc/.XLOADED ] && echo 'XLOADED :'"`cat /etc/.XLOADED`" #DBG
#DBGecho "$0" >/dev/console #DBG
#echo "$0" #DBG
#DBGecho "end" >/dev/console #DBG
#echo "end" #DBG
#DBGecho >/dev/console #DBG
#echo #DBG
exit $?
