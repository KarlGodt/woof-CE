#!/bin/ash +e


########################################################################
#
#
#
#
#
# /dev/sda5:
# LABEL="MacPup430_F3"
# UUID="07443de5-1fab-4656-a3ab-7b1c14ccc8c8"
# TYPE="ext3"
# DISTRO_VERSION=430·#481·#416·#218·#478······#####change·this·as·required#####
# DISTRO_BINARY_COMPAT="puppy"·#"ubuntu"·#"puppy"·#####change·this·as·required#####
# case·$DISTRO_BINARY_COMPAT·in
# puppy)·#built·entirely·from·Puppy·v2.x·or·v3.x·or·4.x·pet·pkgs.
# DISTRO_NAME="Puppy"
# DISTRO_FILE_PREFIX="pup"·#"ppa"·#"ppa4"·#"pup2"··#pup4··###CHANGE·AS·REQUIRED,·recommend·limit·four·characters###
# DISTRO_COMPAT_VERSION="4"·#"2"··#4·····###CHANGE·AS·REQUIRED,·recommend·single·digit·5,·4,·3,·or·2###
# ;;
# esac
# PUPMODE=2
# KERNVER=2.6.30.6-KRG-i486
# ATADRIVES='·sda'
# USB_SATAD=''
# PUP_HOME='/'
# Linux·puppypc·2.6.30.6-KRG-i486·#1·SMP·Sun·Jan·2·20:32:12·GMT-1·2011·i686·GNU/Linux
# Xserver=/usr/X11R7/bin/Xvesa_stripped_upx9
# $LANG=en_US
# today=Mon·Oct·24·22:44:33·CEST·2011
#
#
#
#
#
########################################################################

. /etc/rc.d/f4puppy5

#TEST already running
pidof xwin >>$OUT && exit 1
pidof X    >>$OUT && exit 1
#TEST already running



echo "Starting rc.launchxwin ..."



#FUNCTIONS
_do_modeset(){
_debug "_do_modeset";#DBG
MODE_SETTING_DRIVERS=`grep -m1 -E '^i915|^nvidia|^nouveau|^radeon|^gfglx' /proc/modules`
case $MODE_SETTING_DRIVERS in

i915*)
    if
    grep -m1 '#card0driver' /etc/X11/xorg.conf | \
    grep $Q -E '"vesa"|"modesetting"'
    then
    echo "Xorg using it's vesa or modesetting driver.";#DBG
    return 0
    fi

    read driver vmsize nr_users state address <<EOI
    `echo "$MODE_SETTING_DRIVERS"`
EOI
    case $nr_users in
    0)
    /sbin/modprobe $VERB -r i915
    /sbin/modprobe $VERB -r fbcon
    /sbin/modprobe $VERB -b i915 modeset=1
    /sbin/modprobe $VERB -b fbcon
    ;;
    *) _info "i915 already in use : $MODE_SETTING_DRIVERS";#DBG
    esac
;;

nvidia*)
echo "TODO : nvidia.ko handling."
;;
nouveau*)
echo "TODO : nouveau.ko handling."
;;
fglrx*)
echo "TODO : fglrx.ko handling."
;;
radeon*)
echo "TODO : radeon.ko handling."
;;
*)
echo "'$MODE_SETTING_DRIVERS':  No modesetting driver loaded."
;;
esac

}
#FUNCTIONS



#WAIT for rc.sysinit
_pidof rc.sysinit && {
while [ "`pidof rc.sysinit`" ]; do
#DBGa=$((a+1));#DBG
#DBGecho "rc.sysinit still running $a";#DBG
#DBGecho "rc.sysinit still running $a" > /dev/console;#DBG
_notice  "rc.sysinit still running ..."
sleep 2
done
}
#WAIT for rc.sysinit



#CONFIG_FILES
. /etc/rc.d/PUPSTATE
#CONFIG_FILES



#MAIN
if [ ! -L /usr/bin/X ]; then
#v2.00r1 now support a text-mode-only puppy...
 if [ -f /usr/local/bin/elinks ];
 then
  if [ ! -f /tmp/bootcnt.txt ];
  then
   touch /tmp/bootcnt.txt
   exec /usr/local/bin/elinks file:///usr/share/doc/index.html
  else
   :
  fi
 else #no /usr/local/bin/elinks
  echo
  echo -e "\\033[1;31m$0 : Sorry, cannot start X. Link /usr/bin/X missing."
  echo -n "(suggestion: type 'xorgwizard' to run the Xorg Video Wizard)"
  echo -e "\\033[0;39m"
  _pidof aplay && killall aplay
  exit 0
 fi


else # /usr/bin/X


_debug "/usr/bin/X exists";#DBG
#DBGecho "/usr/bin/X exists" > /dev/console;#DBG


 if [ -f /var/lock/XLOADED ]; then
 #DBGecho "$0 : XLOADED exists";#DBG
 #DBGecho "XLOADED exists" > /dev/console;#DBG
  if [ "`cat /var/lock/XLOADED`" = "true" ];
  then
  echo "$0 : /var/lock/XLOADED is set 'true' , exiting now.
  Please run 'xwin' manually.
"
  #DBGecho "XLOADED is true, exiting now." > /dev/console;#DBG
   _pidof aplay && killall aplay
  exit 1
  fi
 fi


 _debug "/var/lock/XLOADED is not set 'true' , going on now...";#DBG
 #DBGecho "XLOADED is not true, going on now ..." > /dev/console;#DBG


 if [ "$PUPMODE" = 5 ]; then
 echo "Please run 'xorgwizard' to set up the X server.
 "
 _pidof aplay && killall aplay
 exit 0
 fi


__deprecated_bootcnt_txt_function(){
 #want to go straight into X on bootup only...
 if [ ! -f /tmp/bootcnt.txt ];then
  touch /tmp/bootcnt.txt
   aplay -N /usr/share/audio/bark.au
  #dmesg > /tmp/bootkernel.log #done in rc.sysinit
  exec xwin
 fi
}


_function_determine_Xorg(){
if test "`which Xorg`"; then
 REALPATH_X=`realpath /usr/bin/X`
  if test "${REALPATH_X##*/}" = Xorg;
  then

  XORG_XSERVER_VERSION=`Xorg -version 2>&1`
  test "$XORG_XSERVER_VERSION" || echo ERROR receiving XORG_XSERVER_VERSION
  XORG_XSERVER_VERSION_NUMBER=`echo "$XORG_XSERVER_VERSION" | grep -m1 -E 'X.Org X Server.*|X Window System Version .*|X Protocol .* Revision .* Release .*' | grep -oe '[.0-9]*$'`
  test "$XORG_XSERVER_VERSION_NUMBER" || echo ERROR determining XORG_XSERVER_VERSION_NUMBER

  case $XORG_XSERVER_VERSION_NUMBER in
  1.10*|1.11*|1.12*) _do_modeset;;
  1.13*|1.14*)       _do_modeset;;
  7.0*|1.0*|7.1*|1.1*|7.2*|1.2*) :;;
  1.3*) :;;
  1.4*) :;;
  1.5*) :;;
  1.6*) :;;
  1.7*|1.8*|1.9*)    _do_modeset;;
  *) echo "Unhandled Xorg X Server Version '$XORG_XSERVER_VERSION_NUMBER' .";
  esac
  fi
fi
}


 if test -f /var/lock/X.status; then
  if [ "`cat /var/lock/X.status`" = "X" ];
  then
   _debug "Found X in /var/lock/X.status";#DBG
    #DBGecho "found X in /tmp/X.status" >/dev/console;#DBG

    if [ "`grep 'autologinroot' /etc/inittab | grep -v -E '^#|^ #'`" != "" ];
    then #1.1.1.0
     _info "Found autologinroot in /etc/inittab";#DBG

     if test "`which Xorg`";
     then
     REALPATH_X=`realpath /usr/bin/X`
      if test "${REALPATH_X##*/}" = Xorg;
      then

      XORG_XSERVER_VERSION=`Xorg -version 2>&1`
      test "$XORG_XSERVER_VERSION" || echo ERROR receiving XORG_XSERVER_VERSION
      XORG_XSERVER_VERSION_NUMBER=`echo "$XORG_XSERVER_VERSION" | grep -m1 -E 'X.Org X Server.*|X Window System Version .*|X Protocol .* Revision .* Release .*' | grep -oe '[.0-9]*$'`
      test "$XORG_XSERVER_VERSION_NUMBER" || echo ERROR determining XORG_XSERVER_VERSION_NUMBER

      case $XORG_XSERVER_VERSION_NUMBER in
        1.10.*|1.11.*|1.12.*) _do_modeset;;
        1.13.*|1.14.*)        _do_modeset;;
        7.0.*|1.0.*|7.1.*|1.1.*|7.2.*|1.2.*) :;;
        1.3.*) :;;
        1.4.*) :;;
        1.5.*) :;;
        1.6.*) :;;
        1.7.*|1.8.*|1.9.*)    _do_modeset;;
        *) echo "Unhandled Xorg X Server Version '$XORG_XSERVER_VERSION_NUMBER' .";
      esac
      fi
     fi

      #DBGecho "found autologinroot in /etc/inittab" >/dev/console;#DBG
      #exec xwin &
      #xwin &
      #exec xwin
     xwin
      #echo "did xwin start ?";#DBG
      #DBGecho "did xwin start ?" >/dev/console;#DBG
    else
     echo "No autologin, exiting.
"
     _pidof aplay && killall aplay
     exit 0
    fi #autologinroot
  else
   echo "Boot parameter apparently set to non-X environment. Exiting.
"
   _pidof aplay && killall aplay
   exit 0
  fi # /tmp/X.status = X
 else
  echo -e "\\033[0;35m"
  echo "$0:"
  echo " Script to start the xwin script at boot."
  echo "Depends on the file /var/lock/X.status , that is created once by"
  echo "/etc/rc.d/rc.sysinit and removed by xwin."
  echo -e "\\033[0;39m"
 fi  #-f /tmp/X.status
fi   # ! /usr/bin/X

_pidof aplay && killall aplay
exit $?
#MAIN

### END ###
