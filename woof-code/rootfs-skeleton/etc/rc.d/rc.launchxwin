#!/bin/ash


########################################################################
#
#
#
#
#
# /dev/sda5:
# LABEL="MacPup430_F3"
# UUID="07443de5-1fab-4656-a3ab-7b1c14ccc8c8"
# TYPE="ext3"
# DISTRO_VERSION=430·#481·#416·#218·#478······#####change·this·as·required#####
# DISTRO_BINARY_COMPAT="puppy"·#"ubuntu"·#"puppy"·#####change·this·as·required#####
# case·$DISTRO_BINARY_COMPAT·in
# puppy)·#built·entirely·from·Puppy·v2.x·or·v3.x·or·4.x·pet·pkgs.
# DISTRO_NAME="Puppy"
# DISTRO_FILE_PREFIX="pup"·#"ppa"·#"ppa4"·#"pup2"··#pup4··###CHANGE·AS·REQUIRED,·recommend·limit·four·characters###
# DISTRO_COMPAT_VERSION="4"·#"2"··#4·····###CHANGE·AS·REQUIRED,·recommend·single·digit·5,·4,·3,·or·2###
# ;;
# esac
# PUPMODE=2
# KERNVER=2.6.30.6-KRG-i486
# ATADRIVES='·sda'
# USB_SATAD=''
# PUP_HOME='/'
# Linux·puppypc·2.6.30.6-KRG-i486·#1·SMP·Sun·Jan·2·20:32:12·GMT-1·2011·i686·GNU/Linux
# Xserver=/usr/X11R7/bin/Xvesa_stripped_upx9
# $LANG=en_US
# today=Mon·Oct·24·22:44:33·CEST·2011
#
#
#
#
#
########################################################################

pidof -o $$ -o %PPID "${0##*/}" && exit

echo "starting rc.launchxwin"

__exit_if_fsckme__(){
#DBGecho "starting rc.launchxwin" >/dev/console #DBG
echo `pwd` #DBG
#DBGecho `pwd` > /dev/console #DBG
autologinroot
echo `pwd`
#DBGecho `pwd` > /dev/console
FSCKME=`find / -maxdepth 2 -type f -name "fsckme*"`
if [ -n "$FSCKME" ] ; then
exit
fi
}

while [ "`pidof rc.sysinit`" ]; do
a=$((a+1))
#DBGecho "rc.sysinit still running $a" #DBG
#DBGecho "rc.sysinit still running $a" > /dev/console #DBG
echo -ne "\r rc.sysinit still running .. "
sleep 2
done

. /etc/rc.d/PUPSTATE

_do_modesetting(){
  XSERVER=`readlink -f $(which X)`
  logger -t "$0" -p 4 "XSERVER = '$XSERVER'"
if test "${XSERVER##*/}" = Xorg; then

###http://stackoverflow.com/questions/4304917/how-to-print-last-two-columns-using-awk
XORG_VERSION=`Xorg -version 2>&1 | grep -o 'X\.Org X Server [\.0-9]*' | awk '{print $(NF);}'`
logger -t "$0" -p 4 "XORG_VERSION = '$XORG_VERSION'"

      case $XORG_VERSION in

        7.0.*|1.0.*)   domodeset=0;;
        7.1.*|1.1.*)   domodeset=0;;
        7.2.*|1.2.*)   domodeset=0;;
        7.3.*|1.3.*)   domodeset=0;;
        7.4.*|1.4.*)   domodeset=0;;
        7.5.*|1.5.*)   domodeset=0;;
        7.6.*|1.6.*)   domodeset=0;;
        7.7.*|1.7.*)   domodeset=1;;
        7.8.*|1.8.*)   domodeset=1;;
        7.9.*|1.9.*)   domodeset=1;;
        7.10.*|1.10.*) domodeset=1;;
        7.11.*|1.11.*) domodeset=1;;
        7.12.*|1.12.*) domodeset=1;;
        7.13.*|1.13.*) domodeset=1;;
        7.14.*|1.14.*) domodeset=1;;
        7.15.*|1.15.*) domodeset=1;;
        7.1[6-9].*|1.1[6-9].*) domodeset=1;;
        7.[2-9][0-9].*|1.[2-9][0-9].*) domodeset=1;;
        *)   echo "Unhandled case XORG_VERSION '$XORG_VERSION' .";sleep 10s;;
     esac

MODPROBE_EXE=/sbin/modprobe

        for gDRIVER in i915 nvidia nouveau fglrx rhadeon
        do

        case $domodeset in
        1) logger -t "$0" -p 4 "domodeset = '$domodeset'"

        grep "^$gDRIVER " /proc/modules && {
        grep "^$gDRIVER " /proc/modules |
        while read driver vm nrusers users state address;
        do
          logger  -t "$0" -p 4  "driver='$driver' $vm $nrusers $users $state $address"
          [ "$nrusers" = 0 ] && {
             $MODPROBE_EXE -vr $gDRIVER; sleep 1s; $MODPROBE_EXE -v $gDRIVER modeset=1; }
        done && echo "$gDRIVER loaded" || echo "$gDRIVER already in use"
        } || {
         if busybox modprobe -l | grep $Q -w "$gDRIVER"; then
           echo "$0:Force loading of $gDRIVER..."
           logger -t "$0" -p 4 "$0:Force loading of $gDRIVER..."
           $MODPROBE_EXE -v $gDRIVER modeset=1
         fi
        }
        ;;
        0)
         if busybox modprobe -l | grep $Q -w "$gDRIVER"; then
          logger -t "$0" -p 4 "domodeset = '$domodeset'"
          modprobe -vr $gDRIVER; sleep 1s; modprobe -v $gDRIVER modeset=0
         fi
        ;;
        *) logger -t "$0" -p 4 "domodeset = '$domodeset'"
        echo "Unhandled case domodeset '$domodeset' .";sleep 10s;;
        esac

        done

fi        #test XSERVER
}
_do_modesetting
#DBGecho have done _do_modesetting #DBG

__do_modesetting(){
  XSERVER=`readlink -f $(which X)`
  logger -t "$0" -p 4 "XSERVER = '$XSERVER'"
if test "${XSERVER##*/}" = Xorg; then
      if test -f /etc/X11/xorg.conf; then

XORG_DRIVER=`grep -m1 '#card0driver' /etc/X11/xorg.conf | awk -F'"' '{print $2}'`
logger -t "$0" -p 4 "XORG_DRIVER = '$XORG_DRIVER'"
##http://stackoverflow.com/questions/4304917/how-to-print-last-two-columns-using-awk
XORG_VERSION=`Xorg -version 2>&1 | grep -o 'X\.Org X Server [\.0-9]*' | awk '{print $(NF);}'`
logger -t "$0" -p 4 "XORG_VERSION = '$XORG_VERSION'"

case $XORG_DRIVER in

intel)
      case $XORG_VERSION in

        7.0.*|1.0.*)   domodeset=0;;
        7.1.*|1.1.*)   domodeset=0;;
        7.2.*|1.2.*)   domodeset=0;;
        7.3.*|1.3.*)   domodeset=0;;
        7.4.*|1.4.*)   domodeset=0;;
        7.5.*|1.5.*)   domodeset=0;;
        7.6.*|1.6.*)   domodeset=0;;
        7.7.*|1.7.*)   domodeset=1;;
        7.8.*|1.8.*)   domodeset=1;;
        7.9.*|1.9.*)   domodeset=1;;
        7.10.*|1.10.*) domodeset=1;;
        7.11.*|1.11.*) domodeset=1;;
        7.12.*|1.12.*) domodeset=1;;
        7.13.*|1.13.*) domodeset=1;;
        7.14.*|1.14.*) domodeset=1;;
        7.15.*|1.15.*) domodeset=1;;
        *)   echo "Unhandled case XORG_VERSION '$XORG_VERSION' .";sleep 10s;;
     esac
     ;;
nv) :;;
nvidia)  :;;
nouveau) :;;
rhadeon) :;;
amd) :;;
ati) :;;
*) echo "Unhandled case XORG_DRIVER '$XORG_DRIVER' .";sleep 10s;;
esac

MODPROBE_EXE=/sbin/modprobe

case $XORG_DRIVER in
intel)
        case $domodeset in
        1) logger -t "$0" -p 4 "domodeset = '$domodeset'"
        grep ^i915 /proc/modules && {
        grep ^i915 /proc/modules |
        while read driver vm nrusers users state address;
        do
          logger  -t "$0" -p 4  "driver='$driver' $vm $nrusers $users $state $address"
          [ "$nrusers" = 0 ] && {
             $MODPROBE_EXE -vr i915; sleep 1s; $MODPROBE_EXE -v i915 modeset=1; }
        done && echo "i915 loaded" || echo i915 "i915 already in use"
        } || {
         echo "$0:Force loading of i915..."
         logger -t "$0" -p 4 "$0:Force loading of i915..."
          $MODPROBE_EXE -v i915 modeset=1
        }
        ;;
        0) logger -t "$0" -p 4 "domodeset = '$domodeset'"
        modprobe -vr i915; sleep 1s; modprobe -v i915 modeset=0;;
        *) logger -t "$0" -p 4 "domodeset = '$domodeset'"
        echo "Unhandled case domodeset '$domodeset' .";sleep 10s;;
        esac
        ;;
nv) :;;
nvidia) :;;
nouveau) :;;
rhadeon) :;;
amd) :;;
ati) :;;
*) echo "Unhandled case XORG_DRIVER '$XORG_DRIVER' .";sleep 10s;;
esac
      fi  #test -f /etc/X11/xorg.conf
fi        #test XSERVER
}
#_do_modesetting

if [ -f /var/lock/XLOADED ]; then #0.0

if [ "`cat /var/lock/XLOADED`" = "true" ]; then #0.1.0
echo "$0 : /var/lock/XLOADED is set 'true' , exiting now."
pidof X && echo "X already running ." || {
echo "Please run 'xwin' manually.
"; }

exit 1
fi #0.1.0
fi #0.0
echo "$0 : /var/lock/XLOADED is not set 'true' , going on now..." #DBG


if [ "$PUPMODE" = 5 ] ; then
echo "Please run 'xorgwizard' to set up the X server.
"
exit 0
fi

#################################
if [ ! -L /usr/bin/X ];then #00.0
#v2.00r1 now support a text-mode-only puppy...
 if [ -f /usr/local/bin/elinks ];then #00.1.0
  if [ ! -f /tmp/bootcnt.txt ];then #00.1.1.0
   touch /tmp/bootcnt.txt
   exec /usr/local/bin/elinks file:///usr/share/doc/index.html
  fi #00.1.1.0
 else #00.1.0
  echo
  echo -e "\\033[1;31m$0 : Sorry, cannot start X. Link /usr/bin/X missing."
  echo -n "(suggestion: type 'xorgwizard' to run the Xorg Video Wizard)"
  echo -e "\\033[0;39m"
 fi #00.1.0

###################################

elif test -f /tmp/X.status; then #1.0
  if [ "`cat /tmp/X.status`" = "X" ]; then #1.1.0
   echo "Found X in /tmp/X.status" #DBG
    #DBGecho "found X in /tmp/X.status" >/dev/console #DBG

    if [ "`grep 'autologinroot' /etc/inittab | grep -v -E '^#|^ #'`" != "" ]; then #1.1.1.0
     echo "Found autologinroot in /etc/inittab"
      #DBGecho "found autologinroot in /etc/inittab" >/dev/console#DBG
      #exec xwin &
      #xwin &
      #exec xwin

___do_modesetting(){
  XSERVER=`readlink -f $(which X)`
  logger -t "$0" -p 4 "XSERVER = '$XSERVER'"
if test "${XSERVER##*/}" = Xorg; then
      if test -f /etc/X11/xorg.conf; then

XORG_DRIVER=`grep -m1 '#card0driver' /etc/X11/xorg.conf | awk -F'"' '{print $2}'`
logger -t "$0" -p 4 "XORG_DRIVER = '$XORG_DRIVER'"
##http://stackoverflow.com/questions/4304917/how-to-print-last-two-columns-using-awk
XORG_VERSION=`Xorg -version 2>&1 | grep -o 'X\.Org X Server [\.0-9]*' | awk '{print $(NF);}'`
logger -t "$0" -p 4 "XORG_VERSION = '$XORG_VERSION'"

case $XORG_DRIVER in

intel)
      case $XORG_VERSION in

        7.0.*|1.0.*)   domodeset=0;;
        7.1.*|1.1.*)   domodeset=0;;
        7.2.*|1.2.*)   domodeset=0;;
        7.3.*|1.3.*)   domodeset=0;;
        7.4.*|1.4.*)   domodeset=0;;
        7.5.*|1.5.*)   domodeset=0;;
        7.6.*|1.6.*)   domodeset=0;;
        7.7.*|1.7.*)   domodeset=1;;
        7.8.*|1.8.*)   domodeset=1;;
        7.9.*|1.9.*)   domodeset=1;;
        7.10.*|1.10.*) domodeset=1;;
        7.11.*|1.11.*) domodeset=1;;
        7.12.*|1.12.*) domodeset=1;;
        7.13.*|1.13.*) domodeset=1;;
        7.14.*|1.14.*) domodeset=1;;
        7.15.*|1.15.*) domodeset=1;;
        *)   echo "Unhandled case XORG_VERSION '$XORG_VERSION' .";sleep 10s;;
     esac
     ;;
nv) :;;
nvidia)  :;;
nouveau) :;;
rhadeon) :;;
amd) :;;
ati) :;;
*) echo "Unhandled case XORG_DRIVER '$XORG_DRIVER' .";sleep 10s;;
esac

MODPROBE_EXE=/sbin/modprobe

case $XORG_DRIVER in
intel)
        case $domodeset in
        1) logger -t "$0" -p 4 "domodeset = '$domodeset'"
        grep ^i915 /proc/modules && {
        grep ^i915 /proc/modules |
        while read driver vm nrusers users state address;
        do
          logger  -t "$0" -p 4  "driver='$driver' $vm $nrusers $users $state $address"
          [ "$nrusers" = 0 ] && {
             $MODPROBE_EXE -vr i915; sleep 1s; $MODPROBE_EXE -v i915 modeset=1; }
        done && echo "i915 loaded" || echo i915 "i915 already in use"
        } || {
         echo "$0:Force loading of i915..."
         logger -t "$0" -p 4 "$0:Force loading of i915..."
          $MODPROBE_EXE -v i915 modeset=1
        }
        ;;
        0) logger -t "$0" -p 4 "domodeset = '$domodeset'"
        modprobe -vr i915; sleep 1s; modprobe -v i915 modeset=0;;
        *) logger -t "$0" -p 4 "domodeset = '$domodeset'"
        echo "Unhandled case domodeset '$domodeset' .";sleep 10s;;
        esac
        ;;
nv) :;;
nvidia) :;;
nouveau) :;;
rhadeon) :;;
amd) :;;
ati) :;;
*) echo "Unhandled case XORG_DRIVER '$XORG_DRIVER' .";sleep 10s;;
esac

      fi  #test -f /etc/X11/xorg.conf
fi        #test XSERVER
}

     xwin
      #echo "did xwin start ?" #DBG
      #DBGecho "did xwin start ?" >/dev/console #DBG

    else
     echo "No autologin, exiting.
"
     exit 0
    fi #1.1.1.0

  else
   echo "Boot parameter apparently set to non-X environment. Exiting.
"
   exit 0
  fi #1.1.0


else
echo "/usr/bin/X exists, but no  /tmp/X.status file."
sleep 10s
fi #00.0

_debug_end_(){
#DBGecho >/dev/console #DBG
echo  #DBG
#DBGecho 'X.status:'"`cat /tmp/X.status`" >/dev/console #DBG
[ -f /tmp/X.status ] && echo 'X.status:'"`cat /tmp/X.status`" #DBG
#DBGecho 'XLOADED :'"`cat /var/lock/XLOADED`" >/dev/console #DBG
[ -f /var/lock/XLOADED ] && echo 'XLOADED :'"`cat /var/lock/XLOADED`" #DBG
#DBGecho "$0" >/dev/console #DBG
echo "$0" #DBG
#DBGecho "end" >/dev/console #DBG
echo "end" #DBG
#DBGecho >/dev/console #DBG
echo #DBG
}

exit $?
