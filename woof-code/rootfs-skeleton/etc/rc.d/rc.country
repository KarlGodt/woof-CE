#!/bin/ash
#(c) Copyright 2007 Barry Kauler
#2007 Lesser GPL licence v2 (http://www.fsf.org/licensing/licenses/lgpl.html)
#v405 called from rc.sysinit.
#w000 /etc/DISTRO_SPECS, renamed pup_xxx.sfs, pup_save.2fs etc.
#w001 selection of locale.
#w019 april2009: selection of timezone.



#************
#KRG

OUT=/dev/null;ERR=$OUT
[ "$DEBUG" ] && { OUT=/dev/stdout;ERR=/dev/stderr; }
[ "$DEBUG" = 2 ] && set -x

Version=1.1-KRG-MacPup_O2

usage(){
MSG="
$0 [ help | version ]
"
echo "$MSG
$2"
exit $1
}
[ "`echo "$1" | grep -Ei "help|\-h"`" ] && usage 0
[ "`echo "$1" | grep -Ei "version|\-V"`" ] && { echo "$0: $Version";exit 0; }

trap "exit" HUP INT QUIT ABRT KILL TERM

#KRG
#************

########################################################################
#
#
#
#
#
# /dev/hda8:
# LABEL="MacPup431_O2"
# UUID="6d9a8e91-c301-4ff8-9875-97ec708cbee8"
# TYPE="ext3"
# DISTRO_NAME='Puppy'
# DISTRO_VERSION=431
# DISTRO_BINARY_COMPAT='puppy'
# DISTRO_FILE_PREFIX='pup'
# DISTRO_COMPAT_VERSION='4'
# PUPMODE=2
# KERNVER=2.6.30.9-i586-dpup005-Celeron2G
# PUP_HOME='/'
# SATADRIVES='·'
# USBDRIVES='·'
# Linux·puppypc·2.6.30.9-i586-dpup005-Celeron2G·#6·SMP·Sat·Jan·15·13:35:51·GMT-8·2011·i686·GNU/Linux
# Xserver=/usr/X11R7/bin/Xorg
# $LANG=de_DE@euro
# today=Do·27.·Okt·22:44:23·GMT-1·2011
#
#
#
#
#
########################################################################

Version='1.1-simple Puppy-Linux-4.3.1 KRG'

usage () {
echo "
[pkeys=LANG] $0 [showmaps help cli version]

    Starts setting keyboardlayout for console
    AND localtime for
    RAM boot, First boot (PUPMODE 5), OR IF
    the pkeys=[us,uk,be,...] boot parameter
    does not match the entry in /etc/keymap .

    IF called with any argument [cli] reconstruct
    interactively console keymap AND localtime .

BUGS: Likely .
    "
#define EAGAIN      11  /* Try again */
exit 11
}
show_available_maps(){
echo "Currently installed keyboard maps
found in '/lib/keymaps' directory :"
ls -1 /lib/keymaps | sed 's|\.gz$||' |tr '\n' '\t'
echo
exit $?
}

TTY=/dev/console
TTY9=`tty`
if [ "$TTY9" = '?' -o "$TTY9" = 'not a tty' ];then
TTY9="$TTY";fi
TTY="$TTY9"
echo "$0: using $TTY"
if [ "`echo "$@" |grep -Ei '\-h|help'`" ];then usage
elif [ "`echo "$@" |grep -Ei '\-s|show|key|map'`" ];then show_available_maps
elif [ "`echo "$@" |grep -Ei '\-V|version'`" ];then echo -e "\n$Version\n";exit $?;fi
if [ "$DISPLAY" -a "$TTY" = '/dev/console' ];then
xmessage "PLEASE run $0 from terminal console" &
#define EWOULDBLOCK EAGAIN  /* Operation would block */
exit 11;fi

CHANGE=;
[ "$pkeys" ] && PKEYS="$pkeys" #boot parameter
echo "pkeys='$PKEYS'"
if [ -f /etc/keymap ];then
currentkeymap=`cat /etc/keymap |sed 's#\.map$##'`
echo "currentkeymap='$currentkeymap'"
if [ "$pkeys" ];then
PKEYS="$pkeys"
if [ "$currentkeymap" != "$PKEYS" ];then
#set go
echo "$0: Changing '$currentkeymap' to '$PKEYS'"
CHANGE=on
echo -n "$PKEYS" > /etc/keymap #boot param.
fi;fi;fi
#[ "$PKEYS" ] && echo -n "$PKEYS" > /etc/keymap #boot param.

. /etc/rc.d/PUPSTATE
. /etc/DISTRO_SPECS
#PUPPYVER=`cat /etc/puppyversion`
STATUS=0
#if [ "$PUPMODE" = '5' ] || [ "$1" ] || [ "$CHANGE" ];then ##+++2012-01-31
if [ "$1" ];then rm -f /etc/keymap;unset pkeys PKEYS
sed -i 's,^LANG=.*,LANG=SET_new,' /etc/profile;fi
echo '$1='"'""$1""'"
echo "pkeys='$pkeys'"
echo "PKEYS='$PKEYS'"

askkbdlayout ()
{
 KEYBOARD=""
 FONTMAP=""
 CODEPAGE=""
 while :; do
  echo -n "" >/tmp/keybdlist.txt
  for AFILE in `ls /usr/share/kbd/keymaps/i386/[^i]*/*`
  do
   AKMAP=`basename $AFILE | sed -e 's/.map$//g'` #us, fr, br, etc.
   #hmmm, very slow way to do this...
   case $AKMAP in
    us) ACNTRY=" (USA)";;
    fr) ACNTRY=" (France)";;
    it) ACNTRY=" (Italy)";;
    be*) ACNTRY=" (Belgium)";;
    br*) ACNTRY=" (Brazil)";;
    croat) ACNTRY=" (Croatia)";;
    cz*) ACNTRY=" (Czech)";;
    de) ACNTRY=" (Germany)";;
    dk) ACNTRY=" (Denmark)";;
    es) ACNTRY=" (Spain)";;
    fi) ACNTRY=" (Finland)";;
    hu*) ACNTRY=" (Hungary)";;
    il) ACNTRY=" (Israel)";;
    is*) ACNTRY=" (Iceland)";;
    jp*) ACNTRY=" (Japan)";;
    la*) ACNTRY=" (Latin America)";;
    nl) ACNTRY=" (Netherlands)";;
    no) ACNTRY=" (Norway)";;
    pl) ACNTRY=" (Poland)";;
    pt*) ACNTRY=" (Portugal)";;
    ro*) ACNTRY=" (Romania)";;
    ru) ACNTRY=" (Russia)";;
    se) ACNTRY=" (Sweden)";;
    sk*) ACNTRY=" (Slovakia)";;
    sl*) ACNTRY=" (Slovenia)";;
    uk) ACNTRY=" (UK)";;
    wangbe) ACNTRY=" (Belgium)";;
    qc) ACNTRY=" (Quebec, Canada)";;
    *)  ACNTRY="";;
   esac
   APATH=`dirname $AFILE`
   ATYPE=`basename $APATH` #qwerty, qwertz, etc.
   echo -e "$AKMAP \"${ATYPE}${ACNTRY}\"" >> /tmp/keybdlist.txt
  done
  KEYLIST="us \"qwerty (USA)\" `sort /tmp/keybdlist.txt | tr '\n' ' '`"
  echo '#!/bin/sh' >/tmp/keydlg
  echo 'dialog --aspect 10 --no-cancel --menu "Select the keyboard layout:\n(UP/DOWN arrows then ENTER key)" 0 0 0 \' >>/tmp/keydlg #' geany fix
  echo "$KEYLIST 2> /tmp/kbdextlayout.txt" >>/tmp/keydlg
  echo 'exit $?' >>/tmp/keydlg
  chmod 755 /tmp/keydlg
  /tmp/keydlg >$TTY
  [ $? != 0 ] && return 1
  clear > $TTY # 2>&1 #clear screen
  KEYBOARD=`cat /tmp/kbdextlayout.txt`
  case $KEYBOARD in
   cz|hu101|pl|ro_win|sk-qwerty|croat|cz-us-qwertz|hu|slovene)
    FONTMAP=/usr/share/kbd/consolefonts/lat2-12.psfu
    CODEPAGE=ISO-8859-2
    break
    ;;
   *)
    FONTMAP=/usr/share/kbd/consolefonts/lat1-12.psfu
    CODEPAGE=ISO-8859-1
    break
    ;;
  esac
 done
 KEYBOARD=$KEYBOARD.map  #.gz
 return 0
}

if [ ! -e /etc/keymap ];then
 while :; do
   askkbdlayout #this is extended menu, func above.
   #...this sets KEYBOARD, FONTMAP, CODEPAGE variables.
   if [ $? -eq 0 ];then
    KMAP="$KEYBOARD"
    break
   else #cancel, error exit.
    KMAP="us"
   fi
 done #end while loop.
 echo -n "$KMAP" > /etc/keymap
 echo "You have chosen \"$KMAP\" keyboard map." >$TTY
 echo "Note, this information is saved in file /etc/keymap" >$TTY
 if [ "$FONTMAP" ];then
  echo -n "$FONTMAP" > /etc/fontmap
 fi
 if [ "$CODEPAGE" ];then
  echo -n "$CODEPAGE" > /etc/codepage
 fi
fi

if [ -e /etc/keymap ];then
 if [ $PKEYS ];then
  echo -n "$PKEYS" > /etc/keymap
  echo -e "Loading pkeys \"$PKEYS\" /lib/keymaps keyboard map... " >$TTY
  gzip -dcf /lib/keymaps/$PKEYS.gz | loadkmap ;STATUS=$?
 else
  KMAP=`cat /etc/keymap`
  cat /etc/keymap | grep "\\.map" > /dev/null 2>&1 #looking for .map
  if [ $? -eq 0 ];then #=0 found.
   #key layout maps are in /usr/share/kbd, using "kbd" package...
   KMAP=`basename $KMAP .map`
   echo -e "Loading /usr/share/kbd \"$KMAP\" keyboard map... " >$TTY
   loadkeys ${KMAP}.map ;STATUS=$?
   #xwin also set these...
   FONTMAP=`cat /etc/fontmap`
   #echo -e "Loading fontmap \"${FONTMAP}\"..."
   #setfont $FONTMAP   #cat "$FONTMAP" | loadfont
   #...this needs work. messes up font set required by dialog program. see also /usr/X11R7/bin/xwin.
   #um, also have /etc/codepage, don't know how to do anything with that.
  else
   #this is the technique up to Puppy v0.8.6. KMAP is just a 2-letter code...
   echo -e "Loading /lib/keymaps \"$KMAP\" keyboard map... " >$TTY
   gzip -dcf /lib/keymaps/$KMAP.gz | loadkmap ;STATUS=$?
  fi
 fi
else
 echo -e "loading default \"us\" (USA) keyboard map... " >$TTY
 gzip -dcf /lib/keymaps/us.gz | loadkmap ;STATUS=$?
fi


#need to set Linux system time/date, from hardware clock...
echo -e "Setting hwclock --hctosys (to) --localtime " >$TTY
test -c /dev/rtc0 || {
    [ "$DEBUG" ] && echo -e "/dev/rtc0 not a character special device ..\nAttempting to create it..."
test -c /dev/rtc/rtc0 && ln -sf rtc/rtc0 /dev/rtc0 || { rm -f /dev/rtc0; mknod /dev/rtc0 c 253 0; }
}
hwclock -f /dev/rtc0 --hctosys --localtime || hwclock --hctosys --localtime --directisa --debug
#...--hctosys reads cmos clock to system.
#...--localtime means that cmos clock is set to local-time.

#w001 creates locale files in /usr/lib/locale...
LANG=`grep '^LANG=' /etc/profile | cut -f 2 -d '='`
[ ! "$LANG" ] && LANG=empty_string
echo "LANG='$LANG'" >$TTY
if [ "`locale -a | grep "$LANG"`" = "" ];then
 echo "Running 'chooselocale cli' AND 'timezone-set cli'" >$TTY
 #BASELANG=`basename $LANG .utf8`
 #if [ -f /usr/share/i18n/locales/$BASELANG ];then
 # localedef -f UTF-8 -i $BASELANG --no-archive ${BASELANG}.utf8
 #else
 # [ "`locale -a | grep "en_US.utf8"`" = "" ] && localedef -f UTF-8 -i en_US --no-archive en_US.utf8
 #fi
 read -s -p "press any key to run chooselocale cli" -n1 someKEY 1>$TTY 2>&1
 /usr/sbin/chooselocale cli > $TTY
 read -s -p "press any key to run timezpne-set cli" -n1 someKEY 1>$TTY 2>&1
 /usr/sbin/timezone-set cli > $TTY
fi

#fi ##+++2012-01-31 PUPMODE 5

echo "$0: END"
return $STATUS 2>$ERR || exit $STATUS
###END###
