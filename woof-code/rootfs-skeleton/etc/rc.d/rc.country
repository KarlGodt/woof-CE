#!/bin/ash
#(c) Copyright 2007 Barry Kauler
#2007 Lesser GPL licence v2 (http://www.fsf.org/licensing/licenses/lgpl.html)
#v405 called from rc.sysinit.
#w000 /etc/DISTRO_SPECS, renamed pup_xxx.sfs, pup_save.2fs etc.
#w001 selection of locale.
#w019 april2009: selection of timezone.

########################################################################
#
#
#
#
#
# /dev/sda5:
# LABEL="MacPup430_F3"
# UUID="07443de5-1fab-4656-a3ab-7b1c14ccc8c8"
# TYPE="ext3"
# DISTRO_VERSION=430·#481·#416·#218·#478······#####change·this·as·required#####
# DISTRO_BINARY_COMPAT="puppy"·#"ubuntu"·#"puppy"·#####change·this·as·required#####
# case·$DISTRO_BINARY_COMPAT·in
# ubuntu)
# DISTRO_NAME="Jaunty·Puppy"
# DISTRO_FILE_PREFIX="upup"
# DISTRO_COMPAT_VERSION="jaunty"
# ;;
# debian)
# DISTRO_NAME="Lenny·Puppy"
# DISTRO_FILE_PREFIX="dpup"
# DISTRO_COMPAT_VERSION="lenny"
# ;;
# slackware)
# DISTRO_NAME="Slack·Puppy"
# DISTRO_FILE_PREFIX="spup"
# DISTRO_COMPAT_VERSION="12.2"
# ;;
# arch)
# DISTRO_NAME="Arch·Puppy"
# DISTRO_FILE_PREFIX="apup"
# DISTRO_COMPAT_VERSION="200904"
# ;;
# t2)
# DISTRO_NAME="T2·Puppy"
# DISTRO_FILE_PREFIX="tpup"
# DISTRO_COMPAT_VERSION="puppy5"
# ;;
# puppy)·#built·entirely·from·Puppy·v2.x·or·v3.x·or·4.x·pet·pkgs.
# DISTRO_NAME="Puppy"
# DISTRO_FILE_PREFIX="pup"·#"ppa"·#"ppa4"·#"pup2"··#pup4··###CHANGE·AS·REQUIRED,·recommend·limit·four·characters###
# DISTRO_COMPAT_VERSION="4"·#"2"··#4·····###CHANGE·AS·REQUIRED,·recommend·single·digit·5,·4,·3,·or·2###
# ;;
# esac
# PUPMODE=2
# KERNVER=2.6.30.6-KRG-i486
# ATADRIVES='·sda'
# USB_SATAD=''
# PUP_HOME='/'
# Linux·puppypc·2.6.30.6-KRG-i486·#1·SMP·Sun·Jan·2·20:32:12·GMT-1·2011·i686·GNU/Linux
# Xserver=/usr/X11R7/bin/Xvesa_stripped_upx9
# $LANG=en_US
# today=Mon·Oct·24·22:43:50·CEST·2011
#
#
#
#
#
########################################################################
. /etc/rc.d/f4puppy5

#variables
DEFAULT_KEYBOARD_MAP=de

usage () {
echo "
    $0 [force] [any arg]

    starts setting keyboardlayout for console
    AND localtime for RAM boot, First boot
    In PUPMODE 5 OR
    IF the pkeys=[us,uk,be,...] boot parameter
    does not match the entry in /etc/keymap .

    IF called with any argument reconstruct
    interactively console keymap AND localtime .
    "
#define EAGAIN      11  /* Try again */
exit 11
}

TTY=/dev/console
TTY9=`tty`
if [ "$TTY9" = '?' -o "$TTY9" = 'not a tty' ];then
TTY9="$TTY";fi
TTY="$TTY9"
echo "$0: using $TTY"
if [ "`echo $@ |grep 'help'`" ];then usage;fi
if [ "$DISPLAY" -a "$TTY" = '/dev/console' ];then
xmessage "PLEASE run $0 from terminal console" &
#define EWOULDBLOCK EAGAIN  /* Operation would block */
exit 11;fi

for p in $*; do
case $p in *force) FORCE=FORCE;DIALOG_TMOUT='--timeount 5';shift;;*)P="${P}$p ";; esac
done
test "$P" && set - $P

CHANGE=;
[ "$pkeys" ] && PKEYS="$pkeys" #boot parameter
_notice "pkeys='$PKEYS'"

if [ -f /etc/keymap ];then
currentkeymap=`cat /etc/keymap |sed 's#\.map$##'`
_info "currentkeymap='$currentkeymap'"
if [ "$pkeys" ];then
PKEYS="$pkeys"
if [ "$currentkeymap" != "$PKEYS" ];then
#set go
_notice "Changing $currentkeymap to $PKEYS"
CHANGE=on
echo "$PKEYS" > /etc/keymap #boot param.
fi;fi;fi

. /etc/rc.d/PUPSTATE
. /etc/DISTRO_SPECS
#PUPPYVER="`cat /etc/puppyversion`"
STATUS=0

#[ $pkeys ] && PKEYS=$pkeys #boot parameter
if [ "$1" ];then rm $VERB -f /etc/keymap;unset pkeys PKEYS
sed -i".sed" 's,^LANG=.*,LANG=SET_new,' /etc/profile && rm $VERB -f /etc/profile.sed;
fi
_debug "\$1='$1'"
_debug "pkeys='$pkeys'"
_debug "PKEYS='$PKEYS'"

askkbdlayout ()
{
 KEYBOARD=""
  FONTMAP=""
 CODEPAGE=""
 while :; do
  echo -n "" >/tmp/keybdlist.txt
  for aFILE in `ls /usr/share/kbd/keymaps/i386/[^i]*/*`
  do
   aKMAP="`basename $aFILE .map`" #us, fr, br, etc.
   #hmmm, very slow way to do this...
   case $aKMAP in
    us)    ACNTRY=" (USA)";;
    fr)    ACNTRY=" (France)";;
    it)    ACNTRY=" (Italy)";;
    be*)   ACNTRY=" (Belgium)";;
    br*)   ACNTRY=" (Brazil)";;
    croat) ACNTRY=" (Croatia)";;
    cz*)   ACNTRY=" (Czech)";;
    de)    ACNTRY=" (Germany)";;
    dk)    ACNTRY=" (Denmark)";;
    es)    ACNTRY=" (Spain)";;
    fi)    ACNTRY=" (Finland)";;
    hu*)   ACNTRY=" (Hungary)";;
    il)    ACNTRY=" (Israel)";;
    is*)   ACNTRY=" (Iceland)";;
    jp*)   ACNTRY=" (Japan)";;
    la*)   ACNTRY=" (Latin America)";;
    nl)    ACNTRY=" (Netherlands)";;
    no)    ACNTRY=" (Norway)";;
    pl)    ACNTRY=" (Poland)";;
    pt*)   ACNTRY=" (Portugal)";;
    ro*)   ACNTRY=" (Romania)";;
    ru)    ACNTRY=" (Russia)";;
    se)    ACNTRY=" (Sweden)";;
    sk*)   ACNTRY=" (Slovakia)";;
    sl*)   ACNTRY=" (Slovenia)";;
    uk)    ACNTRY=" (UK)";;
    wangbe) ACNTRY=" (Belgium)";;
    qc)    ACNTRY=" (Quebec, Canada)";;
    *)     ACNTRY="";;
   esac
   aPATH="${aFILE%/*}"
   aTYPE="${aPATH##*/}" #qwerty, qwertz, etc.
   echo -e "$aKMAP \"${aTYPE}${ACNTRY}\"" >> /tmp/keybdlist.txt
  done
  KEYLIST="us \"qwerty (USA)\" `sort /tmp/keybdlist.txt | tr '\n' ' '`"
  echo '#!/bin/sh' >/tmp/keydlg
  echo "dialog $DIALOG_TMOUT "'--aspect 10 --no-cancel --menu "Select the keyboard layout:\n(UP/DOWN arrows then ENTER key)" 0 0 0 \' >>/tmp/keydlg #' geany fix
  echo "$KEYLIST 2> /tmp/kbdextlayout.txt" >>/tmp/keydlg
  echo 'exit $?' >>/tmp/keydlg
  chmod $VERB 0755 /tmp/keydlg
  /tmp/keydlg >$TTY
  [ $? = 0 ] || return 1
  clear > $TTY 2>&1 #clear screen
  read KEYBOARD </tmp/kbdextlayout.txt
  case $KEYBOARD in
   cz|hu101|pl|ro_win|sk-qwerty|croat|cz-us-qwertz|hu|slovene)
    FONTMAP=/usr/share/kbd/consolefonts/lat2-12.psfu
    CODEPAGE=ISO-8859-2
    break
    ;;
   *)
    FONTMAP=/usr/share/kbd/consolefonts/lat1-12.psfu
    CODEPAGE=ISO-8859-1
    break
    ;;
  esac
 done
 KEYBOARD=$KEYBOARD.map  #.gz
 return 0
}

#[ "$PKEYS" ] && echo "$PKEYS" > /etc/keymap #boot param.

if [ ! -e /etc/keymap ];then
 while :; do
   askkbdlayout #this is extended menu, func above.
   #...this sets KEYBOARD, FONTMAP, CODEPAGE variables.
   if [ $? -eq 0 ];then
    KMAP="$KEYBOARD"
    #break
   else #cancel, error exit.
    KMAP="us"
   fi
   break
 done #end while loop.
  echo "$KMAP" > /etc/keymap
 echo "You have chosen \"$KMAP\" keyboard map."
 echo "Note, this information is saved in file /etc/keymap"
 if [ "$FONTMAP" ];then
  echo "$FONTMAP" > /etc/fontmap
 fi
 if [ "$CODEPAGE" ];then
  echo "$CODEPAGE" > /etc/codepage
 fi
fi

if [ -e /etc/keymap ];then
 if [ "$PKEYS" ];then
  echo "$PKEYS" > /etc/keymap
  echo -n "Loading \"$PKEYS\" keyboard map... "
  gzip -dcf /lib/keymaps/$PKEYS.gz | loadkmap ;STATUS=$?
 else
  read KMAP </etc/keymap
  grep $Q "\.map" /etc/keymap  #looking for .map
  if [ $? -eq 0 ];then #=0 found.
   #key layout maps are in /usr/share/kbd, using "kbd" package...
   KMAP="`basename $KMAP .map`"
   echo -en "Loading \"$KMAP\" keyboard map... "
   loadkeys ${KMAP}.map ;STATUS=$?
   #xwin also set these...
   read FONTMAP </etc/fontmap
   #echo -e "Loading fontmap \"${FONTMAP}\"..."
   #setfont $FONTMAP   #cat "$FONTMAP" | loadfont
   #...this needs work. messes up font set required by dialog program. see also /usr/X11R7/bin/xwin.
   #um, also have /etc/codepage, don't know how to do anything with that.
  else
   #this is the technique up to Puppy v0.8.6. KMAP is just a 2-letter code...
   echo -ne "Loading \"$KMAP\" keyboard map... "
   gzip -dcf /lib/keymaps/$KMAP.gz | loadkmap ;STATUS=$?
  fi
 fi
else
 echo -n "loading \"us\" (USA) keyboard map... "
 gzip -dcf /lib/keymaps/us.gz | loadkmap ;STATUS=$?
fi


#need to set Linux system time/date, from hardware clock...
/sbin/hwclock $L_DBG --hctosys --localtime || /sbin/hwclock $L_DBG --hctosys --localtime --directisa
#...--hctosys reads cmos clock to system.
#...--localtime means that cmos clock is set to local-time.

#w001 creates locale files in /usr/lib/locale...
LANG="`grep '^LANG=' /etc/profile | cut -f 2 -d '='`"
[ "$LANG" ] || LANG=empty_string
_info "LANG='$LANG'"
if [ "`locale -a | grep "$LANG"`" = "" ];then
 #BASELANG="`basename $LANG .utf8`"
 #if [ -f /usr/share/i18n/locales/$BASELANG ];then
 # localedef -f UTF-8 -i $BASELANG --no-archive ${BASELANG}.utf8
 #else
 # [ "`locale -a | grep "en_US.utf8"`" = "" ] && localedef -f UTF-8 -i en_US --no-archive en_US.utf8
 #fi
 /usr/sbin/chooselocale cli $FORCE > $TTY
 /usr/sbin/timezone-set cli $FORCE > $TTY
fi

exit $STATUS
###END###
