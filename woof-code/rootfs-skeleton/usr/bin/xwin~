#!/bin/bash --login
#(c) Copyright Barry Kauler 2003,2004,2005,2006,2007 www.puppylinux.com
#2007 Lesser GPL licence v2 (http://www.fsf.org/licensing/licenses/lgpl.html)
#v3.90 rawpup, update for Xvesa.
#v3.94, v3.95, recognise Classmate, EeePC laptops.
#v3.98 change to home directory.
#v3.98 forced reboot handling improved by pizzasgood.
#v3.99 automatically handle problematic video adapters that hang Xvesa.
#v405 added support for xvesa 1024x600.
#v408 BK k2.6.25.16 serial mouse driver now a module 'sermouse'.
#v411 rerwin: mouse improvements.
#w001 fixes for woof, /usr/X11R7 not used.
#w460 fixes to get Xvesa running with woof build. fix for X restart after exit.
#w477, w478 more fixes Xvesa restart after first 'Exit to prompt'.
#w479 older Xvesa server may not recognise '-sp' option.
#w479 k2.6.18.8 need awful hack, Xorg, '-nolisten tcp' causes hang!
#v424 bad hack to fix serial mouse.
exec 2>>/tmp/xwin.log.`date +%H_%M`
#NUMXWINS=`pidof xwin | wc -w` #w478
#[ $NUMXWINS -gt 1 ] && exit   #w478
#bash --login
if test "`echo $PATH | grep 'X11'`" = "" ; then
PATH="$PATH:/usr/X11R7/bin"
fi
#bash --login
#login -f root

outputCONSOLE=/dev/tty2
echo "$0:""PATH='$PATH'" > $outputCONSOLE
#echo "starting $0 now"
echo "$0:"'starting xwin now ,$0: '"$0" > $outputCONSOLE
#echo ' $DISPLAY '"$DISPLAY"
echo "$0:"'$DISPLAY : '"$DISPLAY" > $outputCONSOLE
echo "$0:"'runlevel : '`runlevel` > $outputCONSOLE
echo "$0:"'$HOME    : '"$HOME" > $outputCONSOLE
echo "$0:"'pwd      : '`pwd` > $outputCONSOLE
echo "$0:"'PATH     : '$PATH > $outputCONSOLE

XWINS=`ps -C xwin`
NUMXWINS=$(( $(echo "$XWINS" | wc -l) -1))
PROGPID=$$
PROGTTY=`basename $(tty)`

if [ -z "`echo "$XWINS" | head -n2 | tail -n 1 | grep "$PROGTTY"`" ] || [ -z "`echo "$XWINS" | head -n 2 | tail -n 1 | grep "$PROGPID"`" ] ; then
 echo -e "\\033[0;31m""More than one instance of xwin running : $NUMXWINS -- exit""\\033[0;39m"
 exit

elif [ -n "$DISPLAY" ]; then ## || echo '$DISPLAY not empty exit now ' && echo "$DISPLAY" && exit #v2.11 from GuestToo.
 echo '$DISPLAY not empty :---'"$DISPLAY"'---'
 echo 'exiting $0 now :'"$0"
exit

#### Begin XLOADED part ####
echo -e"\\033[0;32m""Begin XLOADED PART"
#v1.0.7 J_Reys idea (see note further down)...
elif [ -f /etc/.XLOADED ];then # 9.0

 #v3.98 improved handling by pizzasgood...
# if [ "`cat /etc/.XLOADED`" = "true" ];then
#  #last time X ran, PC hung and had to be rebooted...
#  echo -en "\\033[1;31m" #34=blue, 33=yellow, 32=green, 31=red, 35=purple, 36=aquablue, 38=black.
#  echo '
#It seems that last time X ran, the computer hung and you had to reboot.
#Have now dropped down to the commandline. If you want to run the Xorg
#Video Wizard, type "xorgwizard", and after configuring /etc/X11/xorg.conf
#(hopefully correctly this time!) type "xwin" to start X.'
#  echo -e "\\033[0;39m"
#  rm -f /etc/.XLOADED #otherwise cannot start X.
#  exit
# fi
 if [ "`cat /etc/.XLOADED`" = "true" ];then # 9.1.0
  #last time X ran, PC hung and had to be rebooted...
  ##openvt -c 10 -s -w
  dialog --timeout 30 --title "Warning" --yes-label "Ignore" --no-label "Commandline" --yesno "X seems to have exited uncleanly the last time you ran Puppy.  This is usually because of an improper shutdown (such as a power failure), but may be because something is broken.

If it was just something like a power failure, wait for 30 seconds or choose <Ignore> for normal startup of X...

If there is a problem, such as X not working, choose <Commandline> to drop out to a commandline. There will then be further advice how to fix X...

If undecided, wait 30 seconds for normal startup of X..." 0 0
  if [ ! "$?" = 1 ]; then # 9.1.1.0
    rm /etc/.XLOADED
    ##chvt 1
  else # 9.1.1.0
    echo -en "\\033[1;31m" #34=blue, 33=yellow, 32=green, 31=red, 35=purple, 36=aquablue, 38=black.
    echo '
It seems that last time X ran, the computer hung and you had to reboot.
Have now dropped down to the commandline. If you want to run the Xorg
Video Wizard, type "xorgwizard", and after configuring /etc/X11/xorg.conf
(hopefully correctly this time!) type "xwin" to start X.'
    echo -e "\\033[0;39m"
    rm -f /etc/.XLOADED #otherwise cannot start X.
    ##sleep 9s
    ##chvt 1
    exit # exit One
  fi # 9.1.1.0
 else # 9.1.0
  echo "/etc/.XLOADED is false"
 fi # 9.1.0

##fi # 9.0
echo -e "\\033[0;34m""End XLOADED part"
#### End XLOADED part ####

else
echo -e "\\033[1;33m""This script will run X windows for you...""\\033[0;39m"
fi


#cd ~/   #v3.98 Ensure current directory is root, in case changed at command prompt, so rox icon and menu item open only at home directory. rerwin
echo "$0:"'changing to dir $HOME :'"$HOME" > $outputCONSOLE
echo "$0:"'before cd $HOME :'`pwd` > $outputCONSOLE
cd $HOME
#echo `pwd`
echo "$0:""after cd'd to $HOME :"`pwd` > $outputCONSOLE

#[ "$HOME" != "/" ] && cd ~/
if [ "$HOME" != "/" ] ; then
cd ~/
echo "$0:""cd'd ~/    :"`pwd` > $outputCONSOLE
fi
#echo `pwd`
#echo `pwd` > $outputCONSOLE

cd /root
echo "$0:"'cd /root :'`pwd` > $outputCONSOLE
#echo `pwd`
#echo `pwd` > $outputCONSOLE

#sleep 10

#. /etc/profile

#variables created at bootup by init script in initrd...
. /etc/rc.d/PUPSTATE #v2.02
#PUPMODE=current operating configuration,
#PDEV1=the partition have booted off, DEV1FS=f.s. of PDEV1,
#PUPSFS=pup_201.sfs versioned name, stored on PDEV1, PUPSAVE=vfat,sda1,/pup_save.3fs
#PMEDIA is a broad description of the boot media, ex "usbflash" or "idehd".

KERNELVER="`uname -r`" #w479
Date="`date +%d%b%Y`"


#0.9.9 enables to start a specific w.m. from commandline...
if [ $1 ];then # 1.0
 echo -n "$1" > /etc/windowmanager
 #note, /root/.xinitrc uses this file.
fi # 1.0

#### BEGIN Ex /etc/profile part #######
#v2.10 MU: rox crashes with DRI modules. solution:
export XLIB_SKIP_ARGB_VISUALS=1
#v2.02 rarsa provided this...
#freedesktop base directory spec: standards.freedesktop.org/basedir-spec/latest/
export XDG_DATA_HOME=$HOME/.local/share
export XDG_CONFIG_HOME=$HOME/.config
export XDG_DATA_DIRS=/usr/share:/usr/local/share
export XDG_CONFIG_DIRS=/etc/xdg #v2.14 changed from /usr/etc
export XDG_CACHE_HOME=$HOME/.cache

#w468 'netpbm' utilities need to be told where rgb.txt is...
[ -f /usr/share/X11/rgb.txt ] && export RGBDEF=/usr/share/X11/rgb.txt

#v2.12
#xorgwizard creates this file, run once only...
if [ ! -f /tmp/bootcnt.txt ];then
 [ -f /etc/resolutionfix ] && eval `cat /etc/resolutionfix`
fi
##### END Ex profile X PART ##############


XinitXorgVars=
if [ "$HOME" != "/root" ] ;then
if [ ! -f /etc/system.jwmrc ]; then cp /root/.jwmrc /etc/system.jwmrc ; fi
#XinitXorgVars="xterm -geometry +1+1 -n login -display :0"
#XinitXorgVars="xterm -geometry +1+1 -n login -display :0 -e /etc/rc.d/rc.xsession"
#XinitXorgVars="/usr/X11R7/bin/xterm -geometry +1+1 -e /etc/rc.d/rc.xsession -display :0"
#XinitXorgVars="/usr/X11R7/bin/xterm -geometry +1+1 -e autologinroot & -display :0"
#XinitXorgVars="/usr/X11R7/bin/xterm -geometry +1+1 -display :0 -e autologinroot &"
#XinitXorgVars="/usr/X11R7/bin/xterm -geometry +1 +1 -display :0"
#XinitXorgVars="-geometry +1 +1 -n login -display :0 -e jwm &"
#XinitXorgVars="-geometry +1+1 -n login -display :0 -e jwm &"
#XinitXorgVars="-geometry +1+1 -n login -display :0"
#XinitXorgVars=" -geometry +1+1 -n login -display :0" ##not tested yet
#XInitXorgVars="-e jwm &"
XInitXorgVars=" -e echo $PATH && sleep 10 && jwm &"
else
XinitXorgVars="$HOME/.xinitrc"
fi
echo "$0:""will start xinit with '$XinitXorgVars'" > $outputCONSOLE

#ErrLog="/tmp/Xerrs.$KERNELVER.$Date.Xorg.log.$$"
#Log="/tmp/Xorg.$KERNELVER.$Date.log.$$"
EXITCNT=0


#v1.0.7
HAVEX="`readlink -qs /usr/bin/X`"
echo "$0:"'$HAVEX : '$HAVEX > $outputCONSOLE

ddcprobe_func(){
echo -e "\\033[0;31m""ddcprobe_func"
DDCPROBE=`ddcprobe`
echo "$DDCPROBE" > /tmp/ddcprobe.txt
  sleep 2s
  case "`cat /tmp/ddcprobe.txt`" in *edidfail*)
   echo "ddcprobe failed to determine the video"
   echo "Trying again"
   sleep 1
   DDCPROBE=`ddcprobe`
   echo "$DDCPROBE" > /tmp/ddcprobe.txt
   sleep 1s
   ;;
  esac
if [ -n "`grep -i 'edidfail' /tmp/ddcprobe.txt`" ] ; then ###KRG
echo -e "\\033[0;31m""ddcprobe still failed to determine the video"
echo -e "\\033[0;39m""exiting $0 now"
exit
fi
}
ddcprobe_func

#### Begin XF86_SVGA part One ####
echo -e "\\033[0;31m""Begin XF86_SVGA part One"
if [ "$HAVEX" = "XF86_SVGA" ];then # 2.0
 #xf86config v3.3.6 creates config file at /etc, wrong place...
 [ -f /etc/XF86Config ] && mv -f /etc/XF86Config /etc/X11/XF86Config
fi # 2.0
echo -e "\\033[0;34m""End XF86_sVGA part One"
#### End XF86_sVGA part One ####


#### Begin Xvesa part One ####
echo -e "\\033[0;31m""Begin Xvesa part One"
#v3.90 expanded to auto run best video mode...
if [ "$HAVEX" = "Xvesa" ];then #0.9.9 # 3.0
echo "HAVEX=Xvesa"
 if [ ! -f /tmp/videomode -a ! -f /etc/videomode ];then #v2.21 # 3.1.0
  echo "Files /tmp/videomode -a /etc/videomode do not exist 1"
  ###KRGddcprobe >/tmp/ddcprobe.txt

  #weird (ddcprobe is very weird), on some hardware, edid monitor probe fails
  #every alternate run of ddcprobe...

##ddcprobe_func(){
##  ddcprobe >/tmp/ddcprobe.txt
##  sleep 2s
##  case "`cat /tmp/ddcprobe.txt`" in *edidfail*)
##   echo "ddcprobe failed to determine the video"
##   echo "Trying again"
##   sleep 1
##  ddcprobe >/tmp/ddcprobe.txt
##   sleep 1s
##   ;;
##  esac
##}
##ddcprobe_func
##if [ -n "`grep -i 'edidfail' /tmp/ddcprobe.txt`" ] ; then ###KRG
##echo "ddcprobe still failed to determine the video"
##echo "exiting $0 now"
##exit
##fi

#v3.99 begin
  if [ -f /etc/xorgoverrides ] && [ -n "`grep -q -f /etc/xorgoverrides /tmp/ddcprobe.txt`" ] ;then # 3.1.1.0
   echo "Found to override graphics chips from /etc/xorgoverrides in /tmp/ddcprobe.txt"
   rm -f /etc/.XLOADED 2> /dev/null #not necessary, precaution.
   #1st dialog offers to use Xvesa...
   echo "Starting now xorgwizard" && slepp 9s
   /usr/sbin/xorgwizard
   HAVEX="`readlink -qs /usr/bin/X`"
   if [ "$HAVEX" != "Xorg" ] ; then  ##KRG
   echo "To start the Xorg server for Xvesa does not work for your hardware ,"
   echo "please run xorgwizard or type xwin (again)."
   echo "exiting $0 now"
   exit   #go to command line if not Xorg
   fi  ###KRG
  fi # 3.1.1.0
 fi # 3.1.0
fi # 3.0
#Repeat earlier tests in case Xserver now Xorg and to retain indentation levels.
if [ "$HAVEX" = "Xvesa" ];then #0.9.9 # 4.0
 BASEMODE=""
 if [ ! -f /tmp/videomode -a ! -f /etc/videomode ];then  ##fresh boot /tmp/videomode does not exist#v2.21 # 4.1.0
  echo "Files /etc/videomode and /tmp/videomode do not exist"
  #v3.97 improved method: CM=Classmate, 915=chip 10=generation#...
  [ "`dmidecode -s bios-version | grep '^CM91510'`" != "" ] && echo 'timing: 800x480@60' >> /tmp/ddcprobe.txt
  #v3.95 recognise more special screens...
  DMIDECODE="`dmidecode`"
  #recognise EeePC Asus laptop...
  [ "`echo "$DMIDECODE" | grep 'Product Name: 701'`" != "" ] && [ "`echo "$DMIDECODE" | grep 'Serial Number: EeePC'`" != "" ] && echo 'timing: 800x480@60' >> /tmp/ddcprobe.txt

  echo -e '\nIf initialization freezes here, press ctrl-c and type "xorgwizard",\nselect "Xorg", choose monitor type and choose video mode.'   #v3.99
  grep '^oem:' /tmp/ddcprobe.txt > /tmp/ddcprobeoem.txt   #v3.99 current adapter signature

  #get too many weird resolutions, maybe better just only allow these...
  #want widescreen/non-vesa resolutions only...
  VESAMODES="`Xvesa -listmodes 2>&1 | grep '^0x' | tr ':' ' ' | tr -s ' ' | cut -f 1,2 -d ' '`"
  rm /tmp/ddcprobeoem.txt  #v3.99 didn't hang in Xvesa, so delete signature
  MONCHOICES="`grep -F 'timing:' /tmp/ddcprobe.txt | grep -E -v 'Apple|8514A|Mac II|\(XGA2\)' | grep -E ' 800x480@| 1024x600@| 1280x768@| 1280x800@| 1280x1024@| 1360x768@| 1400x1050@| 1440x900@| 1600x1200@| 1680x1050@| 1920x1080@| 1920x1200@' | cut -f 2 -d ' ' | sort -u`"

  if [ "$MONCHOICES" != "" ];then # 4.1.1.0
   echo '$MONOCHOICES='"$MONCHOICES"' and not empty'
   MONCUTXY="`echo "$MONCHOICES" | cut -f 1 -d '@' | tr '\n' ' '`"

   #v2.21 code to handle widescreen with intel video chips...
   if [ ! -f /etc/resolutionfix ];then # 4.1.1.1.0
    echo "File /etc/resolutionfix does not exists"
    if [ -n "`grep -F 'oem:' /tmp/ddcprobe.txt | grep -F -q 'Intel'`" ] ;then # 4.1.1.1.1.0
     echo "Found Intel oem: in /tmp/ddcprobe.txt"
     MISSINGXY=""
     for ONECUTXY in $MONCUTXY #ex: each field 1024x768
     do
      OPATTERN=" ${ONECUTXY}x"
      [ "`echo "$VESAMODES" | grep "$ONECUTXY"`" = "" ] && MISSINGXY="$ONECUTXY"
     done
     if [ "$MISSINGXY" != "" ];then # 4.1.1.1.1.1.0
     echo '$MISSINGXY='"$MISSINGXY"' and not empty'
      MYXRES="`echo -n "$MISSINGXY" | cut -f 1 -d 'x'`"
      MYYRES="`echo -n "$MISSINGXY" | cut -f 2 -d 'x'`"
      915resolution 38 $MYXRES $MYYRES
      #...replaces mode 38 (1024x768).
      #create something for /etc/profile to execute at bootup...
      echo "915resolution 38 $MYXRES $MYYRES" > /etc/resolutionfix
      VESAMODES="`Xvesa -listmodes 2>&1 | grep '^0x' | tr ':' ' ' | tr -s ' ' | cut -f 1,2 -d ' '`"
      PPATTERN=" ${MYXRES}x${MYYRES}x"
      #BASEMOD is res that we are going to start X with...
      BASEMODE="`echo "$VESAMODES" | grep "$PPATTERN" | grep -E 'x16$|x24$|x32$' | head -n 1`"
     fi # 4.1.1.1.1.1.0
    fi  # 4.1.1.1.1.0
   fi   # 4.1.1.1.0

   #find out if there is just one native mode...
   if [ "$BASEMODE" = "" ];then # 4.1.1.2.0
    echo '$BASEMODE='"$BASEMODE"'= and (still) empty 1'
    if [ "`echo "$MONCUTXY" | wc -l`" = "1" ];then # 4.1.1.2.1.0
     echo '$MONCUTXY='"$MONCUTXY"'= and has exactly one newline'
     QPATTERN=" ${MONCUTXY}x"
     BASEMODE="`echo "$VESAMODES" | grep "$QPATTERN" | grep -E 'x16$|x24$|x32$' | head -n 1`"
    fi # 4.1.1.2.1.0
   fi  # 4.1.1.2.0

   if [ "$BASEMODE" != "" ];then # 4.1.1.3.0
    echo '$BASEMODE='"$BASEMODE"'= and not empty 2'
    echo "$BASEMODE" > /etc/videomode #no need for wizard after startup!
        rm -f /tmp/videomode 2>/dev/null #w460 make sure can exit from X.
   fi # 4.1.1.3.0
  fi  # 4.1.1.0

  if [ "$BASEMODE" = "" ];then # 4.1.2.0
   echo '$BASEMODE='"$BASEMODE"'= and (still) empty 3'
   BASEMODE="`echo "$VESAMODES" | grep ' 800x600x16' | head -n 1`"
   if [ "$BASEMODE" != "" ];then # 4.1.2.1.0
    echo '$BASEMODE='"$BASEMODE"'= and not empty 4'
    echo "$BASEMODE" > /tmp/videomode
   else # 4.1.2.1.0
    echo '$BASEMODE='"$BASEMODE"'= and (still) empty 5'
    echo -n "0x0111 640x480x16" > /tmp/videomode
    #...desparate, not a practical mode.
   fi # 4.1.2.1.0
  fi  # 4.1.2.0

  rm -f /tmp/Xflag #precaution.
  #...if /tmp/videomode exists, video-wizard is started in ~/.xinitrc
  #...note, if /etc/videomode exists instead, normal X startup.

 fi   # 4.1.0

fi    # 4.0
echo -e "\\033[0;34m""End Xvesa part One"
#### End Xvesa part One ####

#### Begin Xvesa part Two ####
echo -e "\\033[0;31m""Begin Xvesa part Two"
if [ "$HAVEX" = "Xvesa" ];then #0.9.9 # 10.0

 #/tmp/videomode exists if starting X with new video test mode...
 if [ -e /tmp/videomode ];then # 10.1.0

  cat /tmp/videomode | grep " 800x600"
  if [ $? -eq 0 ];then #=0 if found. # 10.1.1.0

   if [ -e /tmp/Xflag ];then # 10.1.1.1.0

    #we have just attempted 800x600x16 and aborted with ctrl-alt-backspace
    #so have failed.
    echo "An attempt has just been made to run X at 800x600x16 but it has"
    echo "not worked (or it did but you did not press the OK button in the"
    echo "Video-wizard). It is not feasible to run Puppy at any lower resolution"
    echo -e "or color. If you want to try again, type \"xwin\" at the prompt."
    echo "It may be helpful to look in /tmp/xerrs.txt for error messages"
    rm -f /tmp/videomode
    rm -f /tmp/Xflag
    echo -n "0x0111 640x480x16" > /etc/videomode #desparate.
    exit 0 # exit Two
   else # 10.1.1.1.0
    #flag to prevent endless loop X restarting...
    touch /tmp/Xflag
    #...pressing a button in video-wizard removes this file.
    #...however, aborting X will leave it in existence.
   fi # 10.1.1.1.0

  fi # 10.1.1.0
 fi # 10.1.0

 #/tmp/videomode exists if starting X with new video test mode...
 if [ -e /tmp/videomode ];then # 10.2.0
  #stored in format "0x0111 640x480x16"
  VIDMODE="`cat /tmp/videomode | cut -f 1 -d ' '`"
  VIDSCRN="`cat /tmp/videomode | tr -s ' ' | cut -f 2 -d ' '`"
 else # 10.2.0
  #stored in format "0x0111 640x480x16"
  VIDMODE="`cat /etc/videomode | cut -f 1 -d ' '`"
  VIDSCRN="`cat /etc/videomode | tr -s ' ' | cut -f 2 -d ' '`"
 fi # 10.2.0
fi # 10.0
echo -e "\\033[0;34m""End Xvesa part Two"
#### End Xvesa part Two ####


#### Begin mouse part One ###
echo -e "\\033[0;31m""Begin mouse part One"
#note, mouse and keyboard types are autodetected in /etc/rc.d/rc.local0 at every bootup,
#so /etc/mousedevice and /etc/keyboardtype have autodetected values in them
#(changeable by Mouse/Keyboard Wizard, but rc.local0 will override if interface not found).

#v411 restored after removal in v407...
#update xorg.conf if mouse has changed...

MOUSEDEV="`cat /etc/mousedevice`" #autodetected in rc.sysinit
OLDMOUSEDEV="`cat /etc/oldmousedevice`" #set in rc.sysinit

if [ ! "$OLDMOUSEDEV" = "$MOUSEDEV" ];then # 5.0

 if [ ! "$OLDMOUSEDEV" = "nothing" ];then #"nothing" on first boot. # 5.1.0

  if [ -f /etc/X11/xorg.conf ];then # 5.1.1.0

   case `cat /etc/mousedevice | cut -c 1-4` in
    "inpu") #"input/mice", usb
     cat /etc/X11/xorg.conf | sed -e 's/\W\+Option\W\+"Protocol"\W\+"\(\(\w\+\/\w\+\)\|\(\w\+\)\)\W\+#mouse0protocol/   Option      "Protocol" "IMPS\/2" #mouse0protocol/g' > /tmp/xorg.conf.tmp2
     ;;
    "ttyS") #ttyS0,1,2,3, serial
     cat /etc/X11/xorg.conf | sed -e 's/\W\+Option\W\+"Protocol"\W\+"\(\(\w\+\/\w\+\)\|\(\w\+\)\)\W\+#mouse0protocol/   Option      "Protocol" "Microsoft" #mouse0protocol/g' > /tmp/xorg.conf.tmp2
     ;;
    *)
     cat /etc/X11/xorg.conf | sed -e 's/\W\+Option\W\+"Protocol"\W\+"\(\(\w\+\/\w\+\)\|\(\w\+\)\)\W\+#mouse0protocol/   Option      "Protocol" "auto" #mouse0protocol/g' > /tmp/xorg.conf.tmp2
     ;;
   esac
   sync
   echo "Copying /tmp/xorg.conf.tmp2 /etc/X11/xorg.conf"
   cp -f /tmp/xorg.conf.tmp2 /etc/X11/xorg.conf # CP new xorg.conf One
   sync
   rm -f /tmp/xorg.conf.tmp2

  fi # 5.1.1.0
 fi # 5.1.0

 OLDMOUSEDEV="$MOUSEDEV" #v411 old is now current mouse
 echo -n "$OLDMOUSEDEV" > /etc/oldmousedevice #v411

fi # 5.0

#v408 k2.6.25.16 has serial driver as a module...
[ "`grep 'ttyS' /etc/mousedevice`" != "" ] && modprobe sermouse
#v411 precaution...
[ "`grep 'input/mice' /etc/mousedevice`" != "" ] && modprobe usbhid

#ask about scrollwheel... DO NOT ASK, ASSUME YES...
if [ ! -f /etc/mousebuttons ];then # 6.0

 #dialog --yesno "Do you have a wheel/scroll type of mouse?" 0 0
 #if [ $? -eq 0 ];then
  echo -n "5" > /etc/mousebuttons
  echo -e "The file /etc/mousebuttons has been created, with content \"5\"."

  if [ -f /etc/X11/xorg.conf ];then # 6.1.0
   cat /etc/X11/xorg.conf | tr -s '#' | sed -e 's/#Option\W\+"ZAxisMapping"\W\+"4 5"/Option      "ZAxisMapping" "4 5"/g' > /tmp/xorg.conf.tmp
   sync
   echo "Copying /tmp/xorg.conf.tmp /etc/X11/xorg.conf"
   cp -f /tmp/xorg.conf.tmp /etc/X11/xorg.conf # CP new xorg.conf Two-1
  fi # 6.1.0

 #else # 6.0
 # echo -n "3" > /etc/mousebuttons
 # echo -e "...you chose \"no\"."
 # echo -e "The file /etc/mousebuttons has been created, with content \"3\"."
 # if [ -f /etc/X11/xorg.conf ];then
 #  cat /etc/X11/xorg.conf | sed -e 's/Option\W\+"ZAxisMapping"\W\+"4 5"/#Option      "ZAxisMapping" "4 5"/g' | tr -s '#' > /tmp/xorg.conf.tmp
 #  sync
 #  cp -f /tmp/xorg.conf.tmp /etc/X11/xorg.conf # CP new xorg.conf Two-2
 # fi
 #fi

fi # 6.0
echo -e "\\033[0;34m""End mouse part One"
#### End mouse part One ####

#### Begin mouse part Two ####
echo -e "\\033[0;31m""Begin mouse part Two"
MOUSEBUTTONS=3
if [ -e /etc/mousebuttons ];then # 11.0
 MOUSEBUTTONS=`cat /etc/mousebuttons`
fi # 11.0
#v2.02 fix bug discovered by Dougal...
if [ $MOUSEBUTTONS -eq 2 ];then # 12.0
 #the problem is, if /etc/xextraoptions has '-2button' which turns on middle-button
 #emulation, if leave MOUSEBUTTONS=2 then the right button does not work.
 #have to pass '3' to Xvesa, meaning effectively 3 buttons available...
 [ ! "`cat /etc/xextraoptions | grep ' \-2button'`" = "" ] && MOUSEBUTTONS=3
fi # 12.0

#0.9.8
XEXTRAOPTIONS=""
if [ -e /etc/xextraoptions ];then # 13.0
 XEXTRAOPTIONS="`cat /etc/xextraoptions`"
fi # 13.0

#v424 bad hack, i somehow get /dev/mouse pointing to psaux when chose a serial mouse, don't know why...
[ "`grep 'ttyS' /etc/mousedevice`" != "" ] && ln -snf $MOUSEDEV /dev/mouse
echo -e "\\033[0;34m""End mouse part Two"
#### End mouse part Two ####


#### Begin sound part ####

#now done in /etc/rc.d/rc.modules...
##alsa sound setup...

#### End sound part ####


#### Begin agpgart part ####

##v2.0.0 load correct -agp driver...
#AGPDRIVER="`findhostbridge`" #in /usr/sbin.

##note, could write $AGPDRIVER to /etc/modprobe.preload to load it at kernel boot.
##note, it also loads agpgart.ko.

#### End agpgart part ####


#### Begin Xorg part One ####
echo -e "\\033[0;31m""Begin Xorg part One"
#v2.11 find out if xorg video drvr exists, else use xorg vesa...
if [ -f /usr/bin/Xorg ];then # 7.0

 if [ -f /etc/X11/xorg.conf ];then # 7.1.0

  if [ "`readlink -qs /usr/bin/X`" = "Xorg" ];then  ###KRG
  #find location of video chip drivers...

  SPECVESA="`find /usr/lib -noleaf -mount -type f -name vesa_drv.so`" #### empty
  #### find /usr/ -noleaf -mount -type f -name vesa_drv.so would not be empty ####
  if [ "$SPECVESA" ];then # 7.1.1.0
   echo '$SPECVESA='"$SPECVESA"'= and (not) empty'
   DRVRSPATH="`dirname $SPECVESA`"
   #get current driver...
   DRVRCURR="`cat /etc/X11/xorg.conf | grep '#card0driver' | cut -f 2 -d '"'`" #'

   if [ "$DRVRCURR" ];then # 7.1.1.1.0
    echo '$DRVRCURR='"$DRVRCURR"'= and (not) empty'
    #if [ ! -f $DRVRSPATH/${DRVRCURR}_drv.so ];then
    #one driver is mtx_drv.o hmmm, okay do it this way (pakt)...
    ls -1 $DRVRSPATH/* | grep $DRVRCURR >/dev/null
    echo 'ls -1 $DRVRSPATH/* returned:'"$?"':'
    if [ $? -ne 0 ];then # 7.1.1.1.1.0
     APATTERN="s/.*#card0driver/        Driver      \"vesa\" #card0driver/g"
     cat /etc/X11/xorg.conf | sed -e "$APATTERN" > /tmp/xorg.conf.tmp2
     sync
     echo "Copying /tmp/xorg.conf.tmp2 /etc/X11/xorg.conf 2"
     cp -f /tmp/xorg.conf.tmp2 /etc/X11/xorg.conf # CP new xorg.conf Three
    fi # 7.1.1.1.1.0
   fi # 7.1.1.1.0
  fi # 7.1.1.0
 fi  ##KRG
 fi # 7.1.0
fi # 7.0
echo -e "\\033[0;34m""End of Xorg part One"
#### End Xorg part One ####

#### Begin check for HW profile : Xorg part Two ####
echo -e "\\033[0;31m""Begin Xorg part Two"
#Puppy Xorg Video Wizard...

if [ -f /usr/bin/Xorg ];then # 8.0
 if [ -f /etc/X11/xorg.conf ];then # 8.1.0
  if [ "`readlink -qs /usr/bin/X`" = "Xorg" ];then # 8.1.1.0

   #v2.13 video hardware profile (must be same as in xorgwizard)...
   ##DDCPROBE="`ddcprobe`"
   #v2.17 patch from Nightflyer... as in xwin, may have to run ddcprobe twice...

   ##case "`echo "$DDCPROBE"`" in
   ## *edidfail*)
   ##  sleep 1
   ##  DDCPROBE="`ddcprobe`"
   ## ;;
   ##esac

   PROFILECHIP="`echo "$DDCPROBE" | grep '^oem: ' | head -n 1 | cut -f 2-4 -d ' ' | tr ' ' '_' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
   #PROFILEMONITOR="`echo "$DDCPROBE" | grep --extended-regexp '^monitorrange: |^monitorid: |^eisa: ' | head -n 1 | cut -f 2 -d ':' | sed -e 's/ //g' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
#v3.95 'eisa:' and 'id:' return fluctuating values on some PCs, so search in this order...
PROFILEMONITOR="`echo "$DDCPROBE" | grep '^monitorid: ' | head -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
[ "$PROFILEMONITOR" = "" ] && PROFILEMONITOR="`echo "$DDCPROBE" | grep '^monitorname: ' | head -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
[ "$PROFILEMONITOR" = "" ] && PROFILEMONITOR="`echo "$DDCPROBE" | grep '^monitorrange: ' | head -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
#[ "$PROFILEMONITOR" = "" ] && PROFILEMONITOR="`echo "$DDCPROBE" | grep '^dtiming: ' | tail -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
[ "$PROFILEMONITOR" = "" ] && PROFILEMONITOR="`echo "$DDCPROBE" | grep '^manufacture: ' | tail -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
#[ "$PROFILEMONITOR" = "" ] && PROFILEMONITOR="`echo "$DDCPROBE" | grep '^eisa: ' | head -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"

   HARDWAREPROFILE="${PROFILECHIP}${PROFILEMONITOR}"
   #find out if current xorg.conf matches this profile...
   CURRENTPROFILE="`cat /etc/X11/xorg.conf | grep '^#PuppyHardwareProfile' | cut -f 2 -d '=' | cut -f 1 -d ' '`"

   if [ ! "$CURRENTPROFILE" = "$HARDWAREPROFILE" ];then # 8.1.1.1.0
   echo -e "\\033[0;31m"'Has hardware profile changed ?'
    #video hardware has changed. either changed monitor or booting different PC.
    #same current xorg.conf as a profiled filename...
    echo "Moving now /etc/X11/xorg.conf /etc/X11/xorg.conf.${CURRENTPROFILE}"
    mv -f /etc/X11/xorg.conf /etc/X11/xorg.conf.${CURRENTPROFILE} #### Rename One
    #if a previous profiled filename for new hardware, use that...
    echo "Copying /etc/X11/xorg.conf.${HARDWAREPROFILE} /etc/X11/xorg.conf if exists"
    [ -f /etc/X11/xorg.conf.${HARDWAREPROFILE} ] && cp -af /etc/X11/xorg.conf.${HARDWAREPROFILE} /etc/X11/xorg.conf # CP new xorg.conf Four

   fi # 8.1.1.1.0

  fi # 8.1.1.0
 fi # 8.1.0

 if [ ! -f /etc/X11/xorg.conf ];then # 8.2.0
  echo "File /etc/X11/xorg.conf does not exists."
  echo "Running xorgwizard ..."
  slepp 9s
  rm -f /etc/.XLOADED 2> /dev/null #not necessary, precaution.
  #1st dialog offers to use Xvesa...
  /usr/sbin/xorgwizard

  HAVEX="`readlink -qs /usr/bin/X`"
  if [ "$HAVEX" = "Xvesa" ] ; then  ###KRG
  echo '$HAVEX is Xvesa'
  echo "Exiting now . type xwin to start Xvesa server"
  ##&& exec xwin #w482 need to restart xwin.
  fi  ###KRG
 fi # 8.2.0

fi # 8.0
echo -e "\\033[0;34m""End Xorg part Two"
#### End  check for HW profile : Xorg part Two ####


#### Begin starting X ####
echo -e "\\033[0;32m""Begin starting X part"
#finally, start X...
#J_Rey had a good idea, flag XLOADED... and set to false on exit.
#but if PC hangs, XLOADED will still be true, so will know it is broken.
echo -n "true" > /etc/.XLOADED

case $HAVEX in
 Xvesa) #### Xvesa part Three ###
  echo "Starting X with Xvesa server video mode $VIDMODE and mouse $MOUSEDEV..."

  ##w479 older Xvesa server may not recognise the '-sp' option...
  if [ "`Xvesa -help 2>&1 | grep '^\-sp '`" = "" ];then # 14.1.0
   SPOPTION=''
  else
   SPOPTION='-sp /usr/lib/xserver/SecurityPolicy'
  fi
  echo 'SPOPTION='"$SPOPTION"
  sleep 9s
  #startx $VIDMODE $MOUSEDEV > /tmp/xerrs.txt 2>&1
  #Puppy 0.8.4 no need for startx script...
  VIDFREQ="`echo -n "$VIDSCRN" | cut -f 4 -d "x"`"
  if [ ! "$VIDFREQ" ];then # 14.2.0
   echo "$VIDMODE" > /tmp/currentvideomode
   #w460 added -fp and -sp options...
   /usr/bin/xinit $HOME/.xinitrc -- -mode $VIDMODE $XEXTRAOPTIONS -mouse /dev/mouse,$MOUSEBUTTONS -fp /usr/share/X11/fonts/misc/,/usr/share/X11/fonts/TTF/,/usr/share/X11/fonts/Type1/ $SPOPTION > /tmp/xerrs."$KERNELVER"."$Date".Xvesa.log 2>&1
  else # 14.2.0
   #also, want to have adjustable frequency, VIDSCRN=widthxheightxdepthxfreq...
   echo "$VIDSCRN" > /tmp/currentvideomode
   /usr/bin/xinit $HOME/.xinitrc -- -screen $VIDSCRN $XEXTRAOPTIONS -mouse /dev/mouse,$MOUSEBUTTONS -fp /usr/share/X11/fonts/misc/,/usr/share/X11/fonts/TTF/,/usr/share/X11/fonts/Type1/ $SPOPTION > /tmp/xerrs."$KERNELVER"."$Date".Xvesa.log 2>&1
  fi # 14.2.0
  ;; #### End Xvesa part Three

 Xfbdev) #### Begin XFbdev
  echo "Starting X with Xfbdev Kdrive X server, mouse $MOUSEDEV..."
  /usr/bin/xinit $HOME/.xinitrc -- -mouse /dev/mouse,$MOUSEBUTTONS > /tmp/xerrs."$KERNELVER"."$Date".Xfbdev.log 2>&1
  ;; #### End XFbdev
 Xi810) #v1.0.7 #### Begin Xi810 part
  echo "Starting X with Xi810 Kdrive X server, mouse $MOUSEDEV..."
  #echo "(experimental, currently fixed to 1024x768x16x72 in /usr/bin/xwin)"
   /usr/bin/xinit $HOME/.xinitrc -- -screen $VIDSCRN -mouse /dev/mouse,$MOUSEBUTTONS > /tmp/xerrs."$KERNELVER"."$Date".Xi810.log 2>&1
  ;; #### End Xi810
 XF86_SVGA) #### Begin XF86_SVGA
  echo "Starting X with XF86_SVGA server , specs in /etc/X11/XF86Config, startup apps $HOME/.xinitrc..."
  /usr/bin/xinit $HOME/.xinitrc -- -bpp 16 > /tmp/xerrs."$KERNELVER"."$Date".Xf86_svga.log 2>&1
  ;;#### End XF86_SVGA

 Xorg) #### Begin Xorg
 AP=`date +%R:%S`
 ErrLog="/tmp/Xerrs.$KERNELVER.$Date.Xorg.log.$AP"
 Log="/tmp/Xorg.$KERNELVER.$Date.log.$AP"

  echo "Starting X with Xorg server , specs in /etc/X11/xorg.conf, startup apps $HOME/.xinitrc..." > $outputCONSOLE
  #v2.11 G2 suggested -br for black background instead of checked...
  #w479 ***AWFUL HACK*** running pup 218, retro k2.6.18.8, my laptop, Xorg hangs
  #     if have '-nolisten tcp'. until find out why, this workaround...

  if [ "$KERNELVER" = "2.6.18.8" ];then # 14.3.0
   /usr/bin/xinit $HOME/.xinitrc -- -br > /tmp/xerrs."$KERNELVER"."$Date".Xorg.log 2>&1

  else # 14.3.0
   /usr/bin/xinit "$XinitXorgVars" -- /usr/bin/X :0 -logfile "$Log" -nolisten tcp > "$ErrLog" 2>&1
  fi # 14.3.0
  ;; #### End Xorg

 *)
 echo "Starting X with anything else Xserver"
 sleep 9s
  #### Begin everything different from Xorg,Xvesa and co.
  /usr/bin/xinit $HOME/.xinitrc --  > /tmp/xerrs."$KERNELVER"."$Date".OtherX.log 2>&1
  ;; #### End
esac
echo -e "\\033[0;34m""End start X part"
#### End start X part ####


#### Begin of /tmp/wmexitmode part ####
echo -e "\\033[0;32m""Begin of /tmp/wmexitmode part"

echo -n "false" > /etc/.XLOADED
#Shutdown menu calls wmreboot, wmpoweroff, wmexit or restartwm, which create this file...
if [ -f /tmp/wmexitmode.txt ];then # 19.0
echo "/tmp/wmexitmode.txt exists"

 WMEXITMODE="`cat /tmp/wmexitmode.txt`"
 if [ "$WMEXITMODE" = "exit" ];then #see /usr/bin/wmexit. # 19.1.0
  #[ $NUMXWINS -eq 1 ] && rm -f /tmp/wmexitmode.txt #w477 hack, see above.
  rm -f /tmp/wmexitmode.txt #w478
  echo "found exit in /tmp/wmexitmode.txt , exiting to prompt now"
  exit # exit Three
 fi # 19.1.0

 #rm -f /tmp/wmexitmode.txt ...no, removed in rc.shutdown.
 [ "$WMEXITMODE" = "poweroff" ] && exec /sbin/poweroff #see /usr/bin/wmpoweroff
 [ "$WMEXITMODE" = "reboot" ] && exec /sbin/reboot #see /usr/bin/wmreboot

 #restart window manager...
 #make a gross assumption, if wmexitmode.txt exists, haven't already exited this script, then want
 #to restart maybe with different window manager. /etc/windowmanager already has desired w.m.
 rm -f /tmp/wmexitmode.txt #definitely delete it now.
  #v1.0.5 thanks GuestToo for advice on this, works with chooselocale script...
  #NEWLANG="`cat /etc/profile | grep "LANG=" | cut -f 2 -d '='`"
  NEWLANG="`cat /etc/profile | grep '^[[:blank:]]*LANG=' | tail -n 1| cut -f 2 -d '='`" #w482 shinobar bugfix.
  if [ "$NEWLANG" ];then #precaution # 19.2.0
   if [ ! "$NEWLANG" = "$LANG" ];then # 19.2.1.0
    export LANG=$NEWLANG
   fi # 19.2.1.0
  fi # 19.2.0
 exec xwin
fi # 19.0
echo -e "\\033[0;34m""End of /tmp/wmexitmode part"
#### End of /tmp/wmexitmode part ####

#### Begin X failed part ####
echo -e "\\033[0;31m""Begin X failed part"
echo -n "false" > /etc/.XLOADED #see note above.
#...if PC hung, run xorgwizard at next bootup (see further up).
echo "/etc/.XLOADED has been set to false"
echo 'Exited from X. Type "xwin [fvwm95|jwm]" to restart X ([ ] mean optional).'
echo '(To shutdown PC type "poweroff", to reboot PC type "reboot")'

if [ -f /usr/X11R7/bin/Xfbdev ];then # 15.0
 echo '(To run the Xfbdev Framebuffer Wizard, type "framebufferwizard")'
fi # 15.0

if [ "$HAVEX" = "XF86_SVGA" ];then #v1.0.7 # 16.0
 echo -en "\\033[1;31m" #34=blue, 33=yellow, 32=green, 31=red, 35=purple, 36=aquablue, 38=black.
 echo 'If X failed to start, type "xf86config" to setup X'
 echo '  -- you will need to know type of mouse, keyboard and video chip'
 echo '  -- thix X is for pre-2000 video chips, but many recent chips backwards-compat.'
 echo '  -- accept default save /etc/XF86Config, Puppy will move this to /etc/X11'
 echo '  -- (XF86Config is the configuration file for X and can be edited manually)'
 echo -n '  -- LAST RESORT, drop back to Xvesa by typing "ln -sf Xvesa /usr/bin/X"'
 echo -e "\\033[0;39m"
fi # 16.0


if [ "$HAVEX" = "Xorg" ];then #v1.0.7 # 17.0
 echo -en "\\033[1;35m" #34=blue, 33=yellow, 32=green, 31=red, 35=purple, 36=aquablue, 38=black.
 echo -n 'If X failed to start, type "xorgwizard" to setup X'
 echo -e "\\033[0;39m"
fi # 17.0

##w477 weird situation. first boot, xvesa, 'Exit to prompt', X restarts.
##because there are two instances of xwin running, but I don't see how.
##not the best, but here is a workaround...
#NUMXWINS=`pidof xwin | wc -w` #see above and below...

if [ "$HAVEX" = "Xvesa" ];then # 18.0
 if [ -e /tmp/videomode ];then # 18.1.0
  exec xwin #restart X.
 fi # 18.1.0
fi # 18.0
echo -e "\\033[0;34m""End of X failed"
#### End of X failed ####

exit_func(){
EXITCNT=$(( $EXITCNT + 1 ))
echo -e "\\033[0;32m""exit_func Nr. $EXITCNT "
echo "$0"
echo "end"
echo -e "\\033[0;39m"
echo -n "false" > /etc/.XLOADED #KRG
exit
}
exit_func
#the end#
