#!/bin/sh
#Exit from window manager will cause return to xwin, which reads
#/tmp/wmexitmode.txt and will relaunch w.m.

test -f /etc/rc.d/f4puppy5 && {
[ "$HAVE_F4PUPPY5" ] || source /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

TWO_HELP=''; TWO_VERSION=''; TWO_VERBOSE=''; TWO_DEBUG=''; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG=""
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
    for i in `seq 1 1 $DO_SHIFT`; do shift; done; }
_trap
}

NEXTWM="$1"
PREVIOUSWM="`cat /etc/windowmanager`"
[ "$NEXTWM" = "" ] && NEXTWM="$PREVIOUSWM" #v1.0.7 precaution.
echo -n "$NEXTWM" > /etc/windowmanager #this makes change permanent.
echo -n "$NEXTWM" > /tmp/wmexitmode.txt

killall pup_event_frontend_d

old_pup_func(){
#/sbin/pup_event_frontend_d will quit if this file exists...
echo -n "$NEXTWM" > /tmp/wmexitmode.txt

#v403 give time for /sbin/pup_event_frontend_d to quit.
#w478 testing 2.6.18.1 kernel, pup_event_frontend_d did not exit when it
#detected /tmp/wmeximode.txt, but became 'defunct'...
KCNT=0
PSPEFD="`ps -C pup_event_frontend_d | grep 'pup_event_front' | grep -v 'defunct'`"
#while [ "`pidof pup_event_frontend_d`" != "" ];do
while [ "$PSPEFD" != "" ];do
 sleep 0.5
 KCNT=`expr $KCNT + 1`
 [ $KCNT -gt 60 ] && break #30 secs.
 PSPEFD="`ps -C pup_event_frontend_d | grep 'pup_event_front' | grep -v 'defunct'`"
done
sleep 0.2
}

sync

if [ "$PREVIOUSWM" = 'enlightenment_start' ];then
:
fi

if [ "`pidof xfce4-panel`" != "" ];then
 #killall xfce4-panel
 kill `pidof xfce4-panel`
 exit
fi

kill -9 `pidof $PREVIOUSWM` #w478

killall X #default is SIGTERM.
sleep 1           #v1.0.7
exec killall -9 X #v1.0.7 make sure X is killed.
