#!/bin/ash
#Exit from window manager will cause return to xwin, which reads
#/tmp/wmexitmode.txt and will relaunch w.m.

. /etc/rc.d/f4puppy5

NEXTWM="$1"
read PREVIOUSWM </etc/windowmanager
#test -f /etc/windowmanager.$DISPLAY && read PREVIOUSWM </etc/windowmanager.$DISPLAY
DISP=${DISPLAY%.*}
test -f /etc/windowmanager.$DISP && read PREVIOUSWM </etc/windowmanager.$DISP

if [ ! "$NEXTWM" ]; then
test -f /etc/windowmanager.next       && read NEXTWM </etc/windowmanager.next
test -f /etc/windowmanager.next.$DISP && read NEXTWM </etc/windowmanager.next.$DISP
rm $VERB -f /etc/windowmanager.next*
fi

NEXTWM=${NEXTWM:-"$PREVIOUSWM"} #v1.0.7 precaution.

case $NEXTWM in
icewm*) NEXTWM=icewm;;  # icewm-session
enlightenment*) NEXTWM=enlightenment_start;;
esac

echo "$NEXTWM" > /etc/windowmanager #this makes change permanent.
#echo "$NEXTWM" > /etc/windowmanager.$DISPLAY
echo "$NEXTWM" > /etc/windowmanager.$DISP

#/sbin/pup_event_frontend_d will quit if this file exists...
echo "$NEXTWM" > /tmp/wmexitmode.txt
echo "$NEXTWM" > /tmp/xwin/wmexitmode.txt

killall pup_event_frontend_d

_sync

if [ "`pidof xfce4-panel`" ];then
 #killall xfce4-panel
 kill `pidof xfce4-panel`
 exit
fi

case $PREVIOUSWM in
icewm*) PREVIOUSWM=icewm;;
enlightenment*) PREVIOUSWM=enlightenment;;
esac

pidof $PREVIOUSWM >>$OUT && kill -9 `pidof $PREVIOUSWM` #w478

_get_current_x(){
test "$DISP" || return 1
ps -o pid,args | grep -w 'X' | grep -w $DISP | grep -vE 'grep|xinit' | awk '{print $1}'
}

CURRENTX=`_get_current_x` && {
echo "CURRENTX='$CURRENTX'"
test "${CURRENTX//[[:blank:]]/}" && kill -15 `_get_current_x`
}

#killall X #default is SIGTERM.
#sleep 1           #v1.0.7
#exec killall -9 X #v1.0.7 make sure X is killed.
