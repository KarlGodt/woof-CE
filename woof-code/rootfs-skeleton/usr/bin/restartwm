#!/bin/ash
#
# New header by Karl Reimer Godt, September 2014
  _TITLE_="Puppy_restartwm"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="/usr/bin/restartwm"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
[ "$HAVE_F4PUPPY5" ] || source /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

TWO_HELP=''; TWO_VERSION=''; TWO_VERBOSE=''; TWO_DEBUG=''; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap

}
# End new header
#
#Exit from window manager will cause return to xwin, which reads
#/tmp/wmexitmode.txt and will relaunch w.m.

NEXTWM="$1"

# REM: Give a splash, to inform user
yaf-splash -timeout 35 -bg green -text "Exiting X session....
(May take 30 seconds to shutdown daemon)" & yPID=$!

read PREVIOUSWM </etc/windowmanager
PREVIOUSWM=${PREVIOUSWM##*/} #basename
[ "$NEXTWM" ] || NEXTWM="$PREVIOUSWM" #v1.0.7 precaution.
[ "$NEXTWM" ] || NEXTWM=jwm

case $NEXTWM in *jwm*) NEXTWM=jwm;;
*enlightenment*) NEXTWM=enlightenment_start;;
esac
case $PREVIOUSWM in *jwm*) PREVIOUSWM=jwm.bin;;
*enlightenment*) PREVIOUSWM=enlightenment;;
esac
echo "$NEXTWM" >/etc/windowmanager         #this makes change permanent.

#/sbin/pup_event_frontend_d will quit if this file exists...
echo "$NEXTWM" >/tmp/wmexitmode.txt
echo "$NEXTWM" >/tmp/xwin/wmexitmode.txt

#v403 give time for /sbin/pup_event_frontend_d to quit.
#w478 testing 2.6.18.1 kernel, pup_event_frontend_d did not exit when it
#detected /tmp/wmeximode.txt, but became 'defunct'...
pidof pup_event_frontend_d >>$OUT && killall $Q pup_event_frontend_d

__wait_for_frontend_d__(){
KCNT=0
PSPEFD="`/bin/ps -C pup_event_frontend_d | grep 'pup_event_front' | grep -vE 'defunct|grep'`"
#while [ "`pidof pup_event_frontend_d`" != "" ];do
while [ "$PSPEFD" != "" ];do
 sleep 0.5
 KCNT=$((KCNT + 1))
 [ "$KCNT" -gt 60 ] && break #30 secs.
 PSPEFD="`/bin/ps -C pup_event_frontend_d | grep 'pup_event_front' | grep -vE 'defunct|grep'`"
done
}

sleep 0.2
_sync

if [ "`pidof xfce4-panel`" != "" ];then
 #killall $Q xfce4-panel
 kill `pidof xfce4-panel`
 exit
fi



for sig in 1 2 6 15 9
do
if pidof ${PREVIOUSWM##*/} >>$OUT; then 
 kill -$sig `pidof ${PREVIOUSWM##*/}` #w478
else break; fi
sleep 1
done
[ "$yPID" ] && /bin/ps -p $yPID --no-header && kill $yPID
#e17
pidof tempget >>$OUT && kill -2 `pidof tempget`

for _file_ in $HOME/Choices/XINIT/*; do
test -f $_file_ || continue
source $_file_ stop
done

sleep 1
pidof X >>$OUT && : # killall $Q X #default is SIGTERM.
sleep 1           #v1.0.7
#exec killall $Q -9 X #v1.0.7 make sure X is killed.

# Very End of this file 'usr/bin/restartwm' #
###END###
