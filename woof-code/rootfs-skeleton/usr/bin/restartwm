#!/bin/ash
#Exit from window manager will cause return to xwin, which reads
#/tmp/wmexitmode.txt and will relaunch X with .xinitrc and start w.m.

  _TITLE_=pup_wmrestart
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Script to handle pup_event_frontend_d, wmexitmode.txt and
kill windowmanager and X"

MY_SELF="$0"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
[ "$HAVE_F4PUPPY5" ] || . /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

TWO_HELP=''; TWO_VERSION=''; TWO_VERBOSE=''; TWO_DEBUG=''; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
    for i in `seq 1 1 $DO_SHIFT`; do shift; done; }
_trap
}


pidof X >>$OUT || _exit 4 "X not running."

NEXTWM="$1"
#PREVIOUSWM="`cat /etc/windowmanager`"
_test_frs /etc/windowmanager && read PREVIOUSWM </etc/windowmanager
[ "$NEXTWM" = "" ] && NEXTWM="$PREVIOUSWM" #v1.0.7 precaution.

[ "$DISPLAY" ] && yaf-splash -bg green -text "Restarting into '$NEXTWM' ..." & yPID=$!
sleep 1

echo "$NEXTWM" > /etc/windowmanager        #this makes change permanent.
echo "$NEXTWM" > /tmp/wmexitmode.txt

#killall pup_event_frontend_d

_sync

if [ "$PREVIOUSWM" = 'enlightenment_start' ];then
:
_pidof $Q tempget && killall tempget
fi

if [ "`pidof xfce4-panel`" != "" ];then
 #killall xfce4-panel
 kill `pidof xfce4-panel`
 exit $?
fi

FREEMEMAPPLET=`ps -o pid,args | grep 'freememapplet' | grep -v 'grep' | awk '{print $1}'`
[ "$FREEMEMAPPLET" ] && kill $FREEMEMAPPLET

INOPID=`ps -o pid,args | grep 'inotifywait' | grep -v 'grep' | grep '/tmp/pup_event_sizefreem' | awk '{print $1}'`
[ "$INOPID" ] && kill $INOPID

_pidof $Q "$PREVIOUSWM" && kill -9 `pidof "$PREVIOUSWM"` || kill -9 `pidof $PREVIOUSWM` 2>>$ERR  #w478
sleep 1

_pidof $Q X && killall X     #default is SIGTERM.
sleep 1                          #v1.0.7
exec killall -9 X 1>>$OUT 2>>$ERR  #v1.0.7 make sure X is killed.

###END###
