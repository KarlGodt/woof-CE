#!/bin/ash
#Exit from window manager will cause return to xwin, which reads
#/tmp/wmexitmode.txt and will relaunch w.m.

test -f /etc/rc.d/f4puppy5 && . /etc/rc.d/f4puppy5
# BATCHMARKER01 - Marker for Line-Position to bulk insert code into.

pidof -o $$ -o %PPID "${0##*/}" >>$OUT && { echo "$0 already running."; exit 1; }

yaf-splash -timeout 5 -bg green -text "Restarting X..." &

NEXTWM="$1"
read PREVIOUSWM </etc/windowmanager
#test -f /etc/windowmanager.$DISPLAY && read PREVIOUSWM </etc/windowmanager.$DISPLAY
DISP=${DISPLAY%.*}
test -f /etc/windowmanager.$DISP && read PREVIOUSWM </etc/windowmanager.$DISP

NEXTWM=${NEXTWM:-"$PREVIOUSWM"} #v1.0.7 precaution.
echo "$NEXTWM" > /etc/windowmanager #this makes change permanent.
#echo "$NEXTWM" > /etc/windowmanager.$DISPLAY
echo "$NEXTWM" > /etc/windowmanager.$DISP

#/sbin/pup_event_frontend_d will quit if this file exists...
echo "$NEXTWM" > /tmp/wmexitmode.txt
echo "$NEXTWM" > /tmp/xwin/wmexitmode.txt  ##+++2011-11-07
echo "$NEXTWM" > /tmp/xwin/wmexitmode."$DISP" ##+++2015-12-29

echo -n "    ...Waiting for pup_event_frontend_d to stop"
if test -f /var/run/pup_event_frontend_d.pid."$DISP"
then read pupPID </var/run/pup_event_frontend_d.pid."$DISP"
     rm $VERB -f  /var/run/pup_event_frontend_d.pid."$DISP"
fi
  if test "$pupPID"
  then kill -15 $pupPID
  else killall pup_event_frontend_d
  fi
sleep 1

_wait_for_frontend_d(){
#v403 give time for /sbin/pup_event_frontend_d to quit.
#w478 testing 2.6.18.1 kernel, pup_event_frontend_d did not exit when it
#detected /tmp/wmeximode.txt, but became 'defunct'...
KCNT=0
PSPEFD="`ps -C pup_event_frontend_d | grep 'pup_event_front' | grep -vE 'defunct|grep|ps'`"
#while [ "`pidof pup_event_frontend_d`" != "" ];do
while [ "$PSPEFD" != "" ];do
 sleep 0.5
 KCNT=`expr $KCNT + 1`
 [ $KCNT -gt 60 ] && break #30 secs.
 PSPEFD="`ps -C pup_event_frontend_d | grep 'pup_event_front' | grep -vE 'defunct|grep|ps'`"
done
sleep 0.2
}

_sync

if [ "`pidof xfce4-panel`" ];then
 #killall xfce4-panel
 kill `pidof xfce4-panel`
 exit $?
fi

TTY=`busybox ps -o tty,args | grep "xinit" | grep -w "$DISP" | grep -vE 'grep|ps' | awk '{print $1}' | head -n1`

case $PREVIOUSWM in enlightenment_start) PREVIOUSWM=enlightenment;; esac

busybox ps -o tty,pid,args | grep -w "$PREVIOUSWM" | grep "^$TTY " | grep -vE 'grep|ps|xwin|xinit'
pidPW=`busybox ps -o tty,pid,args | grep -w "$PREVIOUSWM" | grep "^$TTY " | grep -vE 'grep|ps|xwin|xinit' | awk '{print $2}'`

for oneP in $pidPW; do kill -15 $oneP; sleep 1; done
#kill -9 `pidof $PREVIOUSWM` #w478

sleep 1
wait

_get_current_x(){
test "$DISP" || return 1
#logfile is /tmp/xwin/Xerrs.Xorg.$DISP.log, so not filtering xwin
busybox ps -o pid,args | grep -w 'X' | grep -w "$DISP" | grep -vE 'grep|ps|xinit' >&2
busybox ps -o pid,args | grep -w 'X' | grep -w "$DISP" | grep -vE 'grep|ps|xinit' | awk '{print $1}'
}
curX=`_get_current_x` || _exit 1 "_get_current_x returned non-zero"

if test "$curX"; then
kill -15 `_get_current_x`
else
#assume xinit has killed X when .xinitrc ends by killing windowmanager
#killall X #default is SIGTERM.
sleep 1           #v1.0.7
#exec killall -9 X #v1.0.7 make sure X is killed.
fi
