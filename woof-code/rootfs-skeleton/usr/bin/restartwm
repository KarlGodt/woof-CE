#!/bin/ash
#Exit from window manager will cause return to xwin, which reads
. /etc/rc.d/f4puppy5
# BATCHMARKER01 - Marker for Line-Position to bulk insert code into.
#/tmp/wmexitmode.txt and will relaunch w.m.

NEXTWM="$1"

DISP=${DISPLAY%.*}
if test -s /etc/windowmanager."$DISP"; then
read PREVIOUSWM </etc/windowmanager."$DISP"
else
read PREVIOUSWM </etc/windowmanager
fi

case $PREVIOUSWM in enlightenment_start) : CURRENTWM=enlightenment;;esac
NEXTWM=${NEXTWM:-"$PREVIOUSWM"} #v1.0.7 precaution.
case $NEXTWM in     enlightenment_start) : CURRENTWM=enlightenment;;esac

if test "$DISP"; then
echo "$NEXTWM" > /etc/windowmanager."$DISP"
echo "$NEXTWM" > /tmp/wmexitmode."$DISP"
echo "$NEXTWM" > /tmp/xwin/wmexitmode."$DISP"
else
echo "$NEXTWM" > /etc/windowmanager #this makes change permanent.
#/sbin/pup_event_frontend_d will quit if this file exists...
echo "$NEXTWM" > /tmp/wmexitmode.txt
fi

  if test -f /var/run/pup_event_fronted_d.pid."$DISP"; then
read pupPID </var/run/pup_event_fronted_d.pid."$DISP"
elif test -f /var/run/pup_event_fronted_d.pid; then
read pupPID </var/run/pup_event_fronted_d.pid
fi

if test "$pupPID"; then
     kill -9 $pupPID && {
           if test -f /var/run/pup_event_fronted_d.pid."$DISP"; then
          rm $VERB -f /var/run/pup_event_fronted_d.pid."$DISP"
         elif test -f /var/run/pup_event_fronted_d.pid; then
          rm $VERB -f /var/run/pup_event_fronted_d.pid
         fi
     }
else killall pup_event_frontend_d
fi


__wait_for_frontendD__(){
#v403 give time for /sbin/pup_event_frontend_d to quit.
#w478 testing 2.6.18.1 kernel, pup_event_frontend_d did not exit when it
#detected /tmp/wmeximode.txt, but became 'defunct'...
KCNT=0
PSPEFD="`ps -C pup_event_frontend_d 2>/dev/null | grep 'pup_event_front' | grep -vE 'defunct|grep|ps'`"
#while [ "`pidof pup_event_frontend_d`" != "" ];do
while [ "$PSPEFD" != "" ];do
 sleep 0.5
 KCNT=`expr $KCNT + 1`
 [ $KCNT -gt 60 ] && break #30 secs.
 PSPEFD="`ps -C pup_event_frontend_d 2>/dev/null | grep 'pup_event_front' | grep -vE 'defunct|grep|ps'`"
done
sleep 0.2
}

_sync

if [ "`pidof xfce4-panel`" ];then
 #killall xfce4-panel
 kill `pidof xfce4-panel`
 exit $?
fi

  if test -f /var/run/windowmanager.pid."$DISP"; then
 read wmPID </var/run/windowmanager.pid."$DISP"
elif test -f /var/run/windowmanager.pid; then
 read wmPID </var/run/windowmanager.pid
fi

if test "$wmPID"; then
      kill -9 $wmPID && {
      if test -f /var/run/windowmanager.pid."$DISP"; then
     rm $VERB -f /var/run/windowmanager.pid."$DISP"
    elif test -f /var/run/windowmanager.pid; then
     rm $VERB -f /var/run/windowmanager.pid
    fi
    }

else
    case $PREVIOUSWM in enlightenment_start) PREVIOUSWM=enlightenment;;esac
      kill -9 `pidof $PREVIOUSWM` #w478
fi

sleep 1
pidof X >>$OUT || exit 0

killall X #default is SIGTERM.
sleep 1           #v1.0.7
pidof X >>$OUT || true && killall -9 X #v1.0.7 make sure X is killed.

exit $?
