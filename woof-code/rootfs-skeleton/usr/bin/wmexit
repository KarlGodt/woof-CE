#!/bin/ash
#Exit from X, will cause return to xwin.

  _TITLE_=pup_wmexit
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Script to handle pup_event_frontend_d, wmexitmode.txt and
kill windowmanager and X"

MY_SELF="$0"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
[ "$HAVE_F4PUPPY5" ] || . /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

TWO_HELP=''; TWO_VERSION=''; TWO_VERBOSE=''; TWO_DEBUG=''; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
    for i in `seq 1 1 $DO_SHIFT`; do shift; done; }
_trap
}


_pidof $Q X || _exit 4 "X not running."
[ "$DISPLAY" ] && yaf-splash -bg green -text "Exiting to prompt now ..." & yPID=$!
sleep 1

echo "exit" > /tmp/wmexitmode.txt
#_pidof pup_event_frontend_d && killall pup_event_frontend_d

_sync


if [ "`pidof xfce4-panel`" != "" ];then
 #killall xfce4-panel
 kill `pidof xfce4-panel`
 exit $?
fi

[ "$*" ] && {
NEXTWM="$*"
}

#w003
_test_frs /etc/windowmanager && read CURRENTWM </etc/windowmanager

if [ "$CURRENTWM" = 'enlightenment_start' ];then
_pidof $Q tempget && killall tempget
fi

FREEMEMAPPLET=`ps -o pid,args | grep 'freememapplet' | grep -v 'grep' | awk '{print $1}'`
[ "$FREEMEMAPPLET" ] && kill $FREEMEMAPPLET

INOPID=`ps -o pid,args | grep 'inotifywait' | grep -v 'grep' | grep '/tmp/pup_event_sizefreem' | awk '{print $1}'`
[ "$INOPID" ] && kill $INOPID

_pidof $Q "$CURRENTWM" && kill -9 `pidof "$CURRENTWM"` || kill -9 `pidof $CURRENTWM` 2>>$ERR
sleep 1

INOPID=`ps -o pid,args | grep 'inotifywait' | grep -v 'grep' | grep '/tmp/pup_event_sizefreem' | awk '{print $1}'`
[ "$INOPID" ] && kill $INOPID

##exec killall $PREVIOUSWM
##exec killall X
_pidof $Q X && killall X     #default is SIGTERM.
sleep 1
exec killall -9 X 1>>$OUT 2>>$ERR  #make sure X is killed.

###END###
