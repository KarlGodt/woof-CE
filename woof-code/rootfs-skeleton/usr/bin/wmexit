#!/bin/ash
# Exit from X, will cause return to kernel console.


  _TITLE_=wm_exit
_VERSION_=1.0omega
_COMMENT_="Kill X and some background apps, and exit to Linux console prompt."

MY_SELF="$0"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
[ "$HAVE_F4PUPPY5" ] || . /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

TWO_HELP=''; TWO_VERSION=''; TWO_VERBOSE=''; TWO_DEBUG=''; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap
}

DEBUG=1

. /etc/eventmanager.cfg

case $1 in
*force) FORCE=1;;
esac

# First , test if X is running ...
_pidof X || _exit 4 "X not running"

# Popup a short messsage if DISPLAY - if run from terminal, DISPLAY is not set
[ "$DISPLAY" ] && yaf-splash -bg green -text "Exiting to prompt..." &

echo "exit $@" > /tmp/wmexitmode.txt       #xwin needs wmexitmode.txt
echo "exit $@" > /tmp/xwin/wmexitmode.txt  ##+++2011-11-07

sleep 0.2

# REM: Killing pup_event_frontend_d triggers also
#      trap HUP line in pup_event_frontend_d,
#      here in script, not in terminal
rm $VERB -f /tmp/pup_event_manager.flg
rm $VERB -f /tmp/pup_event_change_icons.flg

[ "$FORCE" ] || { pidof sync >>$OUT || sync; }

# X init files ... ( were in .xinitrc )
[ "$FORCE" ] || {
 for _file_ in $HOME/Choices/XINIT/*; do
    test -f $_file_ || continue
    _debug "stopping $_file_ .."
    source $_file_ stop
 done
}

# xfce4-panel ..
if [ "`pidof xfce4-panel`" != "" ];then
 #killall xfce4-panel
 kill `pidof xfce4-panel`
 exit
fi

# Next freememapplet kill attempt ...
fPIDS=`ps -o pid,args | grep -E 'freemem|inotify' | grep -v grep`
for aPID in $fPIDS; do [ "${aPID//[[:digit:]]/}" ] && continue; kill -9 $aPID; done

# X init files ... ( were in .xinitrc )
[ "$FORCE" ] || {
 for _file_ in $HOME/Choices/XINIT/*; do
    test -f $_file_ || continue
    _debug "stopping $_file_ .."
    source $_file_ stop
 done
}

# e17
pidof tempget >>$OUT && kill -2 `pidof tempget`
# Send kill signal to WM
read CURRENTWM </etc/windowmanager && kill -9 `pidof ${CURRENTWM##*/}` 2>>$ERR

# Send kill signals to X
killall X >>$OUT 2>>$ERR            #default is SIGTERM.
sleep 1
pidof X >>$OUT && exec killall -9 X #make sure X is killed.

exit $STATUS
# Very End of this file 'usr/bin/wmexit' #
###END###
