#!/bin/ash
#Exit from X, will cause return to xwin.

pidof -o $$ -o %PPID "${0##*/}" && { echo "$0 already running."; exit 1; }
test -f /etc/rc.d/f4puppy5 && source /etc/rc.d/f4puppy5
# BATCHMARKER01 - Marker for Line-Position to bulk insert code into.

#/sbin/pup_event_frontend_d will quit if this file exists...
echo "exit" > /tmp/wmexitmode.txt
echo "exit" > /tmp/xwin/wmexitmode.txt  ##+++2011-11-07
#give time for /sbin/pup_event_frontend_d to quit.
#w478 testing 2.6.18.1 kernel, pup_event_frontend_d did not exit when it
#detected /tmp/wmeximode.txt, but became 'defunct'...
echo -n "    ...Waiting for pup_event_frontend_d to stop"
killall pup_event_frontend_d
sleep 1
KCNT=0
PSPEFD="`_command ps -C pup_event_frontend_d | grep 'pup_event_front' | grep -vE 'ps|defunct|grep'`"
#while [ "`pidof pup_event_frontend_d`" != "" ];do
while [ "$PSPEFD" != "" ];do
 #sleep 0.5
 sleep 1s
 KCNT=`expr $KCNT + 1`
 [ $KCNT -gt 30 ] && break #30 secs.
 PSPEFD="`_command ps -C pup_event_frontend_d | grep 'pup_event_front' | grep -vE 'ps|defunct|grep'`"
 echo -ne "\r $KCNT "
done
sleep 0.2

sync
echo

if [ "`pidof xfce4-panel`" != "" ];then
 #killall xfce4-panel
 kill `pidof xfce4-panel`
 exit
fi

#w003
#CURRENTWM="`cat /etc/windowmanager`"
read CURRENTWM </etc/windowmanager
test "$CURRENTWM" && kill -9 `pidof "$CURRENTWM"`
pidof tempget && killall tempget

##exec killall $PREVIOUSWM
##exec killall X
killall X #default is SIGTERM.
sleep 1
#exec killall -9 X #make sure X is killed.
