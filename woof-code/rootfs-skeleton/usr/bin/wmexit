#!/bin/ash
. /etc/rc.d/f4puppy5
# BATCHMARKER01 - Marker for Line-Position to bulk insert code into.
#Exit from X, will cause return to xwin.

[ "$DISPLAY" ] || _exit "Need DISPLAY variable."

DISP=${DISPLAY%.*}

STARTVT=`busybox ps -o tty,args | grep -w xinit | grep "$DISP" | grep -vE 'grep' | cut -f2 -d',' | awk '{print $1}'`
test "$STARTVT" || STARTVT=1

echo DISP=$DISP STARTVT=$STARTVT

  if test -f /var/run/pup_event_fronted_d.pid."$DISP"; then
read pupPID </var/run/pup_event_fronted_d.pid."$DISP"
elif test -f /var/run/pup_event_fronted_d.pid; then
read pupPID </var/run/pup_event_fronted_d.pid
fi

if test "$pupPID"; then
     kill -9 $pupPID && {
           if test -f /var/run/pup_event_fronted_d.pid."$DISP"; then
          rm $VERB -f /var/run/pup_event_fronted_d.pid."$DISP"
         elif test -f /var/run/pup_event_fronted_d.pid; then
          rm $VERB -f /var/run/pup_event_fronted_d.pid
         fi
     }
else killall pup_event_frontend_d
fi

#/sbin/pup_event_frontend_d will quit if this file exists...
if test "$DISP";
then echo "exit" > /tmp/wmexitmode.txt."$DISP"
else echo "exit" > /tmp/wmexitmode.txt
fi

__wait_for_frontendD__(){
#give time for /sbin/pup_event_frontend_d to quit.
#w478 testing 2.6.18.1 kernel, pup_event_frontend_d did not exit when it
#detected /tmp/wmeximode.txt, but became 'defunct'...
KCNT=0
PSPEFD="`ps -C pup_event_frontend_d | grep 'pup_event_front' | grep -vE 'defunct|ps|grep'`"
#while [ "`pidof pup_event_frontend_d`" != "" ];do
while [ "$PSPEFD" != "" ];do
 sleep 0.5
 KCNT=`expr $KCNT + 1`
 [ $KCNT -gt 60 ] && break #30 secs.
 PSPEFD="`ps -C pup_event_frontend_d | grep 'pup_event_front' | grep -vE 'defunct|ps|grep'`"
done
sleep 0.2
}

_sync


chvt $STARTVT

if [ "`pidof xfce4-panel`" ];then
 #killall xfce4-panel
 kill `pidof xfce4-panel`
 exit
fi


#w003
_kill_all_currentwms(){
if test -f /etc/windowmanager."$DISP";
then read CURRENTWM </etc/windowmanager."$DISP"
else read CURRENTWM </etc/windowmanager
fi

if (pidof $CURRENTWM >>$OUT); then
kill -9 `pidof $CURRENTWM`
fi
}

  if test -f     /var/run/windowmanager.pid."$DISP"
then read wmPID </var/run/windowmanager.pid."$DISP"
elif test -f     /var/run/windowmanager.pid
then read wmPID </var/run/windowmanager.pid
else :
fi
echo wmPID=$wmPID

if test "$wmPID";
then  kill $wmPID
else _kill_all_currentwms
fi

sleep 2
#pidof X >>$OUT || { chvt $STARTVT; exit 0; }
#pidof X >>$OUT || exit 0

#echo need to kill X
#exit

xPID=`busybox ps -o pid,args | grep "X $DISP" | grep -vE 'grep' | awk '{print $1}'`
if test "$xPID";
then kill $xPID
else
killall X #default is SIGTERM.
sleep 1
##exec killall -9 X #make sure X is killed.
killall -9 X
fi

#if [ -n "`which chvt`" ] ; then
#chvt $STARTVT
#fi
