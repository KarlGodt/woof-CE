#!/bin/sh
#Exit from X, will cause return to xwin.

funcKILL_WALLPAPER(){
pidof slideshow && killall -9 slideshow
pidof wallpaper && killall -9 wallpaper

sleep 1s
}

funcKILL_FREEMEMAPPLET(){
#ps | grep freemem | grep -v grep | while read pid rest; do [ "$pid" ] || continue; kill -9 $pid ; done
#ps | grep freemem | grep -v grep | while read pid rest; do [ "$pid" ] || continue; kill -9 $pid ; done
#ps | grep inotify | grep -v grep | while read pid rest; do [ "$pid" ] || continue; kill -9 $pid ; done
}

#/sbin/pup_event_frontend_d will quit if this file exists...
echo -n "exit" > /tmp/wmexitmode.txt       #xwin needs wmexitmode.txt
echo -n "exit" > /tmp/xwin/wmexitmode.txt  ##+++2011-11-07
killall pup_event_frontend_d

wait_for_frontend_d(){
#sleep 1s
#give time for /sbin/pup_event_frontend_d to quit.
#w478 testing 2.6.18.1 kernel, pup_event_frontend_d did not exit when it
#detected /tmp/wmeximode.txt, but became 'defunct'...
KCNT=0
PSPEFD="`ps --no-headers -C pup_event_frontend_d | grep 'pup_event_front' | grep -v 'defunct'`"
#while [ "`pidof pup_event_frontend_d`" != "" ];do
while [ "$PSPEFD" != "" ];do
 sleep 0.5
 KCNT=`expr $KCNT + 1`
 [ $KCNT -gt 60 ] && break #30 secs.
 PSPEFD="`ps --no-headers -C pup_event_frontend_d | grep 'pup_event_front' | grep -v 'defunct'`"
done
sleep 0.2
}

pidof sync || sync

if [ "`pidof xfce4-panel`" != "" ];then
 #killall xfce4-panel
 kill `pidof xfce4-panel`
 exit
fi

read CURRENTWM </etc/windowmanager && kill -9 `pidof $CURRENTWM`
##e17
pidof tempget && kill -2 `pidof tempget`

ps | grep freemem | grep -v grep | while read pid rest; do [ "$pid" ] || continue; kill -9 $pid ; done
ps | grep freemem | grep -v grep | while read pid rest; do [ "$pid" ] || continue; kill -9 $pid ; done
ps | grep inotify | grep -v grep | while read pid rest; do [ "$pid" ] || continue; kill -9 $pid ; done


killall X #default is SIGTERM.
sleep 1
pidof X && exec killall -9 X #make sure X is killed.

exit $STATUS
