#!/bin/sh
#
# New header by Karl Reimer Godt, September 2014
  _TITLE_="Puppy_wmexit"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="/usr/bin/wmexit"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
[ "$HAVE_F4PUPPY5" ] || source /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

TWO_HELP=''; TWO_VERSION=''; TWO_VERBOSE=''; TWO_DEBUG=''; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap

}
# End new header
#
#Exit from X, will cause return to xwin.

#/sbin/pup_event_frontend_d will quit if this file exists...
echo -n "exit" > /tmp/wmexitmode.txt

pidof slideshow  >>$OUT && killall $Q slideshow
pidof wallpaper >>$OUT && killall $Q wallpaper
ps | grep freemem | grep -v grep | while read pid rest; do [ "$pid" ] || continue; kill -9 $pid; done
sleep 1s
ps | grep inotify | grep -v grep | while read pid rest; do [ "$pid" ] || continue; kill -9 $pid; done


#give time for /sbin/pup_event_frontend_d to quit.
#w478 testing 2.6.18.1 kernel, pup_event_frontend_d did not exit when it
#detected /tmp/wmeximode.txt, but became 'defunct'...
pidof pup_event_frontend_d >>$OUT && killall $Q pup_event_frontend_d

KCNT=0
PSPEFD="`ps -C pup_event_frontend_d | grep 'pup_event_front' | grep -v 'defunct'`"
#while [ "`pidof pup_event_frontend_d`" != "" ];do
while [ "$PSPEFD" != "" ];do
 echo $KCNT
 sleep 0.5
 KCNT=`expr $KCNT + 1`
 [ $KCNT -gt 60 ] && break #30 secs.
 PSPEFD="`ps -C pup_event_frontend_d | grep 'pup_event_front' | grep -v 'defunct'`"
done

sleep 0.2
#date
sync
#date # no second difference to first date

if [ "`pidof xfce4-panel`" != "" ];then
 #killall $Q xfce4-panel
 kill `pidof xfce4-panel`
 exit
fi
date

ps | grep freemem | grep -v grep | while read pid rest; do [ "$pid" ] || continue; kill -9 $pid; done
sleep 1s
ps | grep inotify | grep -v grep | while read pid rest; do [ "$pid" ] || continue; kill -9 $pid; done

#w003
CURRENTWM="`cat /etc/windowmanager`"
pidof ${CURRENTWM##*/} >>$OUT && kill -9 `pidof ${CURRENTWM##*/}`
date

##exec killall $Q $PREVIOUSWM
[ "$PREVIOUSWM" -a "`pidof ${PREVIOUSWM##*/}`" ] && killall $Q ${PREVIOUSWM##*/}
##exec killall $Q X
pidof X >>$OUT && killall $Q X #default is SIGTERM.
sleep 1
##exec killall $Q -9 X #make sure X is killed.
pidof X >>$OUT && killall $Q -9 X
date

ps | grep freemem | grep -v grep | while read pid rest; do [ "$pid" ] || continue; kill -9 $pid; done
sleep 1s
ps | grep inotify | grep -v grep | while read pid rest; do [ "$pid" ] || continue; kill -9 $pid; done

# Very End of this file 'usr/bin/wmexit' #
###END###
