#!/bin/sh
# Exit from X, will cause return to xwin.


  _TITLE_=wm_exit
_VERSION_=1.0omega
_COMMENT_="Kill X and some background apps, and exit to Linux console prompt."

MY_SELF="$0"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
[ "$HAVE_F4PUPPY5" ] || source /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

TWO_HELP=''; TWO_VERSION=''; TWO_VERBOSE=''; TWO_DEBUG=''; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap
}

_KILL_WALLPAPER(){
pidof slideshow && killall -9 slideshow
pidof wallpaper && killall -9 wallpaper

sleep 1s
}

_KILL_FREEMEMAPPLET(){
ps | grep freemem | grep -v grep | while read pid rest; do [ "$pid" ] || continue; kill -9 $pid ; done
ps | grep freemem | grep -v grep | while read pid rest; do [ "$pid" ] || continue; kill -9 $pid ; done
ps | grep inotify | grep -v grep | while read pid rest; do [ "$pid" ] || continue; kill -9 $pid ; done
}

#/sbin/pup_event_frontend_d will quit if this file exists...
echo -n "exit" > /tmp/wmexitmode.txt       #xwin needs wmexitmode.txt
echo -n "exit" > /tmp/xwin/wmexitmode.txt  ##+++2011-11-07
killall pup_event_frontend_d

wait_for_frontend_d(){
#sleep 1s
#give time for /sbin/pup_event_frontend_d to quit.
#w478 testing 2.6.18.1 kernel, pup_event_frontend_d did not exit when it
#detected /tmp/wmeximode.txt, but became 'defunct'...
KCNT=0
PSPEFD="`ps --no-headers -C pup_event_frontend_d | grep 'pup_event_front' | grep -v 'defunct'`"
#while [ "`pidof pup_event_frontend_d`" != "" ];do
while [ "$PSPEFD" != "" ];do
 sleep 0.5
 KCNT=`expr $KCNT + 1`
 [ $KCNT -gt 60 ] && break #30 secs.
 PSPEFD="`ps --no-headers -C pup_event_frontend_d | grep 'pup_event_front' | grep -v 'defunct'`"
done
sleep 0.2
}

pidof sync || sync

if [ "`pidof xfce4-panel`" != "" ];then
 #killall xfce4-panel
 kill `pidof xfce4-panel`
 exit
fi

read CURRENTWM </etc/windowmanager && kill -9 `pidof $CURRENTWM`
##e17
pidof tempget && kill -2 `pidof tempget`

ps | grep freemem | grep -v grep | while read pid rest; do [ "$pid" ] || continue; kill -9 $pid ; done
ps | grep freemem | grep -v grep | while read pid rest; do [ "$pid" ] || continue; kill -9 $pid ; done
ps | grep inotify | grep -v grep | while read pid rest; do [ "$pid" ] || continue; kill -9 $pid ; done

for _file_ in $HOME/Choices/XINIT/*; do
test -f $_file_ || continue
source $_file_ stop
done

killall X #default is SIGTERM.
sleep 1
pidof X && exec killall -9 X #make sure X is killed.

exit $STATUS
# Very End of this file 'usr/bin/wmexit' #
###END###
