#!/bin/bash
#
# New header by Karl Reimer Godt, September 2014
  _TITLE_="Puppy_pman"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="/usr/bin/pman"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
[ "$HAVE_F4PUPPY5" ] || . /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

TWO_HELP='1'; TWO_VERSION='1'; TWO_VERBOSE=''; TWO_DEBUG='1'; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap

}
# End new header
#
#Barry Kauler 2006. written for puppy, www.puppylinux.com
# License gpl2 (ref: /usr/share/doc/legal)
# A script to replace the man command.
#w464 updated for PKGS_HOMEPAGES homepages db.
#w482 changed die.net/man/1 url.
# 24aug09 i18n by Shinobar
# 27aug09 page1-8 for JM search
# 28aug09 run *.sh if found
#  2sep09 look up japanese puppy wiki
#  5sep09 read man pages with devx
# 12sep09 remove extentions such as .txt, .html, excute .sh
#v431 fix looking up linux.die.net
# v431JP suppress some locale if no X
# dev431JPbeta2: man [section] name
#120317 L18L: enable correct Character Encoding: UTF-8

CREDIT="man for puppy linux - 22 Dec 2009"
if [ -x /usr/local/bin/man ];then
  CREDIT="$CREDIT
If you like to use original version of man, try '/usr/local/bin/man'.
"
fi

_old_parameters(){
SECTION=""
NAME="$1"
[ $# -gt 1 ] && SECTION="$1" && NAME="$2"
case "$1" in
*-h*|'') echo "$CREDIT
usage: $(basename $0) [section] name"
      exit;;
esac
}

_tell_help(){
echo "$CREDIT
usage: $(basename $0) [section] name"
exit
}

_getopts(){
_debug "_getopts START : \$*=$*"
test "$*" || return 2
case $2 in -*) set - $1;; esac
_debug "_getopts: \$*=$*"
local iG=
OPTIND=1
#while getopts hVlL:DM:P:r:S:acde:fkm:p:utT:Zw; do
 while getopts acdDe:fhklL:m:M:p:P:r:S:tT:uVwZ op; do
 _debugx "_getopts:op=$op"
 case $op in
 h) _tell_help;;
 V) :;; #_tell_version
 a|c|d|D|f|k|l|t|u|w|Z) iG="${iG} -$op";;
 e|L|m|M|p|P|r|S|T) opp="$OPTARG"; iG="${iG} -$op";
		_debugx "op=$op opp=$opp"
		test "$opp" = "$2" && doSHIFT=1;;
 esac
 done
[ "$iG" ] && echo "Ignoring option '$iG'" >&2
_debug "_getopts END : \$*=$*"
}
_get_longopts(){
test "$*" || return 2
local iG=
case $* in
--help) _tell_help;;
--version)  :;; #_tell_version
#--local-file|--default|--all|--catman|--debug|--whatis|--apropos|--update|--troff|--ditroff|--where|--location)
 --all|--apropos|--catman|--debug|--default|--ditroff|--local-file|--location|--troff|--update|--whatis|--where)
 iG="${iG} $1";;
 --locale=*|-manpath=*|--pager=*|--prompt=*|--sections=*|--extension=*|--systems=*|--preprocessor=*|--troff-device=*)
 opp="${1#*=}"; iG="${iG} ${1%=*}";;
 esac
[ "$iG" ] && echo "Ignoring option '$iG'" >&2
}

while :; do
unset doSHIFT
_debug "\$1=$1 \$2=$2"
case "$1" in '') _tell_help;;
--*)   _get_longopts $1;;
-*)
 _debugx "single dash: \$1=$1 \$2=$2"
 case "$1" in
 -a|-c|-d|-D|-f|-h|-k|-l|-t|-u|-V|-w|-Z) _getopts "$1" ;;
 -*) _getopts "$1" "$2"; test "$doSHIFT" && shift;;
 esac
;;
[0-9]) SECTION=$1;;
*) if [ -f "$1" ]; then FNDMAN="$1"
   else NAME="$1"
   fi;;
esac
shift
[ "$1" ] || break
done

[ "$NAME" -o "$FNDMAN" ] || { echo "No valid manpage demand." >&2; exit 2; }

BBAPPLETS=`busybox --list` #| tr '\n' '|' | tr -s '|' |` #sed 's@^|*@@;s@|*$@@'`
[ "$BBAPPLETS" ] && BBAPPLETS='|'"`echo $BBAPPLETS | tr ' ' '|' | tr -s '|'`"'|'
if test ! "$BBAPPLETS"; then
BBAPPLETS="|addgroup|adduser|adjtimex|ar|arping|ash|awk|basename|bunzip2|busybox|bzcat|cal|cat|chgrp|chmod|chown|chroot|chvt|clear|cmp|cp|cpio|crond|crontab|cut|date|dc|dd|deallocvt|delgroup|deluser|devfsd|df|dirname|dmesg|dos2unix|dpkg|dpkg-deb|du|dumpkmap|dumpleases|echo|egrep|env|expr|false|fbset|fdflush|fdformat|fdisk|fgrep|find|fold|free|freeramdisk|fsck.minix|ftpget|ftpput|getopt|getty|grep|gunzip|gzip|halt|hdparm|head|hexdump|hostid|hostname|httpd|hush|hwclock|id|ifconfig|ifdown|ifup|inetd|init|insmod|install|ip|ipaddr|ipcalc|iplink|iproute|iptunnel|kill|killall|klogd|lash|last|length|linuxrc|ln|loadfont|loadkmap|logger|login|logname|logread|losetup|ls|lsmod|makedevs|md5sum|mesg|mkdir|mkfifo|mkfs.minix|mknod|mkswap|mktemp|modprobe|more|mount|msh|mt|mv|nameif|nc|netstat|nslookup|od|openvt|passwd|patch|pidof|ping|ping6|pipe_progress|pivot_root|poweroff|printf|ps|pwd|rdate|readlink|realpath|reboot|renice|reset|rm|rmdir|rmmod|route|rpm|rpm2cpio|run-parts|rx|sed|seq|setkeycodes|sha1sum|sleep|sort|start-stop-daemon|strings|stty|su|sulogin|swapoff|swapon|sync|sysctl|syslogd|tail|tar|tee|telnet|telnetd|test|tftp|time|top|touch|tr|traceroute|true|tty|udhcpc|udhcpd|umount|uname|uncompress|uniq|unix2dos|unzip|uptime|usleep|uudecode|uuencode|vconfig|vi|vlock|watch|watchdog|wc|wget|which|who|whoami|xargs|yes|zcat|"
fi

# set locale
for lng in C $(echo $LANGUAGE|cut -d':' -f1) $LC_ALL $LANG;do :;done   # ex.    ja_JP.UTF-8
lng1=$(echo $lng|cut -d'.' -f1)      # ex.   ja_JP
lng2=$(echo $lng|cut -d'_' -f1)   # ex.   ja
LANGS="$lng,$lng1,$lng2,C"

# handlers
HTMLVIEWERS="$BROWSER defaulthtmlviewer defaultbrowser dillo seamonkey mozilla firefox opera"
TEXTVIEWERS="defaulttextviewer leafpad nicoedit geany gedit"
MANHANDLERS="groff man2html groff nroff troff"

if [ "$DISPLAY" = "" ]; then
 HTMLVIEWERS="w3m lynx"
 TEXTVIEWERS="more less"
 MANHANDLERS="nroff"
 echo $lng2 | grep -qE 'ja|ko|th|zh' && export LANG=C && LANGS=C
fi

HTMLVIEWER=""
for PROG in $HTMLVIEWERS;do
  which $PROG >/dev/null && HTMLVIEWER=$PROG && break
done

TEXTVIEWER=""
for PROG in $TEXTVIEWERS;do
  which $PROG >/dev/null && TEXTVIEWER=$PROG && break
done

# look up man page
MANHANDLER=""
for PROG in $MANHANDLERS; do
  which $PROG >/dev/null && MANHANDLER=$PROG && break
done

_try_manhandler(){
[ "$MANHANDLER" ] || return 0
 #[ "$MANPATH" = "" ] && MANPATH="/usr/man:/usr/share/man:/usr/local/man:/usr/local/share/man"
 if [ ! "$MANPATH" ]; then
 for d in "/man" "/opt/man" "/opt/share/man" "/usr/man" "/usr/share/man" "/usr/local/man" "/usr/local/share/man"
 do
 test -d "$d" || continue
 [ "$MANPATH" ] && MANPATH="$d:$MANPATH" || MANPATH="$d"
 done
 fi
 [ "${MANPATH//[[:blank:]:,;]/}" ] || return 1

 MANDIRS=$(echo $MANPATH| tr ':' ',')
 MANLANGS="$LANGS"
 [ "$MANHANDLER" != "man2html" ] && { echo $lng2 | grep -qE 'ja|ko|th|zh' && export MANLANGS=C; }
 [ "$SECTION" ] && SEC="$SECTION" || SEC='*'
 [ "$MANDIRS" ] && \
 FNDMAN="$(eval find -L {$MANDIRS}/{{$MANLANGS}/man${SEC},man${SEC}} -maxdepth 1 -iname ${NAME}.[0-9]* -not -type d 2>/dev/null)"

 if [ "$FNDMAN" != "" ]; then
 [ "$printLOCATIONS" ] && echo "$FNDMAN" # -w option
 FNDMAN=`echo "$FNDMAN" | head -n1` # sort?

   case $MANHANDLER in
   nroff)
     which more >/dev/null && MORE="more"
     #MORE="less -FRis"
     if which less; then
      moreHELP=`less --help` && MORE=less
     elif busybox | grep $Q -w less; then
      moreHELP=`busybox less --help` && MORE='busybox less'
     fi
     if test "$moreHELP"; then
      for op in '-F' '-i' '-I' '-J' '-m' '-M' '-N' '-q' '-r' '-R' '-s' '-S' '-~' '-X' #put your favourite options here
      do
       #less --help 2>/dev/null | grep $Q -we "$op" && lessOPTS="${lessOPTS}$op "
       echo "$moreHELP" | grep $Q -we "$op" && lessOPTS="${lessOPTS}$op "
      done
      moreOPTS=`echo $lessOPTS`
      MORE="$MORE $moreOPTS"
     fi
     #which more >/dev/null && MORE="more"
     test "${MORE// /}" || return 1

     case "$FNDMAN" in
     *.gz)
       zcat "$FNDMAN" | $MANHANDLER -mandoc | $MORE;;
     *.bz2)
       bzcat "$FNDMAN" | $MANHANDLER -mandoc | $MORE;;
     *.[0-9]|*.[0-9][a-z])
       $MANHANDLER -mandoc "$FNDMAN" | $MORE;;
     *) echo "Invalid or unhandled filename '$FNDMAN'" >&2; false;;
     esac
     exit $?
    ;;

   groff)

     MORE=`which gv`
     test "${MORE// /}" || return 1
     case "$FNDMAN" in
     *.gz)
      TMPFILE=/tmp/$(basename "$FNDMAN" .gz | tr '.' '_').ps
        [ -s "$TMPFILE" ] || zcat "$FNDMAN" | $MANHANDLER -mandoc >$TMPFILE
        ;;
     *.bz2)
       TMPFILE=/tmp/$(basename "$FNDMAN" .bz2 | tr '.' '_').ps
        [ -s "$TMPFILE" ] || bzcat "$FNDMAN" | $MANHANDLER -mandoc >$TMPFILE
        ;;
     *.[0-9]|*.[0-9][a-z])
       TMPFILE=/tmp/$(basename "$FNDMAN" | tr '.' '_').ps
        [ -s "$TMPFILE" ] || $MANHANDLER -mandoc "$FNDMAN" >$TMPFILE
        ;;
     *) echo "Invalid or unhandled filename '$FNDMAN'" >&2; false;;
     esac
     [ -s "$TMPFILE" ] || echo "Error while creating $TMPFILE" > $TMPFILE
     $MORE $TMPFILE & sleep 6
     [ "$DEBUG" ] || rm -f $TMPFILE
     exit $?
   ;;

   man2html)
     case "$FNDMAN" in
     *.gz)
       TMPFILE=/tmp/$(basename "$FNDMAN" .gz | tr '.' '_').html
       [ -s "$TMPFILE" ] || zcat "$FNDMAN" | $MANHANDLER > $TMPFILE;;
     *.bz2)
       TMPFILE=/tmp/$(basename "$FNDMAN" .bz2 | tr '.' '_').html
       [ -s "$TMPFILE" ] || bzcat "$FNDMAN" | $MANHANDLER > $TMPFILE;;
     *.[0-9]|*.[0-9][a-z])
       TMPFILE=/tmp/$(basename "$FNDMAN" | tr '.' '_').html
       [ -s "$TMPFILE" ] || $MANHANDLER "$FNDMAN" > $TMPFILE;;
     *)
       echo "Invalid or unhandled filename '$FNDMAN'" >&2; false;;
     esac
     [ -s "$TMPFILE" ] || echo "Error while creating $TMPFILE" > $TMPFILE
     $HTMLVIEWER $TMPFILE & sleep 13
     [ "$DEBUG" ] || rm -f $TMPFILE
     exit $?
    ;;
   esac

 else
  echo "No local manpage copy of $NAME in section $SEC found".
  false
 fi
}

_do_local(){
#if [ "$LOCAL" ];then
#[ "$LOCAL" ] || return 0
#if [ "$MANHANDLER" != "" ]; then
_try_manhandler
#fi
# look up help file
HELPDIR=/usr/share/doc/help
BASE=$(basename $NAME |cut -d'.' -f1)
FNDTXT="$(eval /bin/find -L $HELPDIR/{$LANGS} -maxdepth 1 -iname $BASE.txt -not -type d 2>/dev/null| head -n 1)"
[ "$FNDTXT" = "" ] && \
FNDHTM="$(eval /bin/find -L $HELPDIR/{$LANGS} -maxdepth 1 -iname $BASE.htm* -not -type d 2>/dev/null| head -n 1)"
SYMLNKS=`find /usr/share/doc -maxdepth 1 -type l 2>/dev/null`
[ "$FNDTXT" = "" -a "$FNDHTM" = "" ] && \
 FNDTXT="`/bin/find /usr/share/doc -maxdepth 3 -xdev -xtype f -iname ${NAME}.txt 2>/dev/null`"
 #find does not follow symlinks in paths unless followed by at least a "/", need this crap...
if [ "$FNDTXT" = "" -a "$FNDHTM" = "" ];then
 FNDSH="$(eval /bin/find -L $HELPDIR/{$LANGS} -maxdepth 1 -iname $BASE.sh -not -type d 2>/dev/null| head -n 1)"
 [ -f "$FNDSH" ] && exec "$FNDSH"
 for ONELNK in $SYMLNKS
  do
   [ "`echo -n "$ONELNK" | grep -i "${NAME}.txt$"`" != "" ] && FNDTXT="$ONELNK"
   [ "$FNDTXT" != "" ] && break
   FNDTXT="`/bin/find ${ONELNK}/ -xdev -maxdepth 3 -xtype f -iname ${NAME}.txt 2>/dev/null`"
   [ "$FNDTXT" != "" ] && break
  done
fi

if [ "$FNDTXT" != "" ];then
 FNDTXT="$(echo "$FNDTXT" | head -n 1)"
 exec $TEXTVIEWER "$FNDTXT"

else
 [ "$HTMLVIEWER" = "" ] && exit
 [ "$FNDHTM" = "" ] && \
  FNDHTM="`/bin/find /usr/share/doc -maxdepth 9 -xdev -xtype f -iname ${NAME}.htm* 2>/dev/null`"
 #v2.12 improved find code contributed by Dougal...
 if [ "$FNDHTM" = "" ];then
   FNDDIR="`/bin/find /usr/share/doc -maxdepth 9 -xdev -type d -iname ${NAME}* 2>/dev/null`"
   [ $? -eq 0 ] && [ -f $FNDDIR/index.html ] && FNDHTM=$FNDDIR/index.html
 fi
 #find does not follow symlinks in paths unless followed by at least a "/", need this crap...
 if [ "$FNDHTM" = "" ];then
  for ONELNK in $SYMLNKS
  do
   [ "`echo -n "$ONELNK" | grep -i "${NAME}.htm"`" != "" ] && FNDHTM="$ONELNK"
   [ "$FNDHTM" != "" ] && break
   FNDHTM="`/bin/find ${ONELNK}/ -xdev -maxdepth 3 -xtype f -iname ${NAME}.htm* 2>/dev/null`"
   [ "$FNDHTM" != "" ] && break
  done
 fi

 if [ "$FNDHTM" != "" ];then
  FNDHTM="$(echo "$FNDHTM"| head -n 1)"
  [ "`echo -n "$FNDHTM"| cut -b 1`" = "/" ] && FNDHTM=file://$FNDHTM
  exec $HTMLVIEWER "$FNDHTM"
 fi
fi
}
_do_local

#w464 search pkg homepages db...
pPATTERN='^'"${NAME}"' '
HOMESITE="`grep -i "$pPATTERN" /root/.packages/PKGS_HOMEPAGES | head -n 1 | cut -f 2 -d ' '`"
if [ "$SECTION" = "" -a "$HOMESITE" != "" ];then
 exec $HTMLVIEWER $HOMESITE
fi
if [ "$lng2" = "ja" ]; then
  # Japanese Puppy Wiki
  url="http://puppylinux.jp/w/index.php?${NAME}"
  wget -t 1 -T 5 -O - "$url" 2>>$ERR | fgrep -q "<title>${NAME} -" && \
  exec $HTMLVIEWER "$url"
  # JP project
  SECS="Sec$SECTION=on"
  [ "$SECTION" = "" ] && SECS="Sec1=on&Sec2=on&Sec3=on&Sec4=on&Sec5=on&Sec6=on&Sec7=on&Sec8=on"
  url="http://search.linux.or.jp/cgi-bin/JM/man.cgi?Pagename=${NAME}&${SECS}"
  if REPLY=$(LANG=C wget -t 1 -T 5 --spider "$url" 2>&1);then
    echo "$REPLY" | fgrep -q 'nosuchpage.html' || \
    exec $HTMLVIEWER "$url"
  fi
fi
#exec defaulthtmlviewer http://en.wikipedia.org/wiki/${NAME}
#exec defaulthtmlviewer http://unixhelp.ed.ac.uk/CGI/man-cgi?${NAME}
#exec defaulthtmlviewer http://threads.seas.gwu.edu/cgi-bin/man2web?program=${NAME}
#v431 fix thanks to technosaurus...
#[ "${SECTION}" != "" ] && exec $HTMLVIEWER "http://linux.die.net/man/${SECTION}/${NAME}"

if test "${SECTION}"; then
for oneURL in \
 "http://linux.die.net/man/${SECTION}/${NAME}" \
 "http://www.manpagez.com/man/${SECTION}/${NAME}" \
 "http://www.gsp.com/cgi-bin/man.cgi?section=${SECTION}&topic=${NAME}" \
 "http://www.daemon-systems.org/man/${NAME}.${SECTION}.html"

do $HTMLVIEWER $oneURL & sleep 2
done
fi

for oneURL in \
 "http://unixhelp.ed.ac.uk/CGI/man-cgi?${NAME}" \
 "http://ss64.com/bash/${NAME}.html" \
 "http://pubs.opengroup.org/onlinepubs/007908799/xcu/${NAME}.html"

do $HTMLVIEWER $oneURL & sleep 2
done

exec $HTMLVIEWER "http://www.google.com/search?&q=man+\"${NAME}\"+site:linux.die.net&btnI=Search"

###END###
