#!/bin/ash
# bash has problems to process aliased names in _do_loop
# ./evince: line 87: pdfview: command not found
# ./evince: line 85: pdfview: command not found

#BK nov 2007
# It seems built-in to gtk and gnomeprint print-dialogs,
# if choose print-preview, tries to run 'evince' --
# which is a Gnome document viewer.
# I looked at what gets passed into this 'evince' script
# when try to print-preview from Leafpad:
# --unlink-tempfile --preview --print-settings /tmp/settings5F8P1T.ini /tmp/previewQ2HM1T.pdf
# ...interesting, it's a pdf file. so, do this...

  _TITLE_="pup_evince.sh"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script wrapper for epdfview"

MY_SELF="$0"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
[ "$HAVE_F4PUPPY5" ] || . /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

TWO_HELP=''; TWO_VERSION=''; TWO_VERBOSE=''; TWO_DEBUG=''; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG=""
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap
}

_tell_help(){
MSG="$0 <filename.pdf>"
MSG=`gettext "$MSG"`
echo "$MSG"
exit $1
}

if test ! -f "$1"; then
case $1 in
-h|*help|*usage) _tell_help 0;;
-V|*version)     _tell_help 0;; #TODO
'') _tell_help 1;;
esac
fi

echo PATH=$PATH
for oneBIN in epdfview evince.bin
do
[ "`which $oneBIN`" ] && alias pdfview="$oneBIN" #
done
alias pdfview >>$OUT || { echo "No pdfviewer found in PATH ."; exit 2; }

#onlyFILENAMES=`echo "$*" | tr '\t' ' ' | tr -s ' ' | tr ' ' '\n' | grep -ve '^-' | grep -i '\.pdf$'`
#onlyFILENAMES=`echo "$*" | tr '[:blank:]' '\n' | grep -ve '^-' | grep -i '\.pdf$'`
for oneFILE in "$@"
do
_debug "oneFILE='$oneFILE'"
echo "$oneFILE" | grep $Q -i '\.pdf$' || continue
[ "$onlyFILENAMES" ] && onlyFILENAMES="$onlyFILENAMES
$oneFILE" || onlyFILENAMES="$oneFILE"
done

_debug "\$*='$*' \$#=$#"
set --
_debug "\$*='$*' \$#=$#"

while read -r oneFILE
do
 [ "$oneFILE" ] || continue
 if test -f "$oneFILE"; then
##[ "$ONLYFILENAMES" ] && ONLYFILENAMES="$ONLYFILENAMES
#$oneFILE" || ONLYFILENAMES="$oneFILE"
 set "$@" "$oneFILE"
 fi
done <<EoI
`echo "$onlyFILENAMES"`
EoI

#_debug "ONLYFILENAMES='$ONLYFILENAMES'"
#[ "$ONLYFILENAMES" ] || { echo "No (existing) .pdf filename(s) given."; exit 2; }
#exec pdfview $ONLYFILENAMES
#pdfview $ONLYFILENAMES
#set - $ONLYFILENAMES
_debug "\$*='$*' \$#=$#"
#pdfview "$@"

alias

_do_loop(){
test "$@" || return 2
#alias
#alias pdfview
#echo loop BEGIN
for oneFILE in "$@"
do
c=$((c+1))
if test "$c" = "$#"; then
pdfview "$oneFILE"
else
pdfview "$oneFILE" &
fi
STATUS=$((STATUS+$?))
done
}
#alias pdfview
_do_loop "$@" || STATUS=1

[ "$DEBUG" ] || { [ "$STATUS" = 0 ] && rm -f /tmp/epdfview[0-9A-Z]*; }
exit $STATUS
# Very End of this file 'usr/bin/evince' #
###END###
