#!/bin/ash
#
# New header by Karl Reimer Godt, September 2014
  _TITLE_="Puppy_xwin"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="/usr/bin/xwin"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
[ "$HAVE_F4PUPPY5" ] || . /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

TWO_HELP=
ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap

}
# End new header
#
#(c) Copyright Barry Kauler 2003,2004,2005,2006,2007 www.puppylinux.com
#2007 Lesser GPL licence v2 (http://www.fsf.org/licensing/licenses/lgpl.html)
#v3.90 rawpup, update for Xvesa.
#v3.94, v3.95, recognise Classmate, EeePC laptops.
#v3.98 change to home directory.
#v3.98 forced reboot handling improved by pizzasgood.
#v3.99 automatically handle problematic video adapters that hang Xvesa.
#v405 added support for xvesa 1024x600.
#v408 BK k2.6.25.16 serial mouse driver now a module 'sermouse'.
#v411 rerwin: mouse improvements.
#w001 fixes for woof, /usr/X11R7 not used.
#w460 fixes to get Xvesa running with woof build. fix for X restart after exit.
#w477, w478 more fixes Xvesa restart after first 'Exit to prompt'.
#w479 older Xvesa server may not recognise '-sp' option.
#w479 k2.6.18.8 need awful hack, Xorg, '-nolisten tcp' causes hang!
#v424 bad hack to fix serial mouse.
#100127 make sure xorg keyboard layout matches console setting (same code in xorgwizard).
#100130 typo fix.
#100215 moved sync code for console/xorg kbd layout from xwin to /usr/sbin/input-wizard.
#100501 monitor probe returns random 'manufacture' data from one of my monitors.
#100520 attempt fix keyboard layout not getting updated.
#100608 jemimah: added 1366x768.


TMP_DIR=/tmp/xwin
mkdir $VERB -p "$TMP_DIR"

until [ "`cat /proc/loadavg | cut -f 1 -d '.'`" -lt '3' ];do echo -ne "\rWaiting for load average to drop below 3 :`cat /proc/loadavg` ";sleep 2s;done;echo  ###+++2011-11-30
#exec 2>/tmp/xwin.log.$$

pidof -o %PPID -o $$ ${0##*/} && { echo -e "\\033[0;31m""More than one instance of xwin running."; exit 2; }

cd ~/   #v3.98 Ensure current directory is root, in case changed at command prompt, so rox icon and menu item open only at home directory. rerwin

#variables created at bootup by init script in initrd...
. /etc/rc.d/PUPSTATE #v2.02
# PUPMODE= current operating configuration,
# PDEV1=  the partition have booted off, DEV1FS=f.s. of PDEV1,
# PUPSFS= pup_201.sfs versioned name, stored on PDEV1, PUPSAVE=vfat,sda1,/pup_save.3fs
# PMEDIA is a broad description of the boot media, ex "usbflash" or "idehd".

[ "$KERNELVER" ] || KERNELVER="`uname -r`" #w479

#0.9.9 enables to start a specific w.m. from commandline...
if [ "$1" ];then
 echo "$1" >/etc/windowmanager
 #note, /root/.xinitrc uses this file.
fi

#v1.0.7
CURRENTX="`basename $(readlink $(which X))`"
# REM: Strip everything after the simple binary name, ie Xorg-1.10.6 -> Xorg
CURRENTX=`echo "$CURRENTX" | sed 's![[:punct:]].*$!!'`
_debug "CURRENTX='$CURRENTX'"

if [ "$CURRENTX" = "XF86_SVGA" ];then
 #xf86config v3.3.6 creates config file at /etc, wrong place...
 [ -f /etc/XF86Config ] && mv -f $VERB /etc/XF86Config /etc/X11/XF86Config
fi

#v3.90 expanded to auto run best video mode...
if [ "$CURRENTX" = "Xvesa" ];then #0.9.9

 if [ ! -f /tmp/videomode ] ; then ###-a ! -f /etc/videomode ];then #v2.21
  ddcprobe >/tmp/ddcprobe.txt
  #weird (ddcprobe is very weird), on some hardware, edid monitor probe fails
  #every alternate run of ddcprobe...
  case "`cat /tmp/ddcprobe.txt`" in *edidfail*)
   sleep 1
   ddcprobe >/tmp/ddcprobe.txt
   ;;
  esac

#v3.99 begin
  if [ -f /etc/xorgoverrides ] && grep $Q -f /etc/xorgoverrides /tmp/ddcprobe.txt;then
   echo -e "\\033[1;34m""Starting now xorgwizard because of /etc/xorgoverrides"
   sleep 5s
   rm $VERB -f /var/lock/XLOADED 2>>$ERR #not necessary, precaution.
   #1st dialog offers to use Xvesa...
   /usr/sbin/xorgwizard
   echo -e "\\033[1;34m""Finished xorgwizard because of xorgoverrides""\\033[0;39m"
   CURRENTX="`realpath /usr/bin/X`"
   [ -f "$CURRENTX" ] || _exit 1 "$CURRENTX is not a regular file."
   CURRENTX=${CURRENTX##*/}
   case $CURRENTX in *Xorg*) :;;
   *) _exit 1 "Dropping to commandline.";;
   esac  #go to command line if not Xorg
  fi
 fi
fi
#Repeat earlier tests in case Xserver now Xorg and to retain indentation levels.
if [ "$CURRENTX" = "Xvesa" ];then #0.9.9
 BASEMODE=""
 if [ ! -f /tmp/videomode ];then #v2.21
#v3.99 end
 [ -f /etc/videomode ] && cp $VERB /etc/videomode /tmp/
  #v3.95 note code duplicated in xorgwizard, not efficient...
  #v3.94 detect if a Classmate PC laptop with 800x480 screen...
  #if [ "`grep 'edidfail' /tmp/ddcprobe.txt`" != "" ];then
  # if [ "`cat /tmp/ddcprobe.txt | tr -s ' ' | grep 'oem: Intel(r)915GM/910ML/915MS Graphics'`" != "" ];then
  #  if [ "`dmesg | grep 'CPU0: Intel(R) Celeron(R) M processor          900MHz'`" != "" ];then
  #   if [ "`dmesg | grep 'uDiskOnChip'`" != "" ];then
  #    #yep, looks like this is a Classmate model with 800x480...
  #    echo 'timing: 800x480@60' >>/tmp/ddcprobe.txt
  #   fi
  #  fi
  # fi
  #fi
  #v3.97 improved method: CM=Classmate, 915=chip 10=generation#...
  [ "`dmidecode -s bios-version | grep '^CM91510'`" != "" ] && echo 'timing: 800x480@60' >>/tmp/ddcprobe.txt
  #v3.95 recognise more special screens...
  DMIDECODE="`dmidecode`"
  #recognise EeePC Asus laptop...
  [ "`echo "$DMIDECODE" | grep 'Product Name: 701'`" != "" ] && [ "`echo "$DMIDECODE" | grep 'Serial Number: EeePC'`" != "" ] && echo 'timing: 800x480@60' >>/tmp/ddcprobe.txt

  echo -e '\nIf initialization freezes here, press ctrl-c and type "xorgwizard",\nselect "Xorg", choose monitor type and choose video mode.'   #v3.99
  grep '^oem:' /tmp/ddcprobe.txt >/tmp/ddcprobeoem.txt   #v3.99 current adapter signature
  sleep 5s
  #get too many weird resolutions, maybe better just only allow these...
  #want widescreen/non-vesa resolutions only...
  VESAMODES="`Xvesa -listmodes 2>&1 | grep '^0x' | tr ':' ' ' | tr -s ' ' | cut -f 1,2 -d ' '`"
  rm $VERB -f /tmp/ddcprobeoem.txt  #v3.99 didn't hang in Xvesa, so delete signature
  #100608 jemimah: added 1366x768...
  ##MONCHOICES="`grep -F 'timing:' /tmp/ddcprobe.txt | grep -E -v 'Apple|8514A|Mac II|\(XGA2\)' | grep -E ' 800x480@| 800x600@| 1024x600@| 1024x768@| 1280x768@| 1280x800@| 1280x1024@| 1360x768@| 1366x768@| 1400x1050@| 1440x900@| 1600x1200@| 1680x1050@| 1920x1080@| 1920x1200@' | cut -f 2 -d ' ' | sort -u`"
  MONCHOICES="`grep -F 'timing:' /tmp/ddcprobe.txt | grep -E -v 'Apple|8514A|Mac II|\(XGA2\)' |cut -f 2 -d ' ' | sort -u`"
  if [ "$MONCHOICES" != "" ];then
   MONCUTXY="`echo "$MONCHOICES" | cut -f 1 -d '@' | tr '\n' ' '`"
    _debug 'DBG 1 MONCHOICES: '"$MONCHOICES"
    sleep 9s
    #v2.21 code to handle widescreen with intel video chips...
   if [ ! -f /etc/resolutionfix ];then
    if grep -F 'oem:' /tmp/ddcprobe.txt | grep $Q -F 'Intel' ;then
     MISSINGXY=""
     for ONECUTXY in $MONCUTXY #ex: each field 1024x768
     do
      OPATTERN=" ${ONECUTXY}x"
      [ "`echo "$VESAMODES" | grep "$ONECUTXY"`" = "" ] && MISSINGXY="$ONECUTXY"
     done
     _debug 'DBG 2 MISSINGXY:'"$MISSINGXY"
     sleep 9s
     if [ "$MISSINGXY" != "" ];then
      MYXRES="`echo -n "$MISSINGXY" | cut -f 1 -d 'x'`"
      MYYRES="`echo -n "$MISSINGXY" | cut -f 2 -d 'x'`"
      915resolution 38 $MYXRES $MYYRES
      #...replaces mode 38 (1024x768).
      #create something for /etc/profile to execute at bootup...
      echo "915resolution 38 $MYXRES $MYYRES" >/etc/resolutionfix
      VESAMODES="`Xvesa -listmodes 2>&1 | grep '^0x' | tr ':' ' ' | tr -s ' ' | cut -f 1,2 -d ' '`"
      PPATTERN=" ${MYXRES}x${MYYRES}x"
      #BASEMOD is res that we are going to start X with...
      BASEMODE="`echo "$VESAMODES" | grep "$PPATTERN" | grep -E 'x16$|x24$|x32$' | head -n 1`"
      _debug 'DBG 3 VESAMODES:'"$VESAMODES"
      _debug 'DBG 4 PPATTERN:'"$PPATTERN"
      _debug 'DBG 5 BASEMODE:'"$BASEMODE"
      sleep 9s
     fi
    fi
   fi

   #find out if there is just one native mode...
   if [ "$BASEMODE" = "" ];then
    #if [ "`echo "$MONCUTXY" | wc -l`" = "1" ];then
     QPATTERN=`echo "$MONCHOICES" | cut -f 1 -d '@' | sed 's#$#x#g' | tr '\n' '|' | sed 's#|$##'`
     _debug 'DBG 6 QPATTERN='"$QPATTERN"
     BASEMODE="`echo "$VESAMODES" | grep -E "$QPATTERN" | grep -E 'x16$|x24$|x32$' | head -n 1`"
     _debug 'DBG 7 BASEMODE='"$BASEMODE"
    sleep 9s
    #fi
   fi
   _debug 'DBG 8 BASEMODE :'"$BASEMODE"
   sleep 9s
   if [ "$BASEMODE" != "" ];then
    echo "$BASEMODE" >/etc/videomode #no need for wizard after startup!
        ##rm -f /tmp/videomode 2>>$ERR #w460 make sure can exit from X.
   fi
  fi

  if [ "$BASEMODE" = "" ];then
   BASEMODE="`echo "$VESAMODES" | grep ' 800x600x16' | head -n 1`"
   _debug 'DBG 9 BASEMODE :'"$BASEMODE"
   sleep 9s
   if [ "$BASEMODE" != "" ];then
    echo "$BASEMODE" >/tmp/videomode
   else
   _debug 'DBG 10 last resort 0x0111'
   sleep 10s
   echo "0x0111 640x480x16" >/tmp/videomode
    #...desparate, not a practical mode.
   fi
  fi

  rm $VERB -f /tmp/Xflag #precaution.
  #...if /tmp/videomode exists, video-wizard is started in ~/.xinitrc
  #...note, if /etc/videomode exists instead, normal X startup.
 ##[ "$PUPMODE" != "5" ] &&
 ## rm /tmp/videomode
 fi

fi

#v411 restored after removal in v407...
#update xorg.conf if mouse has changed...
[ -f /etc/mousedevice ]    && read    MOUSEDEV </etc/mousedevice #autodetected in rc.sysinit
[ -f /etc/oldmousedevice ] && read OLDMOUSEDEV </etc/oldmousedevice #set in rc.sysinit
if [ "$OLDMOUSEDEV" != "$MOUSEDEV" ];then
 if [ "$OLDMOUSEDEV" != "nothing" ];then #"nothing" on first boot.
  if [ -f /etc/X11/xorg.conf ];then
   case `cat /etc/mousedevice | cut -c 1-4` in
    "inpu") #"input/mice", usb
     cat /etc/X11/xorg.conf | sed -e 's/\W\+Option\W\+"Protocol"\W\+"\(\(\w\+\/\w\+\)\|\(\w\+\)\)\W\+#mouse0protocol/   Option      "Protocol" "IMPS\/2" #mouse0protocol/g' >/tmp/xorg.conf.tmp2
     ;;
    "ttyS") #ttyS0,1,2,3, serial
     cat /etc/X11/xorg.conf | sed -e 's/\W\+Option\W\+"Protocol"\W\+"\(\(\w\+\/\w\+\)\|\(\w\+\)\)\W\+#mouse0protocol/   Option      "Protocol" "Microsoft" #mouse0protocol/g' >/tmp/xorg.conf.tmp2
     ;;
    *)
     cat /etc/X11/xorg.conf | sed -e 's/\W\+Option\W\+"Protocol"\W\+"\(\(\w\+\/\w\+\)\|\(\w\+\)\)\W\+#mouse0protocol/   Option      "Protocol" "auto" #mouse0protocol/g' >/tmp/xorg.conf.tmp2
     ;;
   esac
   _sync
   cp -f $VERB /tmp/xorg.conf.tmp2 /etc/X11/xorg.conf
   _sync
   rm $VERB -f /tmp/xorg.conf.tmp2
  fi
 fi
 OLDMOUSEDEV="$MOUSEDEV" #v411 old is now current mouse
 echo "$OLDMOUSEDEV" >/etc/oldmousedevice #v411
fi

#v408 k2.6.25.16 has serial driver as a module...
[ "`grep 'ttyS' /etc/mousedevice`" ]       && modprobe $Q $VERB -b sermouse
#v411 precaution...
[ "`grep 'input/mice' /etc/mousedevice`" ] && modprobe $Q $VERB -b usbhid

#ask about scrollwheel... DO NOT ASK, ASSUME YES...
if [ ! -f /etc/mousebuttons ];then
 #dialog --yesno "Do you have a wheel/scroll type of mouse?" 0 0
 #if [ $? -eq 0 ];then
  echo "5" >/etc/mousebuttons
  echo -e "The file /etc/mousebuttons has been created, with content \"5\"."
  if [ -f /etc/X11/xorg.conf ];then
   cat /etc/X11/xorg.conf | tr -s '#' | sed -e 's/#Option\W\+"ZAxisMapping"\W\+"4 5"/Option      "ZAxisMapping" "4 5"/g' >/tmp/xorg.conf.tmp
   _sync
   cp -f $VERB /tmp/xorg.conf.tmp /etc/X11/xorg.conf
  fi
 else
  __set_to_three_buttons__(){
  echo "3" >/etc/mousebuttons
  echo -e "...you chose \"no\"."
  echo -e "The file /etc/mousebuttons has been created, with content \"3\"."
  if [ -f /etc/X11/xorg.conf ];then
   cat /etc/X11/xorg.conf | sed -e 's/Option\W\+"ZAxisMapping"\W\+"4 5"/#Option      "ZAxisMapping" "4 5"/g' | tr -s '#' >/tmp/xorg.conf.tmp
   sync
   cp -f $VERB /tmp/xorg.conf.tmp /etc/X11/xorg.conf
  fi
  }
#fi
fi

test -d /dev/input || mkdir -p /dev/input
test -c /dev/input/mice || { rm $VERB -rf /dev/input/mice; mknod /dev/input/mice c 13 63; }
if [ ! -f /etc/mousedevice ]; then
 echo "input/mice" >/etc/mousedevice
 #ln -snf input/mice /dev/mouse
elif [ "`cat /etc/mousedevice`" = "psaux" ]; then
 echo "input/mice" >/etc/mousedevice
fi

read MOUSEDEVICE_ </etc/mousedevice
ln -sf $MOUSEDEVICE_ /dev/mouse

__load_agp_driver__(){
#rc.modules now does this...
#v2.0.0 load correct -agp driver...
AGPDRIVER="`findhostbridge`" #in /usr/sbin.
if [ "$AGPDRIVER" != "" ];then
 [ "`lsmod | grep "${AGPDRIVER}"`" = "" ] && modprobe $Q $VERB -b "$AGPDRIVER" 2>>$ERR
fi
#note, could write $AGPDRIVER to /etc/modprobe.preload to load it at kernel boot.
#note, it also loads agpgart.ko.
}


#v2.11 find out if xorg video drvr exists, else use xorg vesa...
if [ -f /usr/bin/Xorg ];then  #100
 if [ -f /etc/X11/xorg.conf ];then #110
  #find location of video chip drivers...
  SPECVESA="`find /usr/lib -xdev -type f -name vesa_drv.so | head -n1`"

  if [ "$SPECVESA" ];then #120
   DRVRSPATH="`dirname $SPECVESA`"
   #get current driver...
   DRVRCURR=`grep -v '^[[:blank:]]*#' /etc/X11/xorg.conf |grep -m 1 '#card0driver' | cut -f 2 -d '"'`

   if [ "$DRVRCURR" ];then #130
    #if [ ! -f $DRVRSPATH/${DRVRCURR}_drv.so ];then
    #one driver is mtx_drv.o hmmm, okay do it this way (pakt)...
    ls -1 $DRVRSPATH/* | grep $DRVRCURR >>$OUT

    if [ $? -ne 0 ];then #140
     aPATTERN="s/.*#card0driver/        Driver      \"vesa\" #card0driver/g"
     echo "defaulting to Xorgs simple vesa driver"
     cat /etc/X11/xorg.conf | sed -e "$aPATTERN" >/tmp/xorg.conf.tmp2
     _sync
     cp $VERB -f /tmp/xorg.conf.tmp2 /etc/X11/xorg.conf
    fi #140
   fi  #130
  fi   #120
 fi    #110
fi     #100

#Puppy Xorg Video Wizard...
if [ -f /usr/bin/Xorg ];then

 if [ -f /etc/X11/xorg.conf ];then

  if [ "`readlink /usr/bin/X`" = "Xorg" ];then
   __do_ddc_probe(){
   #v2.13 video hardware profile (must be same as in xorgwizard)...
   DDCPROBE="`ddcprobe`"
   #v2.17 patch from Nightflyer... as in xwin, may have to run ddcprobe twice...
   case "`echo "$DDCPROBE"`" in
    *edidfail*)
     sleep 1
     DDCPROBE="`ddcprobe`"
    ;;
   esac
   }
   __get_chip_profile(){
   PROFILECHIP="`echo "$DDCPROBE" | grep '^oem: ' | head -n 1 | cut -f 2-4 -d ' ' | tr ' ' '_' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
   }
   __get_monitor_profile(){
   #PROFILEMONITOR="`echo "$DDCPROBE" | grep -E '^monitorrange: |^monitorid: |^eisa: ' | head -n 1 | cut -f 2 -d ':' | sed -e 's/ //g' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
   #v3.95 'eisa:' and 'id:' return fluctuating values on some PCs, so search in this order...
   PROFILEMONITOR="`echo "$DDCPROBE" | grep '^monitorid: ' | head -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
    [ "$PROFILEMONITOR" = "" ] && PROFILEMONITOR="`echo "$DDCPROBE" | grep '^monitorname: ' | head -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
    [ "$PROFILEMONITOR" = "" ] && PROFILEMONITOR="`echo "$DDCPROBE" | grep '^monitorrange: ' | head -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
   #[ "$PROFILEMONITOR" = "" ] && PROFILEMONITOR="`echo "$DDCPROBE" | grep '^dtiming: ' | tail -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
   #100501 remove, gives random data on one of my monitors...
   #[ "$PROFILEMONITOR" = "" ] && PROFILEMONITOR="`echo "$DDCPROBE" | grep '^manufacture: ' | tail -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
   #[ "$PROFILEMONITOR" = "" ] && PROFILEMONITOR="`echo "$DDCPROBE" | grep '^eisa: ' | head -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
   }

_do_ddcprobe(){
#want to choose a resolution and color-depth...
##sometimes get bogus '1x' or '0x' pixel horiz resolution...
#DDCPROBE="`ddcprobe | grep -v 'timing: [0123456789]x'`"
#DDCPROBE="`ddcprobe`"
ddcprobe >"$TMP_DIR"/ddcprobe.txt
#weird (ddcprobe is very weird), on some hardware, edid monitor probe fails
#every alternate run of ddcprobe...
case "`cat "$TMP_DIR"/ddcprobe.txt`" in *edidfail*)
 sleep 1
 ddcprobe >"$TMP_DIR"/ddcprobe.txt
 ;;
esac
}
_do_ddcprobe
_get_chip_profile_(){
#v2.13 want a hardware profile so can bootup on different PCs...
PROFILECHIP="`grep -m1 '^oem: ' "$TMP_DIR"/ddcprobe.txt | cut -f 2-4 -d ' ' | tr ' ' '_' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
}
_get_chip_profile(){
#v2.13 want a hardware profile so can bootup on different PCs...
PROFILECHIP="`grep -m1 '^oem: ' "$TMP_DIR"/ddcprobe.txt | cut -f 2- -d ' ' | tr -d '[:blank:]' | sed 's/[^0-9a-zA-Z]/_/g' | tr -s '_'`"
[ "$PROFILECHIP" ] || PROFILECHIP='UnknownChip'
}
_get_monitor_profile_(){
## Dougal: maybe add "^monitorname: "??
#PROFILEMONITOR="`grep -E -m1 '^monitorrange: |^monitorid: |^eisa: ' "$TMP_DIR"/ddcprobe.txt | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
#v3.95 'eisa:' and 'id:' return fluctuating values on some PCs, so search in this order...
PROFILEMONITOR="`grep '^monitorid: ' "$TMP_DIR"/ddcprobe.txt | head -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
[ "$PROFILEMONITOR" ] || PROFILEMONITOR="`grep '^monitorname: '  "$TMP_DIR"/ddcprobe.txt | head -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
[ "$PROFILEMONITOR" ] || PROFILEMONITOR="`grep '^monitorrange: ' "$TMP_DIR"/ddcprobe.txt | head -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
#[ "$PROFILEMONITOR" = "" ] && PROFILEMONITOR="`grep '^dtiming: ' "$TMP_DIR"/ddcprobe.txt | tail -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
#100501 remove, gives random data on one of my monitors...
#[ "$PROFILEMONITOR" = "" ] && PROFILEMONITOR="`grep '^manufacture: ' "$TMP_DIR"/ddcprobe.txt | tail -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
#[ "$PROFILEMONITOR" = "" ] && PROFILEMONITOR="`grep '^eisa: ' "$TMP_DIR"/ddcprobe.txt | head -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
}
_get_monitor_profile(){
## Dougal: maybe add "^monitorname: "??
#PROFILEMONITOR="`grep -E -m1 '^monitorrange: |^monitorid: |^eisa: ' "$TMP_DIR"/ddcprobe.txt | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
#v3.95 'eisa:' and 'id:' return fluctuating values on some PCs, so search in this order...
                          PROFILEMONITOR="`grep '^monitorid: '    "$TMP_DIR"/ddcprobe.txt | head -n 1 | cut -f 2 -d ':' | tr -d '[:blank:]' | sed 's/[^0-9a-zA-Z]/_/g' | tr -s '_'`"
 [ "$PROFILEMONITOR" ] || PROFILEMONITOR="`grep '^monitorname: '  "$TMP_DIR"/ddcprobe.txt | head -n 1 | cut -f 2 -d ':' | tr -d '[:blank:]' | sed 's/[^0-9a-zA-Z]/_/g' | tr -s '_'`"
 [ "$PROFILEMONITOR" ] || PROFILEMONITOR="`grep '^monitorrange: ' "$TMP_DIR"/ddcprobe.txt | head -n 1 | cut -f 2 -d ':' | tr -d '[:blank:]' | sed 's/[^0-9a-zA-Z]/_/g' | tr -s '_'`"
#[ "$PROFILEMONITOR" ] || PROFILEMONITOR="`grep '^dtiming: '      "$TMP_DIR"/ddcprobe.txt | tail -n 1 | cut -f 2 -d ':' | tr -d '[:blank:]' | sed 's/[^0-9a-zA-Z]/_/g' | tr -s '_'`"
#100501 remove, gives random data on one of my monitors...
#[ "$PROFILEMONITOR" = "" ] && PROFILEMONITOR="`grep '^manufacture: ' "$TMP_DIR"/ddcprobe.txt | tail -n 1 | cut -f 2 -d ':' | tr -d '[:blank:]' | sed 's/[^0-9a-zA-Z]/_/g' | tr -s '_'`"
#[ "$PROFILEMONITOR" = "" ] && PROFILEMONITOR="`grep '^eisa: '        "$TMP_DIR"/ddcprobe.txt | head -n 1 | cut -f 2 -d ':' | tr -d '[:blank:]' | sed 's/[^0-9a-zA-Z]/_/g' | tr -s '_'`"
 [ "$PROFILEMONITOR" ] || PROFILEMONITOR='UnknownMonitor'
}
    _get_chip_profile
    _get_monitor_profile
    HARDWAREPROFILE="${PROFILECHIP}-${PROFILEMONITOR}"
#   HARDWAREPROFILE="${PROFILECHIP}${PROFILEMONITOR}"
   #find out if current xorg.conf matches this profile...
   OLDPROFILE="`cat /etc/X11/xorg.conf | grep '^#PuppyHardwareProfile' | tail -n1 | cut -f 2 -d '=' | cut -f 1 -d ' '`"

   if [ "$OLDPROFILE" != "$HARDWAREPROFILE" ];then
    _notice "Video hardware change detected. If you think this is wrong, report."
    #video hardware has changed. either changed monitor or booting different PC.
    #same current xorg.conf as a profiled filename...
    mv $VERB -f /etc/X11/xorg.conf "/etc/X11/xorg.conf.${OLDPROFILE}"  ##xorg.conf does not exists anymore
    #if a previous profiled filename for new hardware, use that...
    [ -f "/etc/X11/xorg.conf.${HARDWAREPROFILE}" ] && cp $VERB -af "/etc/X11/xorg.conf.${HARDWAREPROFILE}" /etc/X11/xorg.conf
  else
   _info "Video hardware unchanged."
  fi

  fi ##readlink=Xorg

 fi ##-f /etc/X11/Xorg.conf

 if [ ! -f /etc/X11/xorg.conf ];then
  echo "Starting now xorgwizard because /etc/X11/xorg.conf does not exists"
  sleep 5s
  rm $VERB -f /var/lock/XLOADED  #not necessary, precaution.
  #1st dialog offers to use Xvesa...
  /usr/sbin/xorgwizard
  echo "Finished running xorgwizard through xwin"
  sleep 5s
  CURRENTX="`realpath /usr/bin/X`"
  [ -f "$CURRENTX" ] || _exit 1 "$CURRENTX is not a regular file."
  CURRENTX=${CURRENTX##*/}
  case "$CURRENTX" in *"Xvesa"*) exec xwin ;;esac #w482 need to restart xwin.
 fi

fi

if [ "$CURRENTX" = "Xvesa" ];then #0.9.9
 #/tmp/videomode exists if starting X with new video test mode...
 if [ -e /tmp/videomode ];then
  cat /tmp/videomode | grep $Q " 800x600"
  if [ $? -eq 0 ];then #=0 if found.
   if [ -e /tmp/Xflag ];then
    #we have just attempted 800x600x16 and aborted with ctrl-alt-backspace
    #so have failed.
    echo "An attempt has just been made to run X at 800x600x16 but it has"
    echo "not worked (or it did but you did not press the OK button in the"
    echo "Video-wizard). It is not feasible to run Puppy at any lower resolution"
    echo -e "or color. If you want to try again, type \"xwin\" at the prompt."
    echo "It may be helpful to look in /tmp/xerrs.txt for error messages"
    rm $VERB -f /tmp/videomode
    rm $VERB -f /tmp/Xflag
    echo "0x0111 640x480x16" >/etc/videomode #desparate.
    exit 0
   else
    #flag to prevent endless loop X restarting...
    touch /tmp/Xflag
    #...pressing a button in video-wizard removes this file.
    #...however, aborting X will leave it in existence.
   fi
  fi
 fi
 #/tmp/videomode exists if starting X with new video test mode...
 if [ -e /tmp/videomode ];then
  #stored in format "0x0111 640x480x16"
  VIDMODE="`cat /tmp/videomode | cut -f 1 -d ' '`"
  VIDSCRN="`cat /tmp/videomode | tr -s ' ' | cut -f 2 -d ' '`"
 else
  #stored in format "0x0111 640x480x16"
  VIDMODE="`cat /etc/videomode | cut -f 1 -d ' '`"
  VIDSCRN="`cat /etc/videomode | tr -s ' ' | cut -f 2 -d ' '`"
 fi
fi

MOUSEBUTTONS=3
if [ -e /etc/mousebuttons ];then
 read MOUSEBUTTONS </etc/mousebuttons
fi
#v2.02 fix bug discovered by Dougal...
if [ "$MOUSEBUTTONS" -eq 2 ];then
 #the problem is, if /etc/xextraoptions has '-2button' which turns on middle-button
 #emulation, if leave MOUSEBUTTONS=2 then the right button does not work.
 #have to pass '3' to Xvesa, meaning effectively 3 buttons available...
 [ "`cat /etc/xextraoptions | grep ' \-2button'`" ] && MOUSEBUTTONS=3
fi

#0.9.8
XEXTRAOPTIONS=""
if [ -e /etc/xextraoptions ];then
 read XEXTRAOPTIONS </etc/xextraoptions
fi

#v424 bad hack, i somehow get /dev/mouse pointing to psaux when chose a serial mouse, don't know why...
#[ "`grep 'ttyS' /etc/mousedevice`" != "" ] && ln -snf $MOUSEDEV /dev/mouse

#100520 attempt fix keyboard layout not getting updated...
[ -f /etc/keymap ]          || echo "us" >/etc/keymap #maybe lupu needs this.
[ -f /etc/keymap_previous ] || echo "us" >/etc/keymap_previous

read KEYMAPNOW </etc/keymap
read KEYMAPPREV </etc/keymap_previous

if [ "$KEYMAPNOW" != "$KEYMAPPREV" ];then
 cp -f $VERB /etc/keymap /etc/keymap_previous
 #100520 bring this code back again...
 #100215 moved this code to /usr/sbin/input-wizard, avoid automatic overwriting of any user edit of xorg.conf...
 #100127 make sure xorg keyboard layout matches console setting (same code in xorgwizard)...
 if [ "$CURRENTX" = "Xorg" ];then
  xCONSKEYMAP="`cut -c 1-2 /etc/keymap`"
  [ "$xCONSKEYMAP" = "" ] && xCONSKEYMAP="us"
  case $xCONSKEYMAP in
   az) XKEYMAP="fr" ;;     #azerty
   wa) XKEYMAP="fr" ;;     #wangbe
   dv) XKEYMAP="dvorak" ;; #dvorak
   cr) XKEYMAP="cz" ;;     #croat
   sl) XKEYMAP="si" ;;     #slovene v2.12 bugfix, changed from 'sk' to 'si' (sk is slovakia)
   sv) XKEYMAP="se" ;;     #sweden
   uk) XKEYMAP="gb" ;;     #united kingdom
   *)  XKEYMAP="$xCONSKEYMAP" ;;
  esac
  if [ -d /etc/X11/xkb/symbols/pc ];then #100127 fallback...
   if [ ! -f /etc/X11/xkb/symbols/pc/${XKEYMAP} ];then
    if [ ! -f /etc/X11/xkb/symbols/${XKEYMAP} ];then
     echo "ERROR: Console keyboard `cat /etc/keymap` no matching Xorg layout. PLEASE REPORT TO BK"
     XKEYMAP='us'
    fi
   fi
  fi
  currXKEYMAP=`grep '#xkeymap0' /etc/X11/xorg.conf | tr '\t' ' ' | tr -s ' ' | cut -f 4 -d '"'`
  if [ "$currXKEYMAP" != "$XKEYMAP" ];then
   skPATTERN="s%.*#xkeymap0%    Option      \"XkbLayout\" \"${XKEYMAP}\" #xkeymap0%"
   sed -i -e "${skPATTERN}" /etc/X11/xorg.conf #100130
  fi
 fi
fi

__old_card0(){
# Xorg wants this :
test -d /dev/dri || mkdir $VERB -p /dev/dri
test -e /dev/dri/card0 || mknod /dev/dri/card0 c 226 0
test -c /dev/dri/card0 || {
 test -L /dev/dri/card0 && rm $VERB /dev/dri/card0 || {
 test -p /dev/dri/card0 && rm $VERB /dev/dri/card0 || {
 test -S /dev/dri/card0 && rm $VERB /dev/dri/card0 || {
 test -f /dev/dri/card0 && rm $VERB /dev/dri/card0 || {
 test -b /dev/dri/card0 && rm $VERB /dev/dri/card0 || {
 test -c /dev/dri/card0 && rm $VERB /dev/dri/card0 || {
 test -d /dev/dri/card0 && rm $VERB -r /dev/dri/card0; }; }; }; }; }; }
 mknod /dev/dri/card0 c 226 0
 }
}

#test -e /dev/card0 -a ! -e /dev/dri/card0 && { mkdir -p /dev/dri; cp -a $VERB /dev/card0 /dev/dri/; }

test -c /dev/dri/card0 || {
_secure_remove "/dev/dri/card0"
[ $? = 0 ] && {
 test -d /dev/dri || mkdir $VERB -p /dev/dri
 test "`ls -A /dev/dri`" || _secure_remove "/dev/dri"
 test -d /dev/dri || mkdir $VERB -p /dev/dri
 mknod /dev/dri/card0 c 226 0;
 } || {
_warn "Could not secure remove /dev/dri/card0"
 }
}

rm $VERB -f /tmp/wmexitmode.txt

# REM: Do 915resolution here, not in /etc/profile in case booted as pfix=nox
#       with different video setup
_get_since_epoch(){
read SINCE_EPOCH </sys/class/rtc/rtc0/since_epoch
echo "$SINCE_EPOCH" >&2
}
_get_etc_resolutionfix_access_time_since_epoch(){
ETC_RESO_FIX_ACC_TIME_SINCE_EPO=`stat -c %X /etc/resolutionfix`
echo "ETC_RESO_FIX_ACC_TIME_SINCE_EPO=$ETC_RESO_FIX_ACC_TIME_SINCE_EPO" >&2
}
_get_uptime_seconds(){
IFS='. ' read UPTIME_SECONDS ms RUNNING_SECONDS rms </proc/uptime
echo "UPTIME_SECONDS=$UPTIME_SECONDS" >&2
}

_uptime_since_epoch(){
 _get_since_epoch
 _get_uptime_seconds
echo $(( SINCE_EPOCH - UPTIME_SECONDS ))
}

_eval_etc_resolutionfix(){
LAST_BOOT=`_uptime_since_epoch`
echo "LAST_BOOT='$LAST_BOOT'" >&2
_get_etc_resolutionfix_access_time_since_epoch
if test $ETC_RESO_FIX_ACC_TIME_SINCE_EPO -le $LAST_BOOT; then
 # REM: Not accessed in this boot
 #[ -f /etc/resolutionfix ] && eval `cat /etc/resolutionfix`
 [ -f /etc/resolutionfix ] && { . /etc/resolutionfix; touch -a /etc/resolutionfix; }
fi

# REM: TODO modify time change

}
[ -f /etc/resolutionfix ] && _eval_etc_resolutionfix


#finally, start X...

XINIT_LOG=/tmp/xerrs.log
#XORG_LOG=  #Xorg -logfile option
#J_Rey had a good idea, flag XLOADED... and set to false on exit.
#but if PC hangs, XLOADED will still be true, so will know it is broken.
echo "true" >/var/lock/XLOADED

case $CURRENTX in
 Xvesa*)
  echo "Starting X with video mode $VIDMODE and mouse $MOUSEDEV..."
  #w479 older Xvesa server may not recognise the '-sp' option...
  if [ "`Xvesa -help 2>&1 | grep '^\-sp '`" = "" ];then
   SPOPTION=''
  else
   SPOPTION='-sp /usr/lib/xserver/SecurityPolicy'
  fi
  #startx $VIDMODE $MOUSEDEV >/tmp/xerrs.txt 2>&1
  #Puppy 0.8.4 no need for startx script...
  VIDFREQ="`echo -n "$VIDSCRN" | cut -f 4 -d "x"`"
  if [ ! "$VIDFREQ" ];then
   echo -e "\\033[0;32m""Xvesa VIDFREQ=$VIDFREQ : VIDMODE=$VIDMODE VIDSCRN=$VIDSCRN""\e[0;39m"
   sleep 5s
   echo "$VIDMODE" >/tmp/currentvideomode
   #w460 added -fp and -sp options...
   ##/usr/bin/xinit /root/.xinitrc -- -mode $VIDMODE $XEXTRAOPTIONS -fp /usr/share/X11/fonts/misc/,/usr/share/X11/fonts/TTF/,/usr/share/X11/fonts/Type1/ $SPOPTION >"$XINIT_LOG" 2>&1
   /usr/bin/xinit /root/.xinitrc -- -mode $VIDMODE $XEXTRAOPTIONS -mouse /dev/mouse,$MOUSEBUTTONS -fp /usr/share/X11/fonts/misc/,/usr/share/X11/fonts/TTF/,/usr/share/X11/fonts/Type1/ $SPOPTION >"$XINIT_LOG" 2>&1
  else
   #also, want to have adjustable frequency, VIDSCRN=widthxheightxdepthxfreq...
   echo -e "\\033[0;31m""Xvesa VIDSCRN=$VIDSCRN VIDMODE=$VIDMODE VIDFREQ=$VIDFREQ""\e[0;39m"
   echo "$VIDSCRN" >/tmp/currentvideomode
   ##/usr/bin/xinit /root/.xinitrc -- -screen $VIDSCRN $XEXTRAOPTIONS -fp /usr/share/X11/fonts/misc/,/usr/share/X11/fonts/TTF/,/usr/share/X11/fonts/Type1/ $SPOPTION >"$XINIT_LOG" 2>&1
   /usr/bin/xinit /root/.xinitrc -- -screen $VIDSCRN $XEXTRAOPTIONS -mouse /dev/mouse,$MOUSEBUTTONS -fp /usr/share/X11/fonts/misc/,/usr/share/X11/fonts/TTF/,/usr/share/X11/fonts/Type1/ $SPOPTION >"$XINIT_LOG" 2>&1
  fi
  ;;
 Xfbdev*)
  echo "Starting X with Xfbdev Kdrive X server, mouse $MOUSEDEV..."
  /usr/bin/xinit /root/.xinitrc -- -mouse /dev/mouse,$MOUSEBUTTONS >"$XINIT_LOG" 2>&1
  ;;
 Xi810*) #v1.0.7
  echo "Starting X with Xi810 Kdrive X server, mouse $MOUSEDEV..."
  #echo "(experimental, currently fixed to 1024x768x16x72 in /usr/bin/xwin)"
   /usr/bin/xinit /root/.xinitrc -- -screen $VIDSCRN -mouse /dev/mouse,$MOUSEBUTTONS >"$XINIT_LOG" 2>&1
  ;;
 XF86_SVGA*)
  echo "Starting X, specs in /etc/X11/XF86Config, startup apps /root/.xinitrc..."
  /usr/bin/xinit /root/.xinitrc -- -bpp 16 >"$XINIT_LOG" 2>&1
  ;;
 Xorg*)
  [ -f "$XINIT_LOG" ] && /bin/mv -f $VERB --backup=numbered "$XINIT_LOG" "$XINIT_LOG".prev
  echo "Starting X, specs in /etc/X11/xorg.conf, startup apps /root/.xinitrc..."
  #v2.11 G2 suggested -br for black background instead of checked...
  #w479 ***AWFUL HACK*** running pup 218, retro k2.6.18.8, my laptop, Xorg hangs
  #     if have '-nolisten tcp'. until find out why, this workaround...
  if [ "$KERNELVER" = "2.6.18.8" ];then
   /usr/bin/xinit /root/.xinitrc -- -br >"$XINIT_LOG" 2>&1
  else
   /usr/bin/xinit /root/.xinitrc -- -ignoreABI -br -nolisten tcp >"$XINIT_LOG" 2>&1
  fi
  ;;
 *)
  /usr/bin/xinit /root/.xinitrc --  >"$XINIT_LOG" 2>&1
  ;;
esac
#...if PC hung, run xorgwizard at next bootup (see further up).
if [ -z "`pidof X`" ] ; then
echo "false" >/var/lock/XLOADED #see note above.
fi

# REM: disabled for now since it kills acpid
#      and nothing seems to start scripts therein ...
_use_a_init_dir_to_unclutter_xinitrc_stop(){
for service in /root/Choices/XINIT/init.d/*;do
if [ -f $service -a -x $service ];then
$service stop
fi
done
}

if test "$DEBUG"; then
 if test -s "$XINIT_LOG"; then
  less "$XINIT_LOG"
 fi
fi

XWINCOUNT=$((XWINCOUNT-1))

echo 'Exited from X. Type "xwin [fvwm95|jwm]" to restart X ([ ] mean optional).'
echo '(To shutdown PC type "poweroff", to reboot PC type "reboot")'
if [ -f /usr/X11R7/bin/Xfbdev ];then
 echo '(To run the Xfbdev Framebuffer Wizard, type "framebufferwizard")'
fi
if [ "$CURRENTX" = "XF86_SVGA" ];then #v1.0.7
 echo -en "\\033[1;31m" #34=blue, 33=yellow, 32=green, 31=red, 35=purple, 36=aquablue, 38=black.
 echo 'If X failed to start, type "xf86config" to setup X'
 echo '  -- you will need to know type of mouse, keyboard and video chip'
 echo '  -- thix X is for pre-2000 video chips, but many recent chips backwards-compat.'
 echo '  -- accept default save /etc/XF86Config, Puppy will move this to /etc/X11'
 echo '  -- (XF86Config is the configuration file for X and can be edited manually)'
 echo -n '  -- LAST RESORT, drop back to Xvesa by typing "ln -sf Xvesa /usr/bin/X"'
 echo -e "\\033[0;39m"
fi
if [ "$CURRENTX" = "Xorg" ];then #v1.0.7
 echo -en "\\033[1;35m" #34=blue, 33=yellow, 32=green, 31=red, 35=purple, 36=aquablue, 38=black.
 echo -n 'If X failed to start, type "xorgwizard" to setup X'
 echo -e "\\033[0;39m"
fi

##w477 weird situation. first boot, xvesa, 'Exit to prompt', X restarts.
##because there are two instances of xwin running, but I don't see how.
##not the best, but here is a workaround...
#NUMXWINS=`pidof xwin | wc -w` #see above and below...

##if [ "$CURRENTX" = "Xvesa" ];then
 ##if [ -e /tmp/videomode ];then
 ##### echo '/tmp/videomode exists'
 #### ##exec xwin #restart X.
## fi
##fi

#Shutdown menu calls wmreboot, wmpoweroff, wmexit or restartwm, which create this file...
if [ -f /tmp/wmexitmode.txt ];then
 WMEXITMODE="`cat /tmp/wmexitmode.txt`"
 if [ "$WMEXITMODE" = "exit" ];then #see /usr/bin/wmexit.
  #[ $NUMXWINS -eq 1 ] && rm -f /tmp/wmexitmode.txt #w477 hack, see above.
  rm $VERB -f /tmp/wmexitmode.txt #w478
  exit
 fi
 #rm -f /tmp/wmexitmode.txt ...no, removed in rc.shutdown.
 [ "$WMEXITMODE" = "poweroff" ] && exec /sbin/poweroff #see /usr/bin/wmpoweroff
 [ "$WMEXITMODE" = "reboot" ]   && exec /sbin/reboot #see /usr/bin/wmreboot
 #restart window manager...
 #make a gross assumption, if wmexitmode.txt exists, haven't already exited this script, then want
 #to restart maybe with different window manager. /etc/windowmanager already has desired w.m.
 rm $VERB -f /tmp/wmexitmode.txt #definitely delete it now.
  #v1.0.5 thanks GuestToo for advice on this, works with chooselocale script...
  #NEWLANG="`cat /etc/profile | grep "LANG=" | cut -f 2 -d '='`"
  NEWLANG="`cat /etc/profile | grep '^[[:blank:]]*LANG=' | tail -n 1| cut -f 2 -d '='`" #w482 shinobar bugfix.
  if [ "$NEWLANG" ];then #precaution
   if [ "$NEWLANG" != "$LANG" ];then
    export LANG=$NEWLANG
   fi
  fi
 wmexit ##???
 sleep 2s
 exec xwin
fi

#the end#
# Very End of this file 'usr/bin/xwin' #
###END###
