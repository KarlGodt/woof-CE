#!/bin/sh --login
#
#
# common helper functions
. /etc/rc.d/f4puppy5
# BATCHMARKER01 - Marker for Line-Position to bulk insert code into.

echo "$0 start...:"
[ "$DEBUG" ] && ps |grep -v '\[' | tr -s '[[:blank:]]' | tr '\n' 'Â·'
[ "$DEBUG" ] && uptime

#(c) Copyright Barry Kauler 2003,2004,2005,2006,2007 www.puppylinux.com
#2007 Lesser GPL licence v2 (http://www.fsf.org/licensing/licenses/lgpl.html)
#v3.90 rawpup, update for Xvesa.
#v3.94, v3.95, recognise Classmate, EeePC laptops.
#v3.98 change to home directory.
#v3.98 forced reboot handling improved by pizzasgood.
#v3.99 automatically handle problematic video adapters that hang Xvesa.
#v405 added support for xvesa 1024x600.
#v408 BK k2.6.25.16 serial mouse driver now a module 'sermouse'.
#v411 rerwin: mouse improvements.
#w001 fixes for woof, /usr/X11R7 not used.
#w460 fixes to get Xvesa running with woof build. fix for X restart after exit.
#w477, w478 more fixes Xvesa restart after first 'Exit to prompt'.
#w479 older Xvesa server may not recognise '-sp' option.
#w479 k2.6.18.8 need awful hack, Xorg, '-nolisten tcp' causes hang!
#v424 bad hack to fix serial mouse.


PIDOFS=`pidof -o $$ -o %PPID xwin`
PIDOFS="${PIDOFS} "`pidof -o $$ -o %PPID xinit`
PIDOFS="${PIDOFS} `pidof -o $$ -o %PPID X`"
echo "PIDOFS=$PIDOFS'"
[[ "${PIDOFS//[[:blank:]]/}" ]] && {
    echo -e '\033[0;31m'"More than one instance of X running : $PIDOFS -- exiting."'\033[0;39m'
    exit
}
##+++2012-04-03

if [ -n "$DISPLAY" ]; then
 echo -e '\033[1;31m'"More than one instance of X running : $DISPLAY .Exiting."'\033[0;39m'
 xmessage -bg red "More than one instance of X running : $DISPLAY -- exit"
 exit
else
echo -e '\033[1;33m'"This script will run X windows for you..."'\033[0;39m'
fi

#echo '$HOME    : '"$HOME" > /dev/tty3 #DBG
#echo 'pwd      : '"`pwd`" > /dev/tty3 #DBG
if test "$HOME" != "/root"; then #KRG
cd ~/   #v3.98 Ensure current directory is root, in case changed at command prompt, so rox icon and menu item open only at home directory. rerwin
fi #KRG

#variables created at bootup by init script in initrd...
. /etc/rc.d/PUPSTATE #v2.02
#PUPMODE=current operating configuration,
#PDEV1=the partition have booted off, DEV1FS=f.s. of PDEV1,
#PUPSFS=pup_201.sfs versioned name, stored on PDEV1, PUPSAVE=vfat,sda1,/pup_save.3fs
#PMEDIA is a broad description of the boot media, ex "usbflash" or "idehd".

KERNELVER=`uname -r` #w479

#0.9.9 enables to start a specific w.m. from commandline...
#if [ "$@" ] && [ "`echo "$@" | tr ' ' '\n' | grep -v '^\-'`" = "" ];then
params0="$@"
params=`echo "$params0" | sed 's#-S[[:blank:]]*\(.*\)#-S=\1#g'`
wm=`echo "$params" | tr ' ' '\n' | grep -v '^\-' | grep -i -E 'jwm|xfce|fvwm|icewm|openbox|twm|blackbox' | tail -n1`
if [ -n "$wm" ]; then
 if [ -n "`which $wm 2>/dev/null`" ]; then
  echo "$wm" > /etc/windowmanager
  #note, /root/.xinitrc uses this file.
 fi
fi
serverName0=`echo "$params" | grep -w -E -e '\-S=.*|-*server=.*' | tail -n 1`
if [ ! -z "$serverName0" ]; then
serverName=`echo $serverName0 | cut -f 2 -d '=' | cut -f 1 -d ' '`
if [ ! -z "$serverName" ]; then
findServer=`find /usr/bin -name "$serverName"`

if [ ! -z "$findServer" ]; then
rm -f /usr/bin/X
ln $VERB -i -s "`basename $findServer`" /usr/bin/X

else
echo -e '\033[0;31m'"$serverName not found in /usr/bin directory ."'\033[0;39m'
sleep 3s
if [ -x /usr/bin/Xorg ]; then
echo "Defaulting to Xorg .."
rm -f /usr/bin/X
ln $VERB -s Xorg /usr/bin/X
sleep 3s
else
echo -e '\033[1;31m''WARNING : Xorg not found in the /usr/bin folder !''\033e0;39m'
echo -e '\033[0;35m''Please sort your Puppy installation''\033[0;39m'
exit
fi
fi
fi
fi

echo "`date` 1: passed checking for other instances of xwin running or parameters"
#v1.0.7
HAVEX=`readlink /usr/bin/X`
HAVEX=`basename $HAVEX`

if [ "$HAVEX" = "XF86_SVGA" ]; then
 #xf86config v3.3.6 creates config file at /etc, wrong place...
 [ -f /etc/XF86Config ] && mv $VERB -f /etc/XF86Config /etc/X11/XF86Config
fi

HAVEXvesa=''
HAVEXvesa=`echo $HAVEX | grep -v -E 'Xorg|XF86_SVGA|Xfbdev|Xvfb|Xfake|Xnest'`

#v3.90 expanded to auto run best video mode...
##if [ "$HAVEX" = "Xvesa" ];then #0.9.9
if [ "$HAVEXvesa" ]; then
 if [ ! -f /tmp/videomode -a ! -f /etc/videomode ]; then #v2.21  ##fresh boot /tmp/videomode does not exist
  ddcprobe >/tmp/ddcprobe.txt
  #weird (ddcprobe is very weird), on some hardware, edid monitor probe fails
  #every alternate run of ddcprobe...
  case "`cat /tmp/ddcprobe.txt`" in *edidfail*)
   sleep 1
   ddcprobe >/tmp/ddcprobe.txt
   ;;
  esac

#v3.99 begin
  if [ -f /etc/xorgoverrides ] && grep $Q -f /etc/xorgoverrides /tmp/ddcprobe.txt; then
   rm -f /var/run/XLOADED  #not necessary, precaution.
   #1st dialog offers to use Xvesa...
   /usr/sbin/xorgwizard
   HAVEX=`readlink /usr/bin/X`
    ##if test "`echo $HAVEX | grep '/'`" != ""; then
    HAVEX=`basename $HAVEX`
    ##fi
   [ "$HAVEX" = "Xorg" ] || exit   #go to command line if not Xorg
  fi
 fi
fi
#Repeat earlier tests in case Xserver now Xorg and to retain indentation levels.
##if [ "$HAVEX" = "Xvesa" ];then #0.9.9
if [ "$HAVEXvesa" ]; then
 BASEMODE=""
 if [ ! -f /tmp/videomode -a ! -f /etc/videomode ]; then #v2.21
#v3.99 end

  #v3.95 note code duplicated in xorgwizard, not efficient...
  #v3.94 detect if a Classmate PC laptop with 800x480 screen...
  #v3.97 improved method: CM=Classmate, 915=chip 10=generation#...
  [ "`dmidecode -s bios-version | grep '^CM91510'`" ] && echo 'timing: 800x480@60' >> /tmp/ddcprobe.txt
  #v3.95 recognise more special screens...
  DMIDECODE=`dmidecode`
  #recognise EeePC Asus laptop...
  [ "`echo "$DMIDECODE" | grep 'Product Name: 701'`" != "" ] && [ "`echo "$DMIDECODE" | grep 'Serial Number: EeePC'`" != "" ] && echo 'timing: 800x480@60' >> /tmp/ddcprobe.txt

  echo -e '\nIf initialization freezes here, press ctrl-c and type "xorgwizard",\nselect "Xorg", choose monitor type and choose video mode.'   #v3.99
  grep '^oem:' /tmp/ddcprobe.txt > /tmp/ddcprobeoem.txt   #v3.99 current adapter signature

  #get too many weird resolutions, maybe better just only allow these...
  #want widescreen/non-vesa resolutions only...
  VESAMODES=`$HAVEXvesa -listmodes 2>&1 | grep '^0x' | tr ':' ' ' | tr -s ' ' | cut -f 1,2 -d ' '`
  rm /tmp/ddcprobeoem.txt  #v3.99 didn't hang in Xvesa, so delete signature
  MONCHOICES=`grep -F 'timing:' /tmp/ddcprobe.txt | grep -E -v 'Apple|8514A|Mac II|\(XGA2\)' | grep -E ' 800x480@| 1024x600@| 1280x768@| 1280x800@| 1280x1024@| 1360x768@| 1400x1050@| 1440x900@| 1600x1200@| 1680x1050@| 1920x1080@| 1920x1200@' | cut -f 2 -d ' ' | sort -u`

  if [ "$MONCHOICES" ]; then  #1
   MONCUTXY=`echo "$MONCHOICES" | cut -f 1 -d '@' | tr '\n' ' '`

   #v2.21 code to handle widescreen with intel video chips...
   if [ ! -f /etc/resolutionfix ]; then ##2
    if grep -F 'oem:' /tmp/ddcprobe.txt | grep -F $Q 'Intel'; then  #3
     MISSINGXY=""
     for ONECUTXY in $MONCUTXY #ex: each field 1024x768
     do
      OPATTERN=" ${ONECUTXY}x"
      [ "`echo "$VESAMODES" | grep "$ONECUTXY"`" ] || MISSINGXY="$ONECUTXY"
     done
     if [ "$MISSINGXY" ]; then  #4
      MYXRES=`echo -n "$MISSINGXY" | cut -f 1 -d 'x'`
      MYYRES=`echo -n "$MISSINGXY" | cut -f 2 -d 'x'`
      915resolution 38 $MYXRES $MYYRES
      #...replaces mode 38 (1024x768).
      #create something for /etc/profile to execute at bootup...
      echo "915resolution 38 $MYXRES $MYYRES" > /etc/resolutionfix
      VESAMODES=`$HAVEXvesa -listmodes 2>&1 | grep '^0x' | tr ':' ' ' | tr -s ' ' | cut -f 1,2 -d ' '`
      PPATTERN=" ${MYXRES}x${MYYRES}x"
      #BASEMOD is res that we are going to start X with...
      BASEMODE=`echo "$VESAMODES" | grep "$PPATTERN" | grep -E 'x16$|x24$|x32$' | head -n 1`
     fi  #4
    fi  ##3
   fi  ##2
  ##end for Intel part
   #find out if there is just one native mode...
   if [ ! "$BASEMODE" ]; then
    #if [ "`echo "$MONCUTXY" | wc -l`" = "1" ];then
     QPATTERN=`echo "$MONCHOICES" | cut -f 1 -d '@' | tr '\n' '|'`
     BASEMODE=`echo "$VESAMODES" | grep -E "$QPATTERN" | grep -E 'x16$|x24$|x32$' | head -n 1`
    #fi
   fi

   if [ "$BASEMODE" ]; then
    echo "$BASEMODE" > /etc/videomode #no need for wizard after startup!
    rm -f /tmp/videomode  #w460 make sure can exit from X.
   fi
  fi  ##1
  ###end of MONCHOICES !not empty part
  ##Final Fallback :
  if [ ! "$BASEMODE" ]; then
   BASEMODE=`echo "$VESAMODES" | grep ' 800x600x16' | head -n 1`
   if [ "$BASEMODE" ]; then
    echo "$BASEMODE" > /tmp/videomode
   else
    echo "0x0111 640x480x16" > /tmp/videomode
    #...desparate, not a practical mode.
   fi
  fi
  ##End of final fallback
  rm -f /tmp/Xflag #precaution.
  #...if /tmp/videomode exists, video-wizard is started in ~/.xinitrc
  #...note, if /etc/videomode exists instead, normal X startup.

 fi

fi
echo "`date` 2: finished checking for HAVEXvesa"
#note, mouse and keyboard types are autodetected in /etc/rc.d/rc.local0 at every bootup,
#so /etc/mousedevice and /etc/keyboardtype have autodetected values in them
#(changeable by Mouse/Keyboard Wizard, but rc.local0 will override if interface not found).

#v411 restored after removal in v407...
#update xorg.conf if mouse has changed...
#MOUSEDEV="`cat /etc/mousedevice`" #autodetected in rc.sysinit
read MOUSEDEV </etc/mousedevice
#OLDMOUSEDEV="`cat /etc/oldmousedevice`" #set in rc.sysinit
read OLDMOUSEDEV </etc/oldmousedevice
if [ "$OLDMOUSEDEV" != "$MOUSEDEV" ]; then
 if [ ! "$OLDMOUSEDEV" = "nothing" ]; then #"nothing" on first boot.
  if [ -f /etc/X11/xorg.conf ]; then
   case `cat /etc/mousedevice | cut -c 1-4` in
    "inpu") #"input/mice", usb
     cat /etc/X11/xorg.conf | sed -e 's/\W\+Option\W\+"Protocol"\W\+"\(\(\w\+\/\w\+\)\|\(\w\+\)\)\W\+#mouse0protocol/   Option      "Protocol" "IMPS\/2" #mouse0protocol/g' > /tmp/xorg.conf.tmp2
     ;;
    "ttyS") #ttyS0,1,2,3, serial
     cat /etc/X11/xorg.conf | sed -e 's/\W\+Option\W\+"Protocol"\W\+"\(\(\w\+\/\w\+\)\|\(\w\+\)\)\W\+#mouse0protocol/   Option      "Protocol" "Microsoft" #mouse0protocol/g' > /tmp/xorg.conf.tmp2
     ;;
    *)
     cat /etc/X11/xorg.conf | sed -e 's/\W\+Option\W\+"Protocol"\W\+"\(\(\w\+\/\w\+\)\|\(\w\+\)\)\W\+#mouse0protocol/   Option      "Protocol" "auto" #mouse0protocol/g' > /tmp/xorg.conf.tmp2
     ;;
   esac
   sync
   cp $VERB -f /tmp/xorg.conf.tmp2 /etc/X11/xorg.conf
   sync
   rm -f /tmp/xorg.conf.tmp2
  fi
 fi
 OLDMOUSEDEV="$MOUSEDEV" #v411 old is now current mouse
 echo "$OLDMOUSEDEV" > /etc/oldmousedevice #v411
fi

#v408 k2.6.25.16 has serial driver as a module...
[ "`grep 'ttyS' /etc/mousedevice`" ] && modprobe sermouse
#v411 precaution...
[ "`grep 'input/mice' /etc/mousedevice`" ] && modprobe usbhid

#ask about scrollwheel... DO NOT ASK, ASSUME YES...
if [ ! -f /etc/mousebuttons ]; then
  echo "5" > /etc/mousebuttons
  echo 'The file /etc/mousebuttons has been created, with content "5" .'
  if [ -f /etc/X11/xorg.conf ]; then
   cat /etc/X11/xorg.conf | tr -s '#' | sed -e 's/#Option\W\+"ZAxisMapping"\W\+"4 5"/Option      "ZAxisMapping" "4 5"/g' > /tmp/xorg.conf.tmp
   sync
   cp $VERB -f /tmp/xorg.conf.tmp /etc/X11/xorg.conf
  fi
fi

echo "`date` 3: finished checking for mouse"

#v2.11 find out if xorg video drvr exists, else use xorg vesa...
if [ -f /usr/bin/Xorg -a -f /etc/X11/xorg.conf ]; then
  #find location of video chip drivers...
  DRVRCURR=`grep '#card0driver' /etc/X11/xorg.conf | grep -v '^[[:blank:]]*#' | tail -n1 | cut -f 2 -d '"'`
  SPECVESA=`/bin/find /usr/lib /usr/X11/lib -noleaf -xdev -type f -name vesa_drv.so`
  if [ "$SPECVESA" -a "$DRVRCURR" ]; then
   DRVRSPATH=`dirname $SPECVESA`
   #get current driver...
    #if [ ! -f $DRVRSPATH/${DRVRCURR}_drv.so ];then
    #one driver is mtx_drv.o hmmm, okay do it this way (pakt)...
    ls -1 $DRVRSPATH/* | grep -w "${DRVRCURR}_drv.so" >/dev/null
    if [ $? -ne 0 ]; then
     APATTERN="s/.*#card0driver/    Driver      \"vesa\" #card0driver/g"
     cat /etc/X11/xorg.conf | sed -e "$APATTERN" > /tmp/xorg.conf.tmp2
     sync
     cp $VERB -f /tmp/xorg.conf.tmp2 /etc/X11/xorg.conf
     echo "$0: NOTICE: '$DRVRCURR' not found in '$DRVRSPATH' ."
     echo "$0: NOTICE: Defaulting to use the generic 'vesa' driver."
    fi
  fi
fi

#Puppy Xorg Video Wizard...
if [ -f /usr/bin/Xorg ]; then
 if [ -f /etc/X11/xorg.conf ]; then
 RLX=`readlink /usr/bin/X`
 #if test "`echo $RLX | grep '/'`" != ""; then
    RLX=`basename $RLX`
    #fi
  if [ "$RLX" = "Xorg" ]; then

   #v2.13 video hardware profile (must be same as in xorgwizard)...
   DDCPROBE=`ddcprobe`
   #v2.17 patch from Nightflyer... as in xwin, may have to run ddcprobe twice...
   case "`echo "$DDCPROBE"`" in
    *edidfail*)
     sleep 1
     DDCPROBE=`ddcprobe`
    ;;
   esac
   PROFILECHIP=`echo "$DDCPROBE" | grep '^oem: ' | head -n 1 | cut -f 2-4 -d ' ' | tr ' ' '_' | sed -e 's/[^0-9a-zA-Z]/_/g'`
   #PROFILEMONITOR="`echo "$DDCPROBE" | grep --extended-regexp '^monitorrange: |^monitorid: |^eisa: ' | head -n 1 | cut -f 2 -d ':' | sed -e 's/ //g' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
#v3.95 'eisa:' and 'id:' return fluctuating values on some PCs, so search in this order...
PROFILEMONITOR="`echo "$DDCPROBE" | grep '^monitorid: ' | head -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
[ "$PROFILEMONITOR" ] || PROFILEMONITOR=`echo "$DDCPROBE" | grep '^monitorname: ' | head -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`
[ "$PROFILEMONITOR" ] || PROFILEMONITOR=`echo "$DDCPROBE" | grep '^monitorrange: ' | head -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`
#[ "$PROFILEMONITOR" = "" ] && PROFILEMONITOR="`echo "$DDCPROBE" | grep '^dtiming: ' | tail -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
[ "$PROFILEMONITOR" ] || PROFILEMONITOR=`echo "$DDCPROBE" | grep '^manufacture: ' | tail -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`
#[ "$PROFILEMONITOR" = "" ] && PROFILEMONITOR="`echo "$DDCPROBE" | grep '^eisa: ' | head -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"

   HARDWAREPROFILE="${PROFILECHIP}${PROFILEMONITOR}"
   #find out if current xorg.conf matches this profile...
   CURRENTPROFILE=`grep '^#PuppyHardwareProfile' /etc/X11/xorg.conf | tail -n1 | cut -f 2 -d '=' | cut -f 1 -d ' '`
   #CURRENTPROFILE=`tac /etc/X11/xorg.conf | grep -m1 '^#PuppyHardwareProfile' | cut -f 2 -d '=' | cut -f 1 -d ' '`
   if [ "$CURRENTPROFILE" != "$HARDWAREPROFILE" ]; then
    #video hardware has changed. either changed monitor or booting different PC.
    #same current xorg.conf as a profiled filename...
    mv $VERB -f /etc/X11/xorg.conf /etc/X11/xorg.conf.${CURRENTPROFILE}
    #if a previous profiled filename for new hardware, use that...
    [ -f /etc/X11/xorg.conf.${HARDWAREPROFILE} ] && cp -af /etc/X11/xorg.conf.${HARDWAREPROFILE} /etc/X11/xorg.conf
   fi
  fi
 fi
 if [ ! -f /etc/X11/xorg.conf ]; then
  rm -f /var/run/XLOADED  #not necessary, precaution.
  #1st dialog offers to use Xvesa...
  /usr/sbin/xorgwizard

  HAVEX=`readlink /usr/bin/X`
  #if test "`echo $HAVEX | grep '/'`" != ""; then
    HAVEX=`basename $HAVEX`
    #fi
  ##[ "$HAVEX" = "Xvesa" ] && exec xwin #w482 need to restart xwin.
  [ "$HAVEXvesa" ] && exec xwin
 fi
fi
echo "`date` 4: finished checking for Xorg"
#v1.0.7 J_Reys idea (see note further down)...
if [ -f /var/run/XLOADED ]; then
 #v3.98 improved handling by pizzasgood...
 if [ "`cat /var/run/XLOADED`" = "true" ]; then
  #last time X ran, PC hung and had to be rebooted...
  dialog --timeout 30 --title "Warning" --yes-label "Ignore" --no-label "Commandline" --yesno "X seems to have exited uncleanly the last time you ran Puppy.  This is usually because of an improper shutdown (such as a power failure), but may be because something is broken.

If it was just something like a power failure, wait for 30 seconds or choose <Ignore> for normal startup of X...

If there is a problem, such as X not working, choose <Commandline> to drop out to a commandline. There will then be further advice how to fix X...

If undecided, wait 30 seconds for normal startup of X..." 0 0
  if [ ! $? = 1 ]; then
    rm /var/run/XLOADED
  else
    echo -en '\033[1;31m' #34=blue, 33=yellow, 32=green, 31=red, 35=purple, 36=aquablue, 38=black.
    echo '
It seems that last time X ran, the computer hung and you had to reboot.
Have now dropped down to the commandline. If you want to run the Xorg
Video Wizard, type "xorgwizard", and after configuring /etc/X11/xorg.conf
(hopefully correctly this time!) type "xwin" to start X.'
    echo -e '\033[0;39m'
    rm -f /var/run/XLOADED #otherwise cannot start X.
    exit
  fi
 fi

fi
echo "`date` 5: finished checking for XLOADED"

##if [ "$HAVEX" = "Xvesa" ];then #0.9.9
if [ "$HAVEXvesa" ]; then
 #/tmp/videomode exists if starting X with new video test mode...
 if [ -e /tmp/videomode ]; then
  cat /tmp/videomode | grep " 800x600"
  if [ $? -eq 0 ]; then #=0 if found.
   if [ -e /tmp/Xflag ]; then
    #we have just attempted 800x600x16 and aborted with ctrl-alt-backspace
    #so have failed.
    echo "An attempt has just been made to run X at 800x600x16 but it has"
    echo "not worked (or it did but you did not press the OK button in the"
    echo "Video-wizard). It is not feasible to run Puppy at any lower resolution"
    echo "or color. If you want to try again, type \"xwin\" at the prompt."
    echo "It may be helpful to look in /tmp/xerrs.txt for error messages."
    rm -f /tmp/videomode
    rm -f /tmp/Xflag
    echo "0x0111 640x480x16" > /etc/videomode #desparate.
    exit 0
   else
    #flag to prevent endless loop X restarting...
    touch /tmp/Xflag
    #...pressing a button in video-wizard removes this file.
    #...however, aborting X will leave it in existence.
   fi
  fi
 fi
 #/tmp/videomode exists if starting X with new video test mode...
 if [ -e /tmp/videomode ]; then
  #stored in format "0x0111 640x480x16"
  VIDMODE=`cat /tmp/videomode | cut -f 1 -d ' '`
  VIDSCRN=`cat /tmp/videomode | tr -s ' ' | cut -f 2 -d ' '`
 else
  #stored in format "0x0111 640x480x16"
  VIDMODE=`cat /etc/videomode | cut -f 1 -d ' '`
  VIDSCRN=`cat /etc/videomode | tr -s ' ' | cut -f 2 -d ' '`
 fi
fi
echo "`date` 6: finished checking for HAVEXvesa"


MOUSEBUTTONS=3
if [ -e /etc/mousebuttons ]; then
 #MOUSEBUTTONS=`cat /etc/mousebuttons`
 read MOUSEBUTTONS </etc/mousebuttons
fi
#v2.02 fix bug discovered by Dougal...
if [ $MOUSEBUTTONS -eq 2 ]; then
 #the problem is, if /etc/xextraoptions has '-2button' which turns on middle-button
 #emulation, if leave MOUSEBUTTONS=2 then the right button does not work.
 #have to pass '3' to Xvesa, meaning effectively 3 buttons available...
 [ "`cat /etc/xextraoptions | grep ' \-2button'`" ] && MOUSEBUTTONS=3
fi

#0.9.8
XEXTRAOPTIONS=""
if [ -e /etc/xextraoptions ]; then
 #XEXTRAOPTIONS="`cat /etc/xextraoptions`"
 read XEXTRAOPTIONS </etc/xextraoptions
fi

#v424 bad hack, i somehow get /dev/mouse pointing to psaux when chose a serial mouse, don't know why...
[ "`grep 'ttyS' /etc/mousedevice`" ] && ln $VERB -snf $MOUSEDEV /dev/mouse

echo "`date` 7: finally start X"
#finally, start X...
#J_Rey had a good idea, flag XLOADED... and set to false on exit.
#but if PC hangs, XLOADED will still be true, so will know it is broken.
echo "true" > /var/run/XLOADED
echo "HAVEX='$HAVEX'"
case $HAVEX in
 #Xvesa|Xvesa*|Xnvidia|Xnvidia*|Xchips|Xephyr|Xepson|Xfake|Xfbdev|Xi810|Xmach64|Xmga|Xneomagic|Xnest|Xpm2|Xrt28|Xsdl|Xsmi|Xvfb|Xvia)
 Xvesa|Xvesa*|Xchips)

  echo "Starting X with video mode '$VIDMODE' and mouse '$MOUSEDEV' ..."
  #w479 older Xvesa server may not recognise the '-sp' option...
  if [ "`$HAVEXvesa -help 2>&1 | grep '^\-sp '`" = "" ]; then
   SPOPTION=''
  else
   SPOPTION='-sp /usr/lib/xserver/SecurityPolicy'
  fi
  #startx $VIDMODE $MOUSEDEV > /tmp/xerrs.txt 2>&1
  #Puppy 0.8.4 no need for startx script...
  VIDFREQ=`echo -n "$VIDSCRN" | cut -f 4 -d "x"`
  if [ ! "$VIDFREQ" ]; then
   echo "$VIDMODE" > /tmp/currentvideomode
   #w460 added -fp and -sp options...
   /usr/bin/xinit /root/.xinitrc -- -mode $VIDMODE $XEXTRAOPTIONS +kb -mouse /dev/mouse,$MOUSEBUTTONS -fp /usr/share/X11/fonts/misc/,/usr/share/X11/fonts/TTF/,/usr/share/X11/fonts/Type1/ $SPOPTION > /tmp/xerrs.$HAVEX.log 2>&1
   RETval1=$?
  else
   #also, want to have adjustable frequency, VIDSCRN=widthxheightxdepthxfreq...
   echo "$VIDSCRN" > /tmp/currentvideomode
   /usr/bin/xinit /root/.xinitrc -- -screen $VIDSCRN $XEXTRAOPTIONS +kb -mouse /dev/mouse,$MOUSEBUTTONS -fp /usr/share/X11/fonts/misc/,/usr/share/X11/fonts/TTF/,/usr/share/X11/fonts/Type1/ $SPOPTION > /tmp/xerrs.$HAVEX.log 2>&1
   RETval1=$?
  fi
  ;;
 Xfbdev)  ##no -mode option : Fatal server error:no screens found XIO:  fatal IO error 104 (Connection reset by peer) on X server ":0.0" after 0 requests (0 known processed) with 0 events remaining.

  echo "Starting X with Xfbdev Kdrive X server, mouse '$MOUSEDEV' ..."
  /usr/bin/xinit /root/.xinitrc -- -mouse /dev/mouse,$MOUSEBUTTONS > /tmp/xerrs.$HAVEX.log 2>&1
  RETval1=$?
  ;;
 Xi810) #v1.0.7
  echo "Starting X with Xi810 Kdrive X server, mouse '$MOUSEDEV' ..."
  #echo "(experimental, currently fixed to 1024x768x16x72 in /usr/bin/xwin)"
   /usr/bin/xinit /root/.xinitrc -- -screen $VIDSCRN -mouse /dev/mouse,$MOUSEBUTTONS > /tmp/xerrs.$HAVEX.log 2>&1
  RETval1=$?
  ;;
 XF86_SVGA)
  echo "Starting XF86_SVGA, specs in /etc/X11/XF86Config, startup apps /root/.xinitrc..."
  /usr/bin/xinit /root/.xinitrc -- -bpp 16 > /tmp/xerrs.$HAVEX.log 2>&1
  RETval1=$?
  ;;
 Xorg)
  echo "Starting Xorg, specs in /etc/X11/xorg.conf, startup apps /root/.xinitrc..."
  #v2.11 G2 suggested -br for black background instead of checked...
  #w479 ***AWFUL HACK*** running pup 218, retro k2.6.18.8, my laptop, Xorg hangs
  #     if have '-nolisten tcp'. until find out why, this workaround...
  if [ "$KERNELVER" = "2.6.18.8" ]; then
   /usr/bin/xinit /root/.xinitrc -- -br > /tmp/xerrs.$HAVEX.log 2>&1
  RETval1=$?
  else
   /usr/bin/xinit /root/.xinitrc -- -br -nolisten tcp > /tmp/xerrs.$HAVEX.log 2>&1
  RETval1=$?
  fi
  ;;
 Xephyr|Xnest) #Xephyr cannot open host display. Is DISPLAY set?
  /usr/bin/xinit /root/.xinitrc -- :1  > /tmp/xerrs.$HAVEX.log 2>&1
  RETval1=$?
  ;;
 Xfake) ##runs OK , .xinitrc gets sourced stopable by C+C|C+A+c|d ; does not create a X window environment
  /usr/bin/xinit /root/.xinitrc -- :0  > /tmp/xerrs.$HAVEX.log 2>&1
  RETval1=$?
  ;;
 Xvfb)  ## kind of ^fake^ driver
  /usr/bin/xinit /root/.xinitrc -- > /tmp/xerrs.$HAVEX.log 2>&1
  RETval1=$?
  ;;
 *)
 /usr/bin/xinit /root/.xinitrc -- > /tmp/xerrs.$HAVEX.log 2>&1
  RETval1=$?
  ;;
esac
RETval2=$?
echo "RETval1='$RETval1'"
echo "RETval2='$RETval2'"

echo "false" > /var/run/XLOADED #see note above.
#...if PC hung, run xorgwizard at next bootup (see further up).

fun_dump_xerrs_log(){
#echo "\$@='$@'"
#if [ -n "`echo "$@" | grep -E -e '\-v|\-*verbose'`" ]; then
 echo -e '\033[1;33m'"Dumping first and last 10 lines of /tmp/xerrs.$HAVEX.log:"'\033[0;39m'
 head -n 10 /tmp/xerrs.$HAVEX.log
 tail -n 10 /tmp/xerrs.$HAVEX.log
 echo
#fi
}
[ -n "`echo "$@" | grep -E -e '\-v|\-*verbose'`" ] && fun_dump_xerrs_log

exit_message_func(){
echo -e '\033[0;36m''Exited from X. Type "xwin [fvwm95|jwm]" to restart X ([ ] mean optional).''\033[0;39m'
echo '(To shutdown PC type "poweroff", to reboot PC type "reboot")'

if [ -f /usr/X11R7/bin/Xfbdev ]; then
 echo '(To run the Xfbdev Framebuffer Wizard, type "framebufferwizard")'
elif [ "$HAVEX" = "XF86_SVGA" ]; then #v1.0.7
 echo -en '\033[1;31m' #34=blue, 33=yellow, 32=green, 31=red, 35=purple, 36=aquablue, 38=black.
 echo 'If X failed to start, type "xf86config" to setup X'
 echo '  -- you will need to know type of mouse, keyboard and video chip'
 echo '  -- thix X is for pre-2000 video chips, but many recent chips backwards-compat.'
 echo '  -- accept default save /etc/XF86Config, Puppy will move this to /etc/X11'
 echo '  -- (XF86Config is the configuration file for X and can be edited manually)'
 echo -n '  -- LAST RESORT, drop back to Xvesa by typing "ln -sf Xvesa /usr/bin/X"'
 echo -e '\033[0;39m'
elif [ "$HAVEX" = "Xorg" ]; then #v1.0.7
 echo -en '\033[1;35m' #34=blue, 33=yellow, 32=green, 31=red, 35=purple, 36=aquablue, 38=black.
 echo -n 'If X failed to start, type "xorgwizard" to setup X'
 echo -e '\033[0;39m'
else
:
fi
}
##w477 weird situation. first boot, xvesa, 'Exit to prompt', X restarts.
##because there are two instances of xwin running, but I don't see how.

card_error_func(){
    #if [ -n "`grep -i -e 'No[[:blank:]]*matching[[:blank:]]*cards[[:blank:]]*found' /tmp/xerrs.log`" ] ; then
  if [ -n "`grep -i 'No matching cards found' /tmp/xerrs.$HAVEX.log`" ]; then
    echo -e '\033[0;31m'"'$HAVEX' could not detect the graphics card ."'\033[0;39m'
    fun_dump_xerrs_log
  elif test "`grep 'Screens found, but none have a usable configuration' /tmp/xerrs.$HAVEX.log`"; then
    echo -e '\033[0;31m'"'$HAVEX' could not configure the screen ."'\033[0;39m'
    fun_dump_xerrs_log
   if [ "$HAVEX" != "Xorg" ]; then
    if [ -x /usr/bin/Xorg ]; then
     rm /usr/bin/X
      ln $VERB -s Xorg /usr/bin/X
     echo "Defaulting to the Xorg X-server now ..."
    fi
   else
    echo "`scanpci`"
     echo -e '\033[0;35m'"Above is a list of detected cards on your pc ."'\033[0;39m'
     echo -e '\033[1;35m'"If even "'\033[0;39m'"`Xorg -version`"'\033[1;35m'" could not start correctly , you would need to try a Puppy with a later or newer Xorg ."'\033[0;39m'
     echo "Please reboot to another Operating System or poweroff ."
     echo "With best regards , the Puppy team ."
    exit
   fi
  fi
}

#Shutdown menu calls wmreboot, wmpoweroff, wmexit or restartwm, which create this file...
if [ -f /tmp/wmexitmode.txt ]; then
 #WMEXITMODE="`cat /tmp/wmexitmode.txt`"
 read WMEXITMODE </tmp/wmexitmode.txt
 if [ "$WMEXITMODE" = "exit" ]; then #see /usr/bin/wmexit.
  #[ $NUMXWINS -eq 1 ] && rm -f /tmp/wmexitmode.txt #w477 hack, see above.
  rm -f /tmp/wmexitmode.txt #w478
 echo 1
 exit_message_func
 exit

 elif [ "$WMEXITMODE" = "poweroff" ]; then  ## +++ 2011_10_31
 chvt 1
 exec /sbin/poweroff
 elif [ "$WMEXITMODE" = "reboot" ]; then
 chvt 1
 exec /sbin/reboot
 #restart window manager...
 #make a gross assumption, if wmexitmode.txt exists, haven't already exited this script, then want
 #to restart maybe with different window manager. /etc/windowmanager already has desired w.m.
 elif [ "$WMEXITMODE" = "xorgwizard" ]; then
  rm -f /tmp/wmexitmode.txt
  #sleep 3s
  ##exec xorgwizard  ##2011-10-03 later 1 still no go
  xorgwizard
  exit  ##2011-10-03 to fix exit of xorgwizard after first input [ Enter ]
 #echo 2
 elif [ "$WMEXITMODE" = "Xrestart" ]; then
  rm -f /tmp/wmexitmode.txt
  sleep 1s
  exec xwin
  exit ##2011-10-03 to fix crash ???
 fi
 #echo 3
  rm -f /tmp/wmexitmode.txt #definitely delete it now.

  card_error_func

 #v1.0.5 thanks GuestToo for advice on this, works with chooselocale script...
  #NEWLANG="`cat /etc/profile | grep "LANG=" | cut -f 2 -d '='`"
  NEWLANG=`cat /etc/profile | grep '^[[:blank:]]*LANG=' | tail -n 1| cut -f 2 -d '='` #w482 shinobar bugfix.
  if [ "$NEWLANG" ]; then #precaution
   if [ ! "$NEWLANG" = "$LANG" ]; then
    export LANG=$NEWLANG
   fi
  fi
echo 4
 exec xwin
fi
echo 5

if [ "$HAVEXvesa" ]; then
echo 6
 if [ -e /tmp/videomode ]; then
  card_error_func
  echo 7
  exec xwin #restart X.
 fi
fi

card_error_func

if [ -n "`which chvt`" ]; then
chvt 1
fi

exit_message_func
exit
#the end#
