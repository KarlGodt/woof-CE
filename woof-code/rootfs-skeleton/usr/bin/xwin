#!/bin/bash --login
#(c) Copyright Barry Kauler 2003,2004,2005,2006,2007 www.puppylinux.com
#2007 Lesser GPL licence v2 (http://www.fsf.org/licensing/licenses/lgpl.html)
#v3.90 rawpup, update for Xvesa.
#v3.94, v3.95, recognise Classmate, EeePC laptops.
#v3.98 change to home directory.
#v3.98 forced reboot handling improved by pizzasgood.
#v3.99 automatically handle problematic video adapters that hang Xvesa.
#v405 added support for xvesa 1024x600.
#v408 BK k2.6.25.16 serial mouse driver now a module 'sermouse'.
#v411 rerwin: mouse improvements.
#w001 fixes for woof, /usr/X11R7 not used.
#w460 fixes to get Xvesa running with woof build. fix for X restart after exit.
#w477, w478 more fixes Xvesa restart after first 'Exit to prompt'.
#w479 older Xvesa server may not recognise '-sp' option.
#w479 k2.6.18.8 need awful hack, Xorg, '-nolisten tcp' causes hang!
#v424 bad hack to fix serial mouse.

########################################################################
#
# Changes by Karl Reimer Godt
# ## NOT ANYMORE 01.0 : exec 2>"$tmpDIR"/log
# 02.0 : check for if X11 belongs to PATH
# 03.0 : added check if more than one instance of xwin running
#        moved the XLOADED part into it
# 04.0 : put ddcprobe into a function
#
#
# p1.0 : try to get into /root dir if $HOME='/'
# p2.0 : added several XVARS from /etc/profile
# p3.0 : create evtl. /etc/jwmrc.system
#
#
# /dev/sda5:
# LABEL="MacPup430_F3"
# UUID="07443de5-1fab-4656-a3ab-7b1c14ccc8c8"
# TYPE="ext3"
# DISTRO_VERSION=430·#481·#416·#218·#478······#####change·this·as·required#####
# DISTRO_BINARY_COMPAT="puppy"·#"ubuntu"·#"puppy"·#####change·this·as·required#####
# case·$DISTRO_BINARY_COMPAT·in
# puppy)·#built·entirely·from·Puppy·v2.x·or·v3.x·or·4.x·pet·pkgs.
# DISTRO_NAME="Puppy"
# DISTRO_FILE_PREFIX="pup"·#"ppa"·#"ppa4"·#"pup2"··#pup4··###CHANGE·AS·REQUIRED,·recommend·limit·four·characters###
# DISTRO_COMPAT_VERSION="4"·#"2"··#4·····###CHANGE·AS·REQUIRED,·recommend·single·digit·5,·4,·3,·or·2###
# ;;
# esac
# PUPMODE=2
# KERNVER=2.6.34.7-i486
# SATADRIVES='·sda'
# USB_SATAD='·sdb'
# PUP_HOME='/'
# Linux·puppypc·2.6.34.7-i486·#1·SMP·Mon·Dec·20·16:26:36·GMT-8·2010·i686·GNU/Linux
# Xserver=/usr/X11R7/bin/Xorg
# $LANG=en_US
# today=Thu·Oct·27·17:06:12·CEST·2011
#
# TODO1 : above kernel 2.6.34.7-i486 SMP
#         nvidiafb debug enabled ( as usual :( )
#         loaded with the many drivers
#
# nvidiafb               33722  1
# fb                     38510  8 fbcon,tileblit,bitblit,fbcon_cw,fbcon_ud,fbcon_ccw,softcursor,nvidiafb
# fb_ddc                  1159  1 nvidiafb
# backlight               2993  1 nvidiafb
# i2c_algo_bit            3813  1 nvidiafb
# cfbcopyarea             2649  1 nvidiafb
# vgastate                5550  1 nvidiafb
# cfbimgblt               1905  1 nvidiafb
# cfbfillrect             2485  1 nvidiafb
# fbcon                  28738  71
# fbdev                    557  1 fbcon
# tileblit                1611  1 fbcon
# font                    5050  1 fbcon
# bitblit                 3524  1 fbcon
# fbcon_rotate            1628  1 bitblit
# fbcon_cw                3846  1 fbcon_rotate
# fbcon_ud                3934  1 fbcon_rotate
# fbcon_ccw               3948  1 fbcon_rotate
# softcursor               895  4 bitblit,fbcon_cw,fbcon_ud,fbcon_ccw
# nvidiafb               33722  1
# fb                     38510  8 fbcon,tileblit,bitblit,fbcon_cw,fbcon_ud,fbcon_ccw,softcursor,nvidiafb
# fb_ddc                  1159  1 nvidiafb
# backlight               2993  1 nvidiafb
# i2c_algo_bit            3813  1 nvidiafb
# cfbcopyarea             2649  1 nvidiafb
# vgastate                5550  1 nvidiafb
# cfbimgblt               1905  1 nvidiafb
# cfbfillrect             2485  1 nvidiafb
# i2c_i801                6663  0
# intel_agp              21149  0
# agpgart                24088  1 intel_agp
#
# 01:00.0 030000 10DE:0182 <nvidiafb>
# 00:1f.5 040100 8086:2445 <Intel ICH>
# 00:1f.4 0C0300 8086:2444 <uhci_hcd>
# 00:1f.3 0C0500 8086:2443 <i801_smbus>
# 00:1f.2 0C0300 8086:2442 <uhci_hcd>
# 00:1f.1 010180 8086:244B <ata_piix>
# 00:1f.0 060100 8086:2440 <>
# 00:1e.0 060400 8086:244E <>
# 00:01.0 060400 8086:1A31 <>
# 00:00.0 060000 8086:1A30 <>
#
# Xorg would not run : nv and vesa[:out the range:]
# Xvesa did run ok , but to get any mouse to work [usb,ps2,serial] which i could not even by loading sermouse , psmouse
# or unloading usbkbd . Normal keyboard did not work 2 boots[needed modprobe atkbd manually], but 3.boot ..............
# Now , after running xorgwizard few times , even Xvesa did edidfail[card:ok,monitor:nothing]
#
# TODO2: add support for more arguments like -S|--xserver=Xorg -v -h -w ~FIXED
# TODO3: /tmp/wmexitmode.txt removal
#         plogout frontend_d [exitprompt is simple killall X]
#         frontend_d
#
# TODO4: basename was missing var
# TODO5: add echo 'exit' > $tmpDIR/wmexitmode.txt at X server closing
#
########################################################################

if test "`echo $PATH | grep 'X11'`" = ""; then
PATH="$PATH:/usr/X11R7/bin"
fi
. /etc/rc.d/f4puppy5

### CHDIR ###
#cd ~/   #v3.98 Ensure current directory is root, in case changed at command prompt, so rox icon and menu item open only at home directory. rerwin

[ "$HOME" = "/" ] && export HOME=/root;
_debug "HOME='$HOME'";
test "`pwd`" = "$HOME" || cd "$HOME"
### CHDIR ###

#variables created at bootup by init script in initrd or rc.sysinit...
. /etc/rc.d/PUPSTATE #v2.02
#PUPMODE=current operating configuration,
#PDEV1=the partition have booted off, DEV1FS=f.s. of PDEV1,
#PUPSFS=pup_201.sfs versioned name, stored on PDEV1, PUPSAVE=vfat,sda1,/pup_save.3fs
#PMEDIA is a broad description of the boot media, ex "usbflash" or "idehd".

KERNEL_RELEASE=`uname -r` #w479
Date_=`date +%F-%T`

tmpDIR='/tmp/xwin'  ##+++2011-11-05
mkdir $VERB -p "$tmpDIR"
[ "`whoami`" = "root" ] && {
    [ -d "$tmpDIR" ] && {
    chmod $VERB 0770 "$tmpDIR"
    chmod $VERB 0660 "$tmpDIR"/* 2>>$ERR
    }
}

# REM: In case of frugal install tmp does not get retained if poweroff
#       So no log files to view (Slacko5571 Xorg freezes)
#      Now want them in /var/log
stateDIR=/var
logDIR="$stateDIR/log/xwin"
mkdir $VERB -p "$logDIR"

#### BEGIN Ex /etc/profile part #######
#v2.10 MU: rox crashes with DRI modules. solution:
# libX11 env variables
export XLIB_SKIP_ARGB_VISUALS=1 #man XOpenDisplay , libX11/src/OpenDis.c
#XLIBBUFFERSIZE # #define XLIBDEFAULTBUFSIZE 16384 /* 16k */

#v2.02 rarsa provided this...
#freedesktop base directory spec: standards.freedesktop.org/basedir-spec/latest/
 # xserver/hw/xfree86/common/xf86Helper.c
 # xserver/include/xorg-config.h.in:#undef DEFAULT_XDG_DATA_HOME
 # xserver/hw/xfree86/man/xorg.conf.man
 # xserver/hw/xfree86/man/Xorg.man
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_DIRS=/usr/share:/usr/local/share
export XDG_CONFIG_DIRS=/etc/xdg #v2.14 changed from /usr/etc
export XDG_CACHE_HOME="$HOME/.cache"

#w468 'netpbm' utilities need to be told where rgb.txt is...
[ -f /usr/share/X11/rgb.txt ] && export RGBDEF=/usr/share/X11/rgb.txt
if [ ! -f /etc/system.jwmrc ]; then cp $VERB /root/.jwmrc /etc/system.jwmrc 2>>$ERR; fi
####  END  Ex /etc/profile part #######

XINIT_CLIENT=''
XINIT_CLIENT="$HOME/.xinitrc"
EXITCNT=0

alias modprobe='modprobe -b'  ##+++2012-02-03

###<KRG 2011-10-27>
debug(){
echo "$0: $@"
}

trap "exit 1" HUP INT QUIT KILL TERM

OUT=/dev/null;ERR=$OUT
[ "$DEBUG" ] && { OUT=/dev/stdout;ERR=/dev/stderr; }
[ "$DEBUG" = "2" ] && set -x
### INFO ###
Version='1.5.3-getopts Macpup_F3-Puppy-Linux-430/2 KRG'

usage(){
echo "
USAGE: $0 [OPTIONS] [windowmanager]

$2

Options:
-d) debug with 'set -x' .
-h) help to show this usage .
-v) verbose output .
-V) show version information .
-s SERVER) Xserver to use (ie: Xorg , Xvesa , Xchips) .
-w WMANGR) WindowManager to use (ie: jwm, openbox, icewm) .

Script to lauch the X desktop environment
with the X-Server by 'xinit' and the Window-Manager according to
the entries in 'HOME/.xinitrc' and '/etc/windowmanager' .
Also known in the Linux world as 'startx' .
"
exit $1
}

OUT=/dev/null;ERR=$OUT
Q='-q';QUIET=--quiet

for p_ in $@; do
case $p_ in
*help)    usage 0;;
*version) echo -e "\n$0: Version '$Version'\n"; exit 0;;
esac
done

while getopts hvVds:w: opt_; do
_debugx "opt_='$opt_'"
case $opt_ in
h) usage 0;;
v) VERBOSE='1';VERB='-v';L_VERB='--verbose';A_VERB='-verbose'
   DEBUG='1';  DBG='-d'; L_DBG='--debug';   A_DBG='-debug'
   Q='';           QUIET='';
   OUT=/dev/stdout;ERR=/dev/stderr
;;
V) echo -e "\n$0: Version '$Version'\n"; exit 0;;

s) XServer="$OPTARG"
   [ "$XServer" ] || usage 1 "Error: No XServer specified"
    if [ -z "`which $XServer`" ]; then
    usage 1 "'$XServer' not found in the PATH"
    else
     if [ ! -L /usr/bin/X ]; then
     usage 1 "/usr/bin/X is not a link"
     else
     rm $VERB -f /usr/bin/X
     ln $VERB -s "$XServer" /usr/bin/X
     fi
    fi
   XServerOK=`realpath /usr/bin/X`
   if [ -z "$XServerOK" ]; then
   usage 1 "The realpath command could not find the target '$XServer'"
   elif [ ! -x "$XServerOK" ]; then
    usage 1 "'$XServerOK' is not set executable"
   fi
;;
w) WINDOW_MANAGER="$OPTARG";_WM_="$WINDOW_MANAGER"
   [ "$_WM_" ] || usage 1 "No windowmanager specified"
   if [ -z "`which $WINDOW_MANAGER`" ]; then
   usage 1 "'$WINDOW_MANAGER' not found in the PATH"
   fi
;;
d) set -x;;
*) usage 1 "Unknown option '$opt'"
;;
esac; done

while [ "$2" ]; do #shift;done
case $1 in
-s[[:alnum:][:punct:]]?*|-w[[:alnum:][:punct:]]?*) shift;;
-s|-w) shift; shift;;
*)shift;;
esac; done
### INFO ###

### PARAMS ###
while [ "$2" ]; do shift; done
test "$1" && _debugx "\$1='$1'"
[ "$_WM_" ] || _WM_="$1"
### PARAMS ###


### NOX ###
##+++2012-05-02
if [ -f /var/lock/X.status ]; then

[ -f /etc/resolutionfix ] && eval `cat /etc/resolutionfix`

haveNOX=`grep -i 'nox' /var/lock/X.status`
rm $VERB -f /var/lock/X.status

 if [ "$haveNOX" ]; then
 _notice "'$haveNOX' in /var/lock/X.status. Exit."
 exit 0
 else
 ##+++2012-05-02

 :

 fi #nox
fi #/var/lock/X.status
##+++2012-05-02
### NOX ###



##+++2012-04-23
cat /dev/vcs1 >/tmp/vcs1xwin1.txt
echo -e "\n\n" >>/tmp/vcs1xwin1.txt
maxChars=`grep -E 'Console: switching to colour frame buffer device [0-9]+x[0-9]+' /var/log/bootkernel.log | tail -n1 | rev | cut -f1 -d' ' | rev | cut -f1 -dx`
if [ "$maxChars" ]; then
:
else
maxChars=80
fi
sed -i".orig" "s,\(.\{$maxChars\}\),\1\\n,g" /tmp/vcs1xwin1.txt
##+++2012-04-23

_debug "runlevel : '`runlevel`'";

### CHECK IF OBSTACLES FOR X ###
#NUMXWINS=`pidof xwin | wc -w` #w478
#[ $NUMXWINS -gt 1 ] && exit   #w478
[ "$DEBUG" ] && pidof -o %PPID -o $$ xwin
[ "$DEBUG" ] && busybox ps | grep -E `pidof -o %PPID -o $$ xwin | sed 's| |\||g;s|^\|||;s|\|$||'`
#DEBUGpidof -o %PPID xwin;#DEBUG
#DEBUGecho "was pidof -o %PPID xwin";#DEBUG
                 PID_OF_XWINS=`pidof -o %PPID -o $$ xwin`
 NUMXWINS=`echo $PID_OF_XWINS | wc -w`

[ "$NUMXWINS" -gt 1 ] && { echo "Seems xwin already running .Exit"; exit 10; }  #w478

if [ -n "$DISPLAY" ]; then ## || echo '$DISPLAY not empty exit now ' && echo "$DISPLAY" && exit #v2.11 from GuestToo.
 echo "DISPLAY not empty :'$DISPLAY'"
 echo "Exiting '$0' now."
exit 11
fi

if [ -n "`pidof xorgwizard`" ]; then
 echo "xorgwizard running. Exit."
exit 12
fi

if [ -n "`pidof xinit`" ]; then
 echo "xinit running. Exit."
exit 13
fi

if [ -n "`pidof X`" ]; then
 echo "X running. Exit."
exit 14
fi


echo -e "\\033[1;33m""This script will run X windows for you...""\\033[0;39m"


#0.9.9 enables to start a specific w.m. from commandline...
if [ "$_WM_" ]; then # 1.0
 echo "$_WM_" > /etc/windowmanager
 # Note: /root/.xinitrc and /usr/bin/wm* use this file.
fi # 1.0


##### BEGIN Ex /etc/profile X PART ##############
#v2.12
#xorgwizard creates this file, run once only...
if [ -f /tmp/bootcnt.txt ]; then
 [ -f /etc/resolutionfix ] && eval `cat /etc/resolutionfix`
fi
#####  END  Ex /etc/profile X PART ##############


#v1.0.7
X_SERVER=`readlink -qs /usr/bin/X`
_debug "X_SERVER='$X_SERVER'";

echo -e $Pink1"Lowlevel probing the video card and monitor..."$Reset0
_do_ddcprobe(){
_edebug $Red0"_do_ddcprobe";

# +++2014-11-11 strace seems to help segfauting ddcprobe
 if [ "`which strace`" ]; then
  DDCPROBE=`strace -o "$tmpDIR"/ddcprobe.strace_o ddcprobe`
 else
  DDCPROBE=`ddcprobe`
 fi
 echo "$DDCPROBE" > "$tmpDIR"/ddcprobe.txt

##+++2012-09-16 2014-11-11
[ -s "$tmpDIR"/ddcprobe.txt ] || { sleep 2;
 if [ "`which strace`" ]; then
  strace -o "$tmpDIR"/ddcprobe.strace_o2 ddcprobe >"$tmpDIR"/ddcprobe.txt
   else
  ddcprobe >"$tmpDIR"/ddcprobe.txt;
 fi
}
[ "`grep '[[:alnum:]]' "$tmpDIR"/ddcprobe.txt`" ] || { sleep 2;
 if [ "`which strace`" ]; then
  strace -o "$tmpDIR"/ddcprobe.strace_o2 ddcprobe >"$tmpDIR"/ddcprobe.txt
   else
  ddcprobe >"$tmpDIR"/ddcprobe.txt
 fi
}
##+++2012-09-16 2014-11-11

  sleep 2s
  case "`cat "$tmpDIR"/ddcprobe.txt`" in *edidfail*)
   _notice "ddcprobe failed to determine the monitor's edid";
   _info "Trying again..";
   sleep 1
   DDCPROBE=`ddcprobe`
   echo "$DDCPROBE" > "$tmpDIR"/ddcprobe.txt
   sleep 1s
   ;;
  esac

_get_edid(){
   which get-edid >>$OUT || return 0
which edid-decode >>$OUT || return 0
if [ ! -s "$tmpDIR"/ddcprobe.txt ]; then
get-edid 1>"$tmpDIR"/get-edid.out 2>"$tmpDIR"/get-edid-2.txt
[ "$?" = 0 ] || return 0
edid-decode "$tmpDIR"/get-edid.out >"$tmpDIR"/ddcprobe.txt
fi
}
_get_edid

if [ -n "`grep -i 'edidfail' "$tmpDIR"/ddcprobe.txt`" ]; then
 if ! grep $Q '^mode:' "$tmpDIR"/ddcprobe.txt; then
  echo -e $Red1"ddcprobe still failed to determine the video monitor.."$Reset0
  echo -e "Exiting $0 now."
  exit 20
 fi
fi
}
_do_ddcprobe

#### Begin XF86_SVGA part One ####
_edebug "\\033[0;31m""Begin XF86_SVGA part One""\\033[0;39m"
#if [ "$X_SERVER" = "XF86_SVGA" ]; then # 2.0
case "$X_SERVER" in *XF86_SVGA*)
 #xf86config v3.3.6 creates config file at /etc, wrong place...
 [ -f /etc/XF86Config ] && mv $VERB -f /etc/XF86Config /etc/X11/XF86Config
;;
esac
#fi # 2.0
_edebug "\\033[0;34m""End XF86_sVGA part One""\\033[0;39m"
#### End XF86_sVGA part One ####


#### Begin Xvesa part One ####
_edebug "\\033[0;31m""Begin Xvesa part One""\\033[0;39m"
#v3.90 expanded to auto run best video mode...
#if [ "$X_SERVER" = "Xvesa" ]; then #0.9.9 # 3.0
case "$X_SERVER" in *Xvesa*)
_debug "X_SERVER=Xvesa"
 if [ ! -f "$tmpDIR"/videomode -a ! -f /etc/videomode ]; then #v2.21 # 3.1.0
 _debug "001:Files $tmpDIR/videomode -a /etc/videomode do not exist";

#v3.99 begin
  if [ -f /etc/xorgoverrides ] && [ -n "`grep -f /etc/xorgoverrides $tmpDIR/ddcprobe.txt`" ]; then # 3.1.1.0
   _notice "Found to override graphics chips from /etc/xorgoverrides in $tmpDIR/ddcprobe.txt"
   rm $VERB -f /var/lock/XLOADED 2>>$ERR #not necessary, precaution.

__do_xorgwizard(){
   #1st dialog offers to use Xvesa...
   _notice "Starting now xorgwizard" && sleep 9s
   /usr/sbin/xorgwizard
}

   X_SERVER=`readlink -qs /usr/bin/X`
   case $X_SERVER in Xorg*) :;; *)
   echo "To start the Xorg server for Xvesa does not work for your hardware ,"
   echo "please run xorgwizard or type xwin (again)."
   echo "Exiting $0 now."
   exit 0  #go to command line if not Xorg
   ;;
   esac
  fi # 3.1.1.0
 fi # 3.1.0
;;
esac
#fi # 3.0


#Repeat earlier tests in case Xserver now Xorg and to retain indentation levels.
#if [ "$X_SERVER" = "Xvesa" ]; then #0.9.9 # 4.0
case "$X_SERVER" in *Xvesa*)
 BASEMODE=""
 if [ ! -f "$tmpDIR"/videomode -a ! -f /etc/videomode ]; then  ##fresh boot "$tmpDIR"/videomode does not exist#v2.21 # 4.1.0
  _notice "Files /etc/videomode and $tmpDIR/videomode do not exist"
  #v3.97 improved method: CM=Classmate, 915=chip 10=generation#...
  [ "`dmidecode -s bios-version | grep '^CM91510'`" != "" ] && echo 'timing: 800x480@60' >> "$tmpDIR"/ddcprobe.txt
  #v3.95 recognise more special screens...
  DMIDECODE=`dmidecode`
  #recognise EeePC Asus laptop...
  [ "`echo "$DMIDECODE" | grep 'Product Name: 701'`" != "" ] && [ "`echo "$DMIDECODE" | grep 'Serial Number: EeePC'`" != "" ] && echo 'timing: 800x480@60' >> "$tmpDIR"/ddcprobe.txt

  echo -e '\nIf initialization freezes here, press ctrl-c and type "xorgwizard",\nselect "Xorg", choose monitor type and choose video mode.'   #v3.99
  grep '^oem:' "$tmpDIR"/ddcprobe.txt > "$tmpDIR"/ddcprobeoem.txt   #v3.99 current adapter signature

  #get too many weird resolutions, maybe better just only allow these...
  #want widescreen/non-vesa resolutions only...
  VESAMODES=`Xvesa -listmodes 2>&1 | grep '^0x' | tr ':' ' ' | tr -s ' ' | cut -f 1,2 -d ' '`
  [ "$VERBOSE" ] || rm "$tmpDIR"/ddcprobeoem.txt  #v3.99 didn't hang in Xvesa, so delete signature
  #MONCHOICES=`grep -F 'timing:' "$tmpDIR"/ddcprobe.txt | grep -E -v 'Apple|8514A|Mac II|\(XGA2\)' | grep -E ' 800x480@| 1024x600@| 1280x768@| 1280x800@| 1280x1024@| 1360x768@| 1400x1050@| 1440x900@| 1600x1200@| 1680x1050@| 1920x1080@| 1920x1200@' | cut -f 2 -d ' ' | sort -u`
  MONCHOICES=`grep -oE -e '[0-9]+x[0-9]+@[0-9]+' "$tmpDIR"/ddcprobe.txt`
  if [ "$MONCHOICES" != "" ]; then # 4.1.1.0
   _debug '$MONOCHOICES='"$MONCHOICES"' and not empty'
   MONCUTXY=`echo "$MONCHOICES" | cut -f 1 -d '@' | tr '\n' ' '`

   #v2.21 code to handle widescreen with intel video chips...
   if [ ! -f /etc/resolutionfix ]; then # 4.1.1.1.0
    _info "File /etc/resolutionfix does not exists"
    if [ -n "`grep -F 'oem:' $tmpDIR/ddcprobe.txt | grep -F 'Intel'`" ]; then # 4.1.1.1.1.0
     _info "Found Intel oem: in $tmpDIR/ddcprobe.txt"
     MISSINGXY=""
     for oneCUT_XY in $MONCUTXY #ex: each field 1024x768
     do
      OPATTERN=" ${oneCUT_XY}x"
      [ "`echo "$VESAMODES" | grep "$oneCUT_XY"`" = "" ] && MISSINGXY="$oneCUT_XY"
     done
     if [ "$MISSINGXY" != "" ]; then # 4.1.1.1.1.1.0
      _debug '$MISSINGXY='"$MISSINGXY"' and not empty'
      MYXRES=`echo -n "$MISSINGXY" | cut -f 1 -d 'x'`
      MYYRES=`echo -n "$MISSINGXY" | cut -f 2 -d 'x'`
      915resolution 38 $MYXRES $MYYRES
      #...replaces mode 38 (1024x768).
      #create something for /etc/profile to execute at bootup...
      echo "915resolution 38 $MYXRES $MYYRES" > /etc/resolutionfix
      VESAMODES=`Xvesa -listmodes 2>&1 | grep '^0x' | tr ':' ' ' | tr -s ' ' | cut -f 1,2 -d ' '`
      PPATTERN=" ${MYXRES}x${MYYRES}x"
      #BASEMOD is res that we are going to start X with...
      BASEMODE=`echo "$VESAMODES" | grep "$PPATTERN" | grep -E 'x16$|x24$|x32$' | head -n 1`
     fi # 4.1.1.1.1.1.0
    fi  # 4.1.1.1.1.0
   fi   # 4.1.1.1.0

   #find out if there is just one native mode...
   if [ "$BASEMODE" = "" ]; then # 4.1.1.2.0
    _debug '$BASEMODE='"$BASEMODE"'= and (still) empty 1'
    if [ "`echo "$MONCUTXY" | wc -l`" = "1" ]; then # 4.1.1.2.1.0
     _debug '$MONCUTXY='"$MONCUTXY"'= and has exactly one newline'
     QPATTERN=" ${MONCUTXY}x"
     BASEMODE=`echo "$VESAMODES" | grep "$QPATTERN" | grep -E 'x16$|x24$|x32$' | head -n 1`
    fi # 4.1.1.2.1.0
   fi  # 4.1.1.2.0

   if [ "$BASEMODE" != "" ]; then # 4.1.1.3.0
    _debug '002:$BASEMODE='"$BASEMODE"'= and not empty'
    echo "$BASEMODE" > /etc/videomode #no need for wizard after startup!
    [ "$VERBOSE" ] || rm $VERB -f "$tmpDIR"/videomode 2>>$ERR #w460 make sure can exit from X.
   fi # 4.1.1.3.0
  fi  # 4.1.1.0

  if [ "$BASEMODE" = "" ]; then # 4.1.2.0
   _debug '003:$BASEMODE='"$BASEMODE"'= and (still) empty'
   BASEMODE=`echo "$VESAMODES" | grep ' 800x600x16' | head -n 1`
   if [ "$BASEMODE" != "" ]; then # 4.1.2.1.0
    _debug '004:$BASEMODE='"$BASEMODE"'= and not empty'
    echo "$BASEMODE" > "$tmpDIR"/videomode
   else # 4.1.2.1.0
    _debug '005:$BASEMODE='"$BASEMODE"'= and (still) empty'
    echo "0x0111 640x480x16" > "$tmpDIR"/videomode
    #...desparate, not a practical mode.
   fi # 4.1.2.1.0
  fi  # 4.1.2.0

  [ "$VERBOSE" ] || rm $VERB -f "$tmpDIR"/Xflag #precaution.
  #...if "$tmpDIR"/videomode exists, video-wizard is started in ~/.xinitrc
  #...note, if /etc/videomode exists instead, normal X startup.
 fi   # 4.1.0
;;
esac
#fi    # 4.0
_edebug "\\033[0;34m""End Xvesa part One""\\033[0;39m"
#### End Xvesa part One ####


#### Begin Xvesa part Two ####
_edebug "\\033[0;31m""Begin Xvesa part Two""\\033[0;39m"
#if [ "$X_SERVER" = "Xvesa" ]; then #0.9.9 # 10.0
case "$X_SERVER" in *Xvesa*)
 #"$tmpDIR"/videomode exists if starting X with new video test mode...
 if [ -e "$tmpDIR"/videomode ]; then # 10.1.0

  cat "$tmpDIR"/videomode | grep $Q " 800x600"
  if [ $? -eq 0 ]; then #=0 if found. # 10.1.1.0

   if [ -e "$tmpDIR"/Xflag ]; then # 10.1.1.1.0

    #we have just attempted 800x600x16 and aborted with ctrl-alt-backspace
    #so have failed.
    echo "An attempt has just been made to run X at 800x600x16 but it has
not worked (or it did but you did not press the OK button in the
Video-wizard). It is not feasible to run Puppy at any lower resolution
or color. If you want to try again, type \"xwin\" at the prompt.
It may be helpful to look in "$logDIR"/xerrs.log for error messages"
    [ "$VERBOSE" ] || rm $VERB -f "$tmpDIR"/videomode
    [ "$VERBOSE" ] || rm $VERB -f "$tmpDIR"/Xflag
    echo "0x0111 640x480x16" > /etc/videomode #desparate.
    exit 0 # exit Two
   else # 10.1.1.1.0
    #flag to prevent endless loop X restarting...
    touch "$tmpDIR"/Xflag
    #...pressing a button in video-wizard removes this file.
    #...however, aborting X will leave it in existence.
   fi # 10.1.1.1.0

  fi # 10.1.1.0
 fi # 10.1.0

 #"$tmpDIR"/videomode exists if starting X with new video test mode...
 if [ -e "$tmpDIR"/videomode ]; then # 10.2.0
  #stored in format "0x0111 640x480x16"
  VIDMODE=`cut -f1 -d' ' "$tmpDIR"/videomode`
  VIDSCRN=`tr -s ' ' <"$tmpDIR"/videomode | cut -f 2 -d ' '`
 else # 10.2.0
  #stored in format "0x0111 640x480x16"
  VIDMODE=`cut -f1 -d' ' /etc/videomode`
  VIDSCRN=`tr -s ' ' </etc/videomode | cut -f 2 -d ' '`
 fi # 10.2.0
;;
esac
#fi # 10.0
_edebug "\\033[0;34m""End Xvesa part Two""\\033[0;39m"
#### End Xvesa part Two ####


#### Begin mouse part One ###
_edebug "\\033[0;31m""Begin mouse part One""\\033[0;39m"
#note, mouse and keyboard types are autodetected in /etc/rc.d/rc.local0 at every bootup,
#so /etc/mousedevice and /etc/keyboardtype have autodetected values in them
#(changeable by Mouse/Keyboard Wizard, but rc.local0 will override if interface not found).

#v411 restored after removal in v407...
#update xorg.conf if mouse has changed...

read MOUSEDEV </etc/mousedevice #autodetected in rc.sysinit
read OLDMOUSEDEV </etc/oldmousedevice #set in rc.sysinit

if [ "$OLDMOUSEDEV" != "$MOUSEDEV" ]; then # 5.0

 if [ "$OLDMOUSEDEV" != "nothing" ]; then #"nothing" on first boot. # 5.1.0

  if [ -f /etc/X11/xorg.conf ]; then # 5.1.1.0

   case `cut -c 1-4 /etc/mousedevice` in
    "inpu") #"input/mice", usb
     _notice "input/mice, will change mouse0protocol to \"IMPS/2\""
     cat /etc/X11/xorg.conf | sed -e 's/\W\+Option\W\+"Protocol"\W\+"\(\(\w\+\/\w\+\)\|\(\w\+\)\)\W\+#mouse0protocol/   Option      "Protocol" "IMPS\/2" #mouse0protocol/g' > "$tmpDIR"/xorg.conf.tmp0; mRV=$?
     ;;
    "ttyS") #ttyS0,1,2,3, serial
     _notice "ttyS, will change mouse0protocol to \"Microsoft\""
     cat /etc/X11/xorg.conf | sed -e 's/\W\+Option\W\+"Protocol"\W\+"\(\(\w\+\/\w\+\)\|\(\w\+\)\)\W\+#mouse0protocol/   Option      "Protocol" "Microsoft" #mouse0protocol/g' > "$tmpDIR"/xorg.conf.tmp0; mRV=$?
     ;;
    *)
     _notice "Unknown device, will change mouse0protocol to \"auto\""
     cat /etc/X11/xorg.conf | sed -e 's/\W\+Option\W\+"Protocol"\W\+"\(\(\w\+\/\w\+\)\|\(\w\+\)\)\W\+#mouse0protocol/   Option      "Protocol" "auto" #mouse0protocol/g' > "$tmpDIR"/xorg.conf.tmp0; mRV=$?
     ;;
   esac
   if [ "$mRV" = 0 ]; then
    _sync
    _info "Copying $tmpDIR/xorg.conf.tmp0 /etc/X11/xorg.conf"
    cp $VERB -f "$tmpDIR"/xorg.conf.tmp0 /etc/X11/xorg.conf # CP new xorg.conf One
    [ $? = 0 ] && _info "Success replacing mouseprotocol in xorg.conf"
    [ "$VERBOSE" ] || rm $VERB -f "$tmpDIR"/xorg.conf.tmp0
   else
    _warn "Could not change mouse protocoll entry in xorg.conf"
   fi
  fi # 5.1.1.0
 fi # 5.1.0

 OLDMOUSEDEV="$MOUSEDEV" #v411 old is now current mouse
 echo "$OLDMOUSEDEV" > /etc/oldmousedevice #v411

fi # 5.0

#v408 k2.6.25.16 has serial driver as a module...
[ "`grep 'ttyS' /etc/mousedevice`" ] && modprobe $Q $VERB sermouse 2>>$ERR
#v411 precaution...
[ "`grep 'input/mice' /etc/mousedevice`" ] && modprobe $Q $VERB usbhid 2>>$ERR

#ask about scrollwheel... DO NOT ASK, ASSUME YES...
if [ ! -f /etc/mousebuttons ]; then # 6.0

 #dialog --yesno "Do you have a wheel/scroll type of mouse?" 0 0
 #if [ $? -eq 0 ];then
  echo "5" > /etc/mousebuttons
  _notice "The file /etc/mousebuttons has been created, with content \"5\" ."

  if [ -f /etc/X11/xorg.conf ]; then # 6.1.0
   cat /etc/X11/xorg.conf | tr -s '#' | sed -e 's/#Option\W\+"ZAxisMapping"\W\+"4 5"/Option      "ZAxisMapping" "4 5"/g' > "$tmpDIR"/xorg.conf.tmp1
   if [ $? = 0 ]; then
   _sync
   _info "Copying $tmpDIR/xorg.conf.tmp1 /etc/X11/xorg.conf"
   cp $VERB -f "$tmpDIR"/xorg.conf.tmp1 /etc/X11/xorg.conf # CP new xorg.conf Two
   [ $? = 0 ] && _info "Using 5 buttons in xorg.conf"
   [ "$DEBUG" ] || rm $VERB "$tmpDIR"/xorg.conf.tmp1
   else
    _warn "Could not set mouse buttons to \"5\" in xorg.conf"
   fi
  fi # 6.1.0

 #else # 6.0
 # echo -n "3" > /etc/mousebuttons
 # echo -e "...you chose \"no\"."
 # echo -e "The file /etc/mousebuttons has been created, with content \"3\"."
 # if [ -f /etc/X11/xorg.conf ];then
 #  cat /etc/X11/xorg.conf | sed -e 's/Option\W\+"ZAxisMapping"\W\+"4 5"/#Option      "ZAxisMapping" "4 5"/g' | tr -s '#' > "$tmpDIR"/xorg.conf.tmp1
 #  sync
 #  cp $VERB -f "$tmpDIR"/xorg.conf.tmp1 /etc/X11/xorg.conf # CP new xorg.conf Two
 # fi

fi # 6.0
_edebug "\\033[0;34m""End mouse part One""\\033[0;39m"
#### End mouse part One ####

#### Begin mouse part Two ####
_edebug "\\033[0;31m""Begin mouse part Two""\\033[0;39m"
MOUSEBUTTONS=3
if [ -e /etc/mousebuttons ]; then # 11.0
 read MOUSEBUTTONS </etc/mousebuttons
fi # 11.0
#v2.02 fix bug discovered by Dougal...
if [ "$MOUSEBUTTONS" -eq 2 ]; then # 12.0
 #the problem is, if /etc/xextraoptions has '-2button' which turns on middle-button
 #emulation, if leave MOUSEBUTTONS=2 then the right button does not work.
 #have to pass '3' to Xvesa, meaning effectively 3 buttons available...
 [ "`grep ' \-2button' /etc/xextraoptions`" ] && MOUSEBUTTONS=3
fi # 12.0

test -d /dev/input      || mkdir $VERB -p /dev/input
test -c /dev/input/mice || { rm $VERB -f /dev/input/mice; mknod /dev/input/mice c 13 63; }
test -L /dev/mouse      || ln $VERB -sf input/mice /dev/mouse

#0.9.8
XEXTRAOPTIONS=""
if [ -e /etc/xextraoptions ]; then # 13.0
 read XEXTRAOPTIONS </etc/xextraoptions
fi # 13.0

#v424 bad hack, i somehow get /dev/mouse pointing to psaux when chose a serial mouse, don't know why...
[ "`grep 'ttyS' /etc/mousedevice`" ] && ln $VERB -sf $MOUSEDEV /dev/mouse
_edebug "\\033[0;34m""End mouse part Two""\\033[0;39m"
#### End mouse part Two ####


#### Begin sound part ####
#now done in /etc/rc.d/rc.modules...
##alsa sound setup...
#### End sound part ####
#### Begin agpgart part ####
##v2.0.0 load correct -agp driver...
#AGPDRIVER=`findhostbridge` #in /usr/sbin.
##note, could write $AGPDRIVER to /etc/modprobe.preload to load it at kernel boot.
##note, it also loads agpgart.ko.
#### End agpgart part ####


#### Begin Xorg part One ####
_edebug "\\033[0;31m""Begin Xorg part One""\\033[0;39m"
#v2.11 find out if xorg video drvr exists, else use xorg vesa...
if [ -f /usr/bin/Xorg ]; then #-f /usr/bin/Xorg

 if [ -f /etc/X11/xorg.conf ]; then #-f xorg.conf

  case `readlink -qs /usr/bin/X` in Xorg*)
  #find location of video chip drivers...

  SPECVESA=`/bin/find -L /usr/lib /usr/X11/lib -xdev -type f -name vesa_drv.so | head -n1` #### was empty
  #### find /usr/ -noleaf -mount -type f -name vesa_drv.so would not be empty ####
  if [ "$SPECVESA" ]; then #vesa_drv.so available
   _debug "Found vesa driver at '$SPECVESA'"
   DRVRSPATH=`dirname "$SPECVESA"`
   #get current driver...
   DRVRCURR=`grep 'Driver .* #card0driver' /etc/X11/xorg.conf | grep -vE '^[[:blank:]]*#' | head -n1 | cut -f 2 -d '"'`

   if [ "$DRVRCURR" ]; then #driver entry in xorg.conf
    _info "Curent Xorg Driver entry is '$DRVRCURR'"
    #if [ ! -f $DRVRSPATH/${DRVRCURR}_drv.so ];then
    #one driver is mtx_drv.o hmmm, okay do it this way (pakt)...
    ls -1 $DRVRSPATH/* | grep -w "${DRVRCURR}_drv" >>$OUT
    RV=$?
    _debug "ls -1 $DRVRSPATH/* returned:$RV"
    if [ "$RV" -ne 0 ]; then #driver_not_in_dir
     _err "Could not list '$DRVRCURR' in '$DRVRSPATH'"
     _warn "Will replace '$DRVRCURR' in xorg.conf with \"vesa\""
     sedPATTERN="s/.*#card0driver/        Driver      \"vesa\" #card0driver/g"
     cat /etc/X11/xorg.conf | sed -e "$sedPATTERN" > "$tmpDIR"/xorg.conf.tmp2
     if [ $? = 0 ]; then
      _sync
      _info "Using vesa_drv.so:Copying $tmpDIR/xorg.conf.tmp2 /etc/X11/xorg.conf"
      cp $VERB -f "$tmpDIR"/xorg.conf.tmp2 /etc/X11/xorg.conf # CP new xorg.conf Three
      [ $? = 0 ] && _info "Done changing Driver entry in xorg.conf"
      [ "$DEBUG" ] || rm "$tmpDIR"/xorg.conf.tmp2
     else
      _warn "Could not change xorg.conf"
      _warn "Please look into $tmpDIR/xorg.conf.tmp2 for hints"
     fi
    fi #driver_not_in_dir
   fi #driver_entry_in_xorg.conf
  fi #vesa_drv.so available
 ;;
 esac
 fi #-f xorg.conf
fi #-f /usr/bin/Xorg
_edebug "\\033[0;34m""End of Xorg part One""\\033[0;39m"
#### End Xorg part One ####

#### Begin check for HW profile : Xorg part Two ####
_edebug "\\033[0;31m""Begin Xorg part Two""\\033[0;39m"
#Puppy Xorg Video Wizard...

if [ -f /usr/bin/Xorg ]; then #-f /usr/bin/Xorg
 if [ -f /etc/X11/xorg.conf ]; then #-f xorg.conf
 # if [ "`readlink -qs /usr/bin/X`" = "Xorg" ]; then #X->Xorg
  case `readlink -qs /usr/bin/X` in Xorg*)
   [ "$DDCPROBE" ] || DDCPROBE=`cat "$tmpDIR"/ddcprobe.txt`
   #PROFILECHIP=`echo "$DDCPROBE" | grep '^oem: ' | head -n 1 | cut -f 2-4 -d ' ' | tr ' ' '_' | sed -e 's/[^0-9a-zA-Z]/_/g'`
      PROFILECHIP=`echo "$DDCPROBE" | grep -m1 '^oem: '     |cut -f2  -d ' ' | sed 's/[[:punct:][:space:]]/_/g' | tr -s '[:punct:]'`
    PROFILEVENDOR=`echo "$DDCPROBE" | grep -m1 '^vendor: '  |cut -f2- -d ' ' | sed 's/[[:punct:][:space:]]/_/g' | tr -s '[:punct:]'`
   PROFILEPRODUCT=`echo "$DDCPROBE" | grep -m1 '^product: ' |cut -f2- -d ' ' | sed 's/[[:punct:][:space:]]/_/g' | tr -s '[:punct:]'`
      PROFILECHIP="${PROFILECHIP} ${PROFILEPRODUCT}"
   [ "${PROFILECHIP// /}" ] || PROFILECHIP=`_command lspci | grep -m1 -iE 'graph|vga|display' | cut -f3 -d':' | tr -s '[[:blank:]]' | sed 's%^ *%%;s% *$%%;s%[^[:alnum:]]%_%g'`
   [ "$PROFILECHIP" ] || PROFILECHIP=UnknownChip
#PROFILEMONITOR=`echo "$DDCPROBE" | grep -E '^monitorrange: |^monitorid: |^eisa: '  | head -n 1 | cut -f 2 -d ':' | sed -e 's/ //g' | sed -e 's/[^0-9a-zA-Z]/_/g'`
#v3.95 'eisa:' and 'id:' return fluctuating values on some PCs, so search in this order...
 PROFILEMONITOR=`echo "$DDCPROBE" | grep -iE '^monitorid: |^Monitor name: '         | head -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed 's/[^0-9a-zA-Z]/_/g' | tr -s '_'`
 [ "$PROFILEMONITOR" ] || PROFILEMONITOR=`echo "$DDCPROBE" | grep '^monitorname: '  | head -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed 's/[^0-9a-zA-Z]/_/g' | tr -s '_'`
 [ "$PROFILEMONITOR" ] || PROFILEMONITOR=`echo "$DDCPROBE" | grep '^monitorrange: ' | head -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed 's/[^0-9a-zA-Z]/_/g' | tr -s '_'`
#[ "$PROFILEMONITOR" ] || PROFILEMONITOR=`echo "$DDCPROBE" | grep '^dtiming: '      | tail -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed 's/[^0-9a-zA-Z]/_/g' | tr -s '_'`
 [ "$PROFILEMONITOR" ] || PROFILEMONITOR=`echo "$DDCPROBE" | grep '^manufacture: '  | tail -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed 's/[^0-9a-zA-Z]/_/g' | tr -s '_'`
#[ "$PROFILEMONITOR" ] || PROFILEMONITOR=`echo "$DDCPROBE" | grep '^eisa: '         | head -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed 's/[^0-9a-zA-Z]/_/g' | tr -s '_'`
 [ "$PROFILEMONITOR" ] || PROFILEMONITOR=UnknownMonitor

   #HARDWAREPROFILE="${PROFILECHIP}${PROFILEMONITOR}"
   CURRENT_HARDWAREPROFILE="${PROFILECHIP}-${PROFILEMONITOR}"
   #find out if current xorg.conf matches this profile...
   #CURRENT_XORG_PROFILE=`grep '^#PuppyHardwareProfile' /etc/X11/xorg.conf | tail -n1 | cut -f 2 -d '=' | cut -f 1 -d ' '`
    CURRENT_XORG_PROFILE=`grep '^#PuppyHardwareProfile' /etc/X11/xorg.conf | tail -n1 | cut -f 2 -d '='`

   if [ "$CURRENT_XORG_PROFILE" != "$CURRENT_HARDWAREPROFILE" ]; then #CURRENT_XORG_PROFILE
    _notice "\\033[0;31m"'Has hardware profile changed ?'"\\033[0;39m"
    #video hardware has changed. either changed monitor or booting different PC.
    #same current xorg.conf as a profiled filename...
    _debug "Moving now /etc/X11/xorg.conf /etc/X11/xorg.conf.${CURRENT_XORG_PROFILE}"
    mv $VERB -f /etc/X11/xorg.conf "/etc/X11/xorg.conf.${CURRENT_XORG_PROFILE}" #### Rename One
    #if a previous profiled filename for new hardware, use that...
    _info "Copying /etc/X11/xorg.conf.${CURRENT_HARDWAREPROFILE} /etc/X11/xorg.conf if exists"
    [ -f "/etc/X11/xorg.conf.${CURRENT_HARDWAREPROFILE}" ] && cp $VERB -af /etc/X11/xorg.conf."${CURRENT_HARDWAREPROFILE}" /etc/X11/xorg.conf # CP new xorg.conf Four

   fi #CURRENT_XORG_PROFILE
  ;;
  esac
  #fi #X->Xorg
 fi #-f xorg.conf

 if [ ! -f /etc/X11/xorg.conf ]; then #! -f xorg.conf
  _notice "File /etc/X11/xorg.conf is not a regular file."

__do_xorgwizard(){
  _info "Running xorgwizard ..." && sleep 9s
  rm $VERB -f /var/lock/XLOADED 2>>$ERR #not necessary, precaution.
  #1st dialog offers to use Xvesa...
  /usr/sbin/xorgwizard
}

  echo -en "\\033[1;35m" #34=blue, 33=yellow, 32=green, 31=red, 35=purple, 36=aquablue, 38=black.
  echo "Need to run 'xorgwizard' to setup X environment."
  #echo -n 'If X failed to start, type "xorgwizard" to setup X'
  echo 'Type "xorgwizard" <Enter> to setup X'
  echo -e "\\033[0;39m"
  exit 0

  X_SERVER=`readlink -qs /usr/bin/X`
  case "$X_SERVER" in
  *Xvesa*)
  _debug "X_SERVER='$X_SERVER'"
  echo "Exiting now . type 'xwin' to start Xvesa server.."
  exit 0
  ;;
  esac
 fi #! -f xorg.conf

fi #-f /usr/bin/Xorg
_edebug "\\033[0;34m""End Xorg part Two""\\033[0;39m"
#### End  check for HW profile : Xorg part Two ####


#### Begin starting X ####
_edebug "\\033[0;32m""Begin starting X part""\\033[0;39m"
#finally, start X...
#J_Rey had a good idea, flag XLOADED... and set to false on exit.
#but if PC hangs, XLOADED will still be true, so will know it is broken.
echo "true" > /var/lock/XLOADED
rm $VERB -f /tmp/wmexitmode.txt "$tmpDIR"/wmexitmode.txt
rm $VERB -f /tmp/bootcnt.txt #revert logic: if /tmp/bootcnt.txt exist, means first boot
                             #if it does not exist, means normal running

case $X_SERVER in
 *Xvesa*) #### Xvesa part Three ###
  echo "Starting X with the '$X_SERVER' server,
video mode '$VIDMODE' and mouse '$MOUSEDEV' ..."

  ##w479 older Xvesa server may not recognise the '-sp' option...
  if [ "`Xvesa -help 2>&1 | grep '^\-sp '`" = "" ]; then # 14.1.0
   SPOPTION=''
  else
   SPOPTION='-sp /usr/lib/xserver/SecurityPolicy'
  fi
  _debug "SPOPTION='$SPOPTION'"
  sleep 4s
  #startx $VIDMODE $MOUSEDEV > "$logDIR"/xerrs.txt 2>&1
  #Puppy 0.8.4 no need for startx script...
  VIDFREQ=`echo -n "$VIDSCRN" | cut -f 4 -d "x"`
  if [ ! "$VIDFREQ" ]; then # 14.2.0
   echo "$VIDMODE" > "$tmpDIR"/currentvideomode
   #w460 added -fp and -sp options...
   /usr/bin/xinit $HOME/.xinitrc -- -mode $VIDMODE $XEXTRAOPTIONS -mouse /dev/mouse,$MOUSEBUTTONS -fp /usr/share/X11/fonts/misc/,/usr/share/X11/fonts/TTF/,/usr/share/X11/fonts/Type1/ $SPOPTION > "$logDIR"/xerrs."$KERNEL_RELEASE"."$Date_".Xvesa.log 2>&1
  else # 14.2.0
   #also, want to have adjustable frequency, VIDSCRN=widthxheightxdepthxfreq...
   echo "$VIDSCRN" > "$tmpDIR"/currentvideomode
   /usr/bin/xinit $HOME/.xinitrc -- -screen $VIDSCRN $XEXTRAOPTIONS -mouse /dev/mouse,$MOUSEBUTTONS -fp /usr/share/X11/fonts/misc/,/usr/share/X11/fonts/TTF/,/usr/share/X11/fonts/Type1/ $SPOPTION > "$logDIR"/xerrs."$KERNEL_RELEASE"."$Date_".Xvesa.log 2>&1
  fi # 14.2.0
  ;; #### End Xvesa part Three

 *Xfbdev*) #### Begin XFbdev
  echo "Starting X with the '$X_SERVER' Kdrive X server, mouse '$MOUSEDEV' ..."
  /usr/bin/xinit $HOME/.xinitrc -- -mouse /dev/mouse,$MOUSEBUTTONS > "$logDIR"/xerrs."$KERNEL_RELEASE"."$Date_".Xfbdev.log 2>&1
  ;; #### End XFbdev
 *Xi810*) #v1.0.7 #### Begin Xi810 part
  echo "Starting X with Xi810 Kdrive X server, mouse $MOUSEDEV..."
  #echo "(experimental, currently fixed to 1024x768x16x72 in /usr/bin/xwin)"
  # /usr/bin/xinit $HOME/.xinitrc -- -screen $VIDSCRN -mouse /dev/mouse,$MOUSEBUTTONS > "$logDIR"/xerrs."$KERNEL_RELEASE"."$Date".Xi810.log 2>&1
  /usr/bin/xinit $HOME/.xinitrc -- -screen $VIDSCRN  > "$logDIR"/xerrs."$KERNEL_RELEASE"."$Date_".Xi810.log 2>&1
;; #### End Xi810
 *XF86_SVGA*) #### Begin XF86_SVGA
  echo "Starting X with the '$X_SERVER' server,
specs in /etc/X11/XF86Config, startup apps '$HOME/.xinitrc' ..."
  /usr/bin/xinit "$HOME/.xinitrc" -- -bpp 16 > "$logDIR"/xerrs."$KERNEL_RELEASE"."$Date_".Xf86_svga.log 2>&1
  ;;#### End XF86_SVGA

 *Xorg*) #### Begin Xorg
 AP=`date +%R:%S`
 errLOG="$logDIR/Xerrs.$KERNEL_RELEASE.${Date_}.Xorg.log"
  _LOG_="$logDIR/Xorg.$KERNEL_RELEASE.${Date_}.log"
 _LOCALCONF_="/etc/X11/XORG.$USER"
 if [ -r "$_LOCALCONF_" ]; then
 CUSTOM=`grep '^XORG=' "$_LOCALCONF_" |cut -f 2 -d '=' | tr -d '"' | tr -d "'"`
 fi

  echo "Starting X with the '$X_SERVER' server,
specs in /etc/X11/xorg.conf, startup apps '$XINIT_CLIENT' ..."

  #v2.11 G2 suggested -br for black background instead of checked...
  #w479 ***AWFUL HACK*** running pup 218, retro k2.6.18.8, my laptop, Xorg hangs
  #     if have '-nolisten tcp'. until find out why, this workaround...

  if [ "$KERNEL_RELEASE" = "2.6.18.8" ]; then # 14.3.0
   /usr/bin/xinit $HOME/.xinitrc -- -br > "$logDIR"/xerrs."$KERNEL_RELEASE"."$Date_".Xorg.log 2>&1

  else # 14.3.0
   if [ "`whoami`" = 'root' ]; then
    /usr/bin/xinit "$XINIT_CLIENT" -- /usr/bin/X :0 -ignoreABI -logfile "$_LOG_" -nolisten tcp $CUSTOM >> "$errLOG" 2>&1
   #Fatal server error:
   #The '-logfile' option can only be used by root.
   else
    /usr/bin/xinit "$XINIT_CLIENT" -- /usr/bin/X :0 -ignoreABI -nolisten tcp $CUSTOM >> "$errLOG" 2>&1
   fi
  fi # 14.3.0
  ;; #### End Xorg

 *)
 echo "Starting X with anything else Xserver"
 sleep 9s
  #### Begin everything different from Xorg,Xvesa and co.
  /usr/bin/xinit "$HOME/.xinitrc" --  > "$logDIR"/xerrs."$KERNEL_RELEASE"."$Date_".OtherX.log 2>&1
  ;; #### End
esac
_edebug "\\033[0;34m""End start X part""\\033[0;39m"
#### End start X part ####

### Handle /tmp/xinitrc.err - see $HOME/.xinitrc
test -f /tmp/xinitrc.err && { echo -e "\\033[1;31m"; cat /tmp/xinitrc.err && rm $VERB /tmp/xinitrc.err; echo -e "\\033[0;39m"; }

# Handle /var/lock/X.status
rm $VERB -f /var/lock/X.status

#### Begin of "$tmpDIR"/wmexitmode part ####
_edebug "\\033[0;32m""Begin of $tmpDIR/wmexitmode part""\\033[0;39m"


### PERM ###
[ "`whoami`" = "root" ] && {
[ -d "$tmpDIR" ] && chmod $VERB 0660 "$tmpDIR"/* 2>>$ERR
chmod $VERB 0770 /var/lock
}
                            echo "false"   >/var/lock/XLOADED
[ "`whoami`" = 'root' ] && chmod $VERB 0660 /var/lock/XLOADED
### PERM ###


### XVESA ###
if [ -f "$logDIR"/xerrs."$KERNEL_RELEASE"."$Date_".Xvesa.log ]; then
   less "$logDIR"/xerrs."$KERNEL_RELEASE"."$Date_".Xvesa.log
fi
### XVESA ###


#Shutdown menu calls wmreboot, wmpoweroff, wmexit or restartwm, which create this file...
if [ -f "$tmpDIR"/wmexitmode.txt ]; then # 19.0
 _debug "$tmpDIR/wmexitmode.txt exists"

 read WMEXITMODE EXITMODEPARAMETERS <"$tmpDIR"/wmexitmode.txt
 _debug "WMEXITMODE='$WMEXITMODE' EXITMODEPARAMETERS='$EXITMODEPARAMETERS'"

 case $WMEXITMODE in
 exit)
  rm $VERB -f "$tmpDIR"/wmexitmode.txt #w478
  _info "Found <exit> in $tmpDIR/wmexitmode.txt , exiting to prompt now."
  exit 0 # exit Three
 ;;
 esac

  case $WMEXITMODE in
  poweroff) exec /sbin/poweroff $EXITMODEPARAMETERS;;
  reboot)   exec /sbin/reboot   $EXITMODEPARAMETERS;;
  esac

  #restart window manager...
  #make a gross assumption, if wmexitmode.txt exists, haven't already exited this script, then want
  #to restart maybe with different window manager. /etc/windowmanager already has desired w.m.
  rm $VERB -f "$tmpDIR"/wmexitmode.txt #definitely delete it now.
  #v1.0.5 thanks GuestToo for advice on this, works with chooselocale script...
  #NEWLANG=`cat /etc/profile | grep "LANG=" | cut -f 2 -d '='`
  NEWLANG=`grep '^[[:blank:]]*LANG=' /etc/profile | tail -n 1| cut -f 2 -d '='` #w482 shinobar bugfix.
  if [ "$NEWLANG" ]; then #precaution # 19.2.0
   if [ "$NEWLANG" != "$LANG" ]; then # 19.2.1.0
    export LANG=$NEWLANG
    LCs=`locale`
    for loc in $LCs; do export $loc; done
   fi # 19.2.1.0
  fi # 19.2.0
 exec xwin $EXITMODEPARAMETERS

##+++2012-02-22 NO wmexitmode, assuming crash:
else
 _notice "NO $tmpDIR/wmexitmode.txt ..?"
 cat "$tmpDIR"/wmexitmode.txt
 ls "$tmpDIR"
 read -n1 -p "Press any key to proceed" R
 echo
 if [ "$Log" ]; then
 dialog --textbox "$Log" 0 0
 fi
##+++2012-02-22 NO wmexitmode, assuming crash

fi # 19.0
_edebug "\\033[0;34m""End of $tmpDIR/wmexitmode part""\\033[0;39m"
#### End of "$tmpDIR"/wmexitmode part ####

#### Begin X failed part ####
_edebug "\\033[0;31m""Begin X failed part""\\033[0;39m"
echo "false" > /var/lock/XLOADED #see note above.
#...if PC hung, run xorgwizard at next bootup (see further up).
_debugx "/var/lock/XLOADED has been set to false"
echo
echo 'Exited from X. Type "xwin [fvwm95|jwm]" to restart X ([ ] mean optional).'
echo '(To shutdown PC type "poweroff", to reboot PC type "reboot")'

if [ -f /usr/X11R7/bin/Xfbdev ]; then # 15.0
 echo '(To run the Xfbdev Framebuffer Wizard, type "framebufferwizard")'
fi # 15.0

case "$X_SERVER" in
*XF86_SVGA*)
 echo -en "\\033[1;31m" #34=blue, 33=yellow, 32=green, 31=red, 35=purple, 36=aquablue, 38=black.
 echo 'If X failed to start, type "xf86config" to setup X'
 echo '  -- you will need to know type of mouse, keyboard and video chip'
 echo '  -- this X is for pre-2000 video chips, but many recent chips backwards-compat.'
 echo '  -- accept default save /etc/XF86Config, Puppy will move this to /etc/X11'
 echo '  -- (XF86Config is the configuration file for X and can be edited manually)'
 echo -n '  -- LAST RESORT, drop back to Xvesa by typing "ln -sf Xvesa /usr/bin/X"'
 echo -e "\\033[0;39m"
;;
esac

case "$X_SERVER" in
*Xorg*)
 echo -en "\\033[1;35m" #34=blue, 33=yellow, 32=green, 31=red, 35=purple, 36=aquablue, 38=black.
 echo -n 'If X failed to start, type "xorgwizard" to setup X'
 echo -e "\\033[0;39m"
;;
esac

##w477 weird situation. first boot, xvesa, 'Exit to prompt', X restarts.
##because there are two instances of xwin running, but I don't see how.
##not the best, but here is a workaround...
#NUMXWINS=`pidof xwin | wc -w` #see above and below...

case "$X_SERVER" in *Xvesa*)
 if [ -e "$tmpDIR"/videomode ]; then # 18.1.0
  exec xwin #restart X.
 fi # 18.1.0
;;
esac

_edebug "\\033[0;34m""End of X failed""\\033[0;39m"
#### End of X failed ####

_do_exit(){
EXITCNT=$(( EXITCNT + 1 ))
_edebug "\\033[0;32m""_do_exit called '$EXITCNT' times."
echo -n "$0:"
echo "End."
echo -e "\\033[0;39m"
echo "false" > /var/lock/XLOADED #KRG
rm $VERB -f /var/lock/X.status
#exit
}
_do_exit

[ "$RTVAL" ] || RTVAL=0
_debug "tty='`tty`'"
#[ "`tty`" = 'not a tty' ] && echo -n 'press [Enter] # '
tty >$OUT || echo -n 'press [Enter] # '
if [ "$RTVAL" != '0' ]; then
    exit 1
else
    exit 0
fi

# Very End of this file 'usr/bin/xwin' #
###END###
