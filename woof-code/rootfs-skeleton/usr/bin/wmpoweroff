#!/bin/ash
#
# New header by Karl Reimer Godt, September 2014
  _TITLE_="Puppy_wmpoweroff"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="/usr/bin/wmpoweroff"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
[ "$HAVE_F4PUPPY5" ] || source /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

TWO_HELP='1'; TWO_VERSION='1'; TWO_VERBOSE=''; TWO_DEBUG=''; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap

}
# End new header
#
#introduced v0.9.8
#called from /root/.fvwm95rc, .jwmrc at shutdown.

#DBG
#echo "$0:$@" >/dev/console
trap "exit 1" HUP INT QUIT KILL TERM

OUT=/dev/null;ERR=$OUT
[ "$DEBUG" ] && { OUT=/dev/stdout;ERR=/dev/stderr; }
[ "$DEBUG" = "2" ] && set -x

Version='1.1 KRG'
usage(){
MSG="
$0 [help]
Version $Version .
Puppy poweroff script that is used if
X is running to stop X services and
`which pup_event_frontend_d` .
It simply should kill X .
It creates an entry into /tmp/wmexitmode.txt
that is read by `which xwin` to execute
`which poweroff` .
Try 'poweroff help' for further info .
"
if [ "$2" ];then
MSG="$MSG

$2
"
fi
echo "$MSG"
[ "$DISPLAY" ] && xmessage -bg black -fg yellow "$MSG"
exit $1
}

for param in $@;do
case $param in
*help|*usage) usage 0;;
*force) FORCE=1;;
*) :;;
esac;done

# First , test if X is running ...
_pidof X || _exit 4 "X not running"

read CURRENTWM </etc/windowmanager
if [ "$CURRENTWM" != 'enlightenment_start' ];then
: #[ "$1" ] && exit 1
fi

[ "$DISPLAY" ] && yaf-splash -bg green -text "Preparing for poweroff..." &

. /etc/eventmanager

echo "poweroff $@" > /tmp/wmexitmode.txt
echo "poweroff $@" > /tmp/xwin/wmexitmode.txt  ##+++2011-11-07

sleep 0.2

# REM: Killing pup_event_frontend_d triggers also
#      trap HUP line in pup_event_frontend_d,
#      here in script, not in terminal
rm $VERB -f /tmp/pup_event_manager.flg
rm $VERB -f /tmp/pup_event_change_icons.flg


[ "$FORCE" ] || { pidof sync >>$OUT || sync; }

[ "$FORCE" ] || {
 for _file_ in $HOME/Choices/XINIT/*; do
    test -f $_file_ || continue
    source $_file_ stop
 done
}

if [ "`pidof xfce4-panel`" != "" ];then
 #killall xfce4-panel
 kill `pidof xfce4-panel`
 exit
fi

##e17
pidof tempget >$OUT && kill -2 `pidof tempget`

#w003
_pidof $CURRENTWM && {
kill -9 `pidof ${CURRENTWM##*/}`
}
killall X >>$OUT 2>>$ERR  #default is SIGTERM.
sleep 1                   #v1.0.7
exec killall -9 X 2>>$ERR #v1.0.7 make sure X is killed.

#after exit from X, there is a return to /usr/X11R7/bin/xwin,
#which reads /tmp/wmexitmode.txt.
exit 0
# Very End of this file 'usr/bin/wmpoweroff' #
###END###
