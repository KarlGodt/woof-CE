#!/bin/ash
#introduced v0.9.8
#called from /root/.fvwm95rc, .jwmrc at shutdown.

pidof -o $$ -o %PPID "${0##*/}" && { echo "$0 already running."; exit 1; }

yaf-splash -timeout 5 -bg green -text "REBOOT..." &

test -f /etc/rc.d/f4puppy5 && . /etc/rc.d/f4puppy5
# BATCHMARKER01 - Marker for Line-Position to bulk insert code into.

#/sbin/pup_event_frontend_d will quit if this file exists...
echo "reboot" > /tmp/wmexitmode.txt
#echo "reboot" > /tmp/xwin/wmexitmode.txt  ##+++2011-11-07
for f in /tmp/xwin/wmexitmode*; do
test -f "$f" || continue
echo 'reboot' >"$f"
done

#v403 give time for /sbin/pup_event_frontend_d to quit.
#w478 testing 2.6.18.1 kernel, pup_event_frontend_d did not exit when it
#detected /tmp/wmeximode.txt, but became 'defunct'...
echo -n "    ...Waiting for pup_event_frontend_d to stop"
killall pup_event_frontend_d
rm $VERB -f /var/run/pup_event_frontend_d.pid*
sleep 1

_sync

#w003
if [ "`pidof xfce4-panel`" != "" ];then
 #killall xfce4-panel
 kill `pidof xfce4-panel`
 exit
fi

_get_current_wm(){
DISP=${DISPLAY%.*}
for i in "" ".$DISP"
do
unset CURRENTWM
test -f /etc/windowmanager$i && read CURRENTWM </etc/windowmanager$i
echo "CURRENTWM='$CURRENTWM'"
done
}
_get_current_wm

# get session leader pid
#ps -A -o sid,tty,pid,args | grep -w jwm
# get list of progs of session leader and tty to get display(s)
#ps -A -o sid,tty,pid,args | grep -w 5580 | grep -w X | grep ' :[0-9]'

_get_other_wm_pids(){
# REM: first needs to kill any other xinit wm X than the current
#      one responsible for DISPLAY

DISP=${DISPLAY%.*}
#ls -1 /etc/windowmanager* |
while read f
do
case $f in *windowmanager|*windowmanager.$DISP|'') continue;; esac
read OTHERWM <"$f"
echo OTHERWM=$OTHERWM
test "$OTHERWM" || continue
test "$OTHERWM" = "$CURRENTWM" && continue
case $OTHERWM in enlightenment_start) OTHERWM=enlightenment;; esac
 #/bin/ps -A -o sid,tty,pid,args | grep -w "$OTHERWM" | grep -vE 'grep|ps' |
 while read slpid t p A
 do
  test "$slpid" || continue
  echo slpid=$slpid t=$t p=$p A=$A
  ALL_OF_SL=`/bin/ps -A -o sid,tty,pid,args 2>$ERR | grep -w "$slpid"`
    SL_PID="$SL_PID`/bin/ps -A -o sid,tty,pid,args 2>$ERR | grep -w "$slpid" | grep -w X | grep -vE 'grep|/bin/ps' | awk '{print $3}'`\n"
  SL_DISP="$SL_DISP`/bin/ps -A -o sid,tty,pid,args 2>$ERR | grep -w "$slpid" | grep -w X | grep ' :[0-9]' | grep -E -o 'X :[0-9]+' | grep -vE 'grep|/bin/ps' | awk '{print $2}'`\n"
  case $A in *xwin*|*tempget*|*dbus*) continue;; esac
  for ad in $SL_DISP; do test "$ad" = "$DISP" || KILL_PID="$KILL_PID$p\n"; done
 done <<EoI
`/bin/ps -A -o sid,tty,pid,args 2>$ERR | grep -w "$OTHERWM" | grep -vE 'grep|ps'`
EoI
done <<EoI
`ls -1 /etc/windowmanager*`
EoI

}
_get_other_wm_pids

KILL_PID=`echo -e $KILL_PID | sort -u | sed '/^$/d'`
echo "KILL_PID='$KILL_PID'"

SL_PID=`echo -e $SL_PID | sort -u | sed '/^$/d'`
echo "SL_PID='$SL_PID'"
/bin/ps -A -o pid,ppid,args 2>$ERR | grep -w "$SL_PID" | grep -vE 'grep|/bin/ps|xinit'
XPID=`/bin/ps -A -o pid,ppid,args 2>$ERR | grep -w "$SL_PID" | grep -vE 'grep|/bin/ps|xinit' | awk '{print $1}'`
XPID=`echo "$XPID" | sort -u | grep -vw "$KILL_PID"`
echo "XPID='$XPID'"

_kill_other_wm(){
for aP in $KILL_PID; do kill -15 $aP; done
sleep 1
#for aP in $SL_PID; do kill $aP; done #session leader is xinit and I do not want to kill xinit, but X
for aP in $XPID; do kill -15 $aP; done
}
_kill_other_wm

#_pidof tempget && killall tempget

#w003
#CURRENTWM="`cat /etc/windowmanager`"
DISP=${DISPLAY%.*}
for i in ".$DISP" ""
do
unset CURRENTWM
test -f /etc/windowmanager$i && read CURRENTWM </etc/windowmanager$i
case $CURRENTWM in enlightenment_start) CURRENTWM=enlightenment;; esac
echo "CURRENTWM='$CURRENTWM'"
test "$CURRENTWM" && kill -15 `pidof "$CURRENTWM"` && break
done

sleep 1
wait

_get_current_x(){
test "$DISP" || return 1
ps -o pid,args | grep -w 'X' | grep -w "$DISP" | grep -vE 'grep|xinit' | awk '{print $1}'
}

CURRENTX=`_get_current_x` && {
echo "CURRENTX='$CURRENTX'"
test "${CURRENTX//[[:blank:]]/}" && kill -15 `_get_current_x`
}

_old_kill_x(){
killall X #default is SIGTERM.
sleep 1           #v1.0.7
exec killall -9 X #v1.0.7 make sure X is killed.
}

#after exit from X, there is a return to /usr/X11R7/bin/xwin,
#which reads /tmp/wmexitmode.txt .
