#!/bin/sh
#
# New header by Karl Reimer Godt, September 2014
  _TITLE_="Puppy_wmreboot"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="/usr/bin/wmreboot"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
source /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in 1; do shift; done; }

_trap

}
# End new header
#
#introduced v0.9.8
#called from /root/.fvwm95rc, .jwmrc at shutdown.


trap "exit 1" HUP INT QUIT KILL TERM

OUT=/dev/null;ERR=$OUT
[ "$DEBUG" ] && { OUT=/dev/stdout;ERR=/dev/stderr; }
[ "$DEBUG" = "2" ] && set -x

Version='1.1 KRG'
usage(){
MSG="
$0 [help]
Version $Version .
Puppy reboot script that is used if
X is running to stop X services and
`which pup_event_frontend_d` .
It simply should kill X .
It creates an entry into /tmp/wmexitmode.txt
that is read by `which xwin` to execute
`which reboot` .
Try 'reboot help' for further info .
"
if [ "$2" ];then
MSG="$MSG

$2
"
fi
echo "$MSG"
[ "$DISPLAY" ] && xmessage -bg black -fg yellow "$MSG"
exit $1
}

for param in $@;do
case $param in
help|-help|--help) usage 0;;
*) :;;
esac;done

#CURRRENT_WM=$(</etc/windowmanager)
read CURRRENT_WM </etc/windowmanager
if [ "$CURRRENT_WM" != 'enlightenment_start' ];then
[ "$1" ] && exit 1
fi

#/sbin/pup_event_frontend_d will quit if this file exists...
echo -n "reboot" > /tmp/wmexitmode.txt
echo -n "reboot" > /tmp/xwin/wmexitmode.txt  ##+++2011-11-07
killall pup_event_frontend_d

wait_for_frontend_d(){
#v403 give time for /sbin/pup_event_frontend_d to quit.
#w478 testing 2.6.18.1 kernel, pup_event_frontend_d did not exit when it
#detected /tmp/wmeximode.txt, but became 'defunct'...
KCNT=0
PSPEFD="`ps --no-headers -C pup_event_frontend_d | grep 'pup_event_front' | grep -v 'defunct'`"
#while [ "`pidof pup_event_frontend_d`" != "" ];do
while [ "$PSPEFD" != "" ];do
 sleep 0.5
 KCNT=`expr $KCNT + 1`
 [ $KCNT -gt 60 ] && break #30 secs.
 PSPEFD="`ps --no-headers -C pup_event_frontend_d | grep 'pup_event_front' | grep -v 'defunct'`"
done
sleep 0.2
}

sync

#w003
if [ "`pidof xfce4-panel`" != "" ];then
 #killall xfce4-panel
 kill `pidof xfce4-panel`
 exit
fi

#w003
CURRENTWM="`cat /etc/windowmanager`"
kill -9 `pidof $CURRENTWM`
##e17
pidof tempget && kill -2 `pidof tempget`

for _file_ in $HOME/Choices/XINIT/*; do
test -f $_file_ || continue
source $_file_ stop
done

killall X #default is SIGTERM.
sleep 1           #v1.0.7
exec killall -9 X #v1.0.7 make sure X is killed.

#after exit from X, there is a return to /usr/X11R7/bin/xwin,
#which reads /tmp/wmexitmode.
# Very End of this file 'usr/bin/wmreboot' #
###END###
