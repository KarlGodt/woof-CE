#!/bin/sh
#
# New header by Karl Reimer Godt, September 2014
  _TITLE_="Puppy_cpu_freq_1"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="/usr/local/cpu-freq/cpu_freq_1"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
[ "$HAVE_F4PUPPY5" ] || source /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

TWO_HELP=''; TWO_VERSION=''; TWO_VERBOSE=''; TWO_DEBUG=''; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap

}
# End new header
#
#cpu_freq GUI
#Trio Tjandradjaja - GPL 2009

echo "`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_frequencies`" > /tmp/freq_tmp_max
> /tmp/freq_max
for i in `cat /tmp/freq_tmp_max`
do
echo "$i " | awk '{print "<item>"$1"</item>"}' >> /tmp/freq_max
done

echo "`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_frequencies`" > /tmp/freq_tmp_min

> /tmp/freq_min1
for i in `cat /tmp/freq_tmp_min`
do
echo "$i " >> /tmp/freq_min1
done
sort -n "/tmp/freq_min1" >  /tmp/freq_min2

> /tmp/freq_min
for i in `cat /tmp/freq_min2`
do
echo "$i " | awk '{print "<item>"$1"</item>"}' >> /tmp/freq_min
done

#echo "/tmp/freq_min" >  /tmp/freq_min

FREQMAX=`cat /tmp/freq_max`
FREQMIN=`cat /tmp/freq_min`

DIR="`dirname $0`"
[ "$DIR" = "." ] && DIR="`pwd`"
export DIR="$DIR"

export cpu_freq="	
<window title=\"CPU FREQUENCY SCALING 1.3-2\">
 <vbox>
  <frame SUCCESS! >
  <text><label>\"On demand CPU Frequency Scaling is Activated \"</label></text>
  
   <text><label>\"Now choose MIN & MAX Frequency \"</label></text>
   <hbox>
   <vbox>
   <text><label>MIN</label></text>
   <combobox>
   <variable>MIN</variable>
   $FREQMIN   
   </combobox>
   <text><label>MAX</label></text>
   <combobox>
   <variable>MAX</variable>
   $FREQMAX   
   </combobox>
   </vbox>
   <text><label>\"     \"</label></text>
   <button>
<input file icon=\"gtk-apply\"></input>
    <label>Activate</label>
	<action>. $DIR/cpu_func -echo</action>
	<action>exit: 0</action>
   </button>
   </hbox>
    </frame>
 </vbox>
</window>"

#execute gtkdialog
I=$IFS; IFS=""
for STATEMENTS in  $(gtkdialog3 --program=cpu_freq --center); do
	eval $STATEMENTS
done
IFS=$I# Very End of this file 'usr/local/cpu-freq/cpu_freq_1' #
###END###
