#!/bin/sh
#
# New header by Karl Reimer Godt, September 2014
  _TITLE_="Puppy_cpu_func"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="/usr/local/cpu-freq/cpu_func"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
[ "$HAVE_F4PUPPY5" ] || source /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

TWO_HELP=''; TWO_VERSION=''; TWO_VERBOSE=''; TWO_DEBUG=''; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap

}
# End new header
#
#cpu_freq GUI
#Trio Tjandradjaja - GPL 2009
#100606 rcrsn51: bug fix.

case "$1" in

 -refresh)
  echo '#!/bin/sh' > /root/Startup/start_cpu_freq
  gxmessage -bg pink "Your CPU Frequency Scaling Modules are refreshed
Please reboot your computer"  &
 ;;
 -modules)
  MODULE=`echo $MODULES | awk '{print $1}'`
  modprobe $MODULE 2> /tmp/modprobe_module.tmp 
  #if [ ! "`cat /tmp/modprobe_module.tmp`" ] ; then
  if [ $? -eq 0 ] ; then #100606
   /usr/local/cpu-freq/cpu_freq_1 &
   modprobe cpufreq_ondemand
   echo '#!/bin/sh' > /root/Startup/start_cpu_freq
   echo "modprobe $MODULE" >> /root/Startup/start_cpu_freq
   echo "modprobe cpufreq_ondemand" >> /root/Startup/start_cpu_freq
  else
   gxmessage -bg orange "Fail - Module $MODULE is not compatible
Please try another module"
  /usr/local/cpu-freq/cpu_freq -again &
 fi
 ;;
 -echo)
  echo ondemand > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
  echo ondemand > /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor
  echo $MIN > /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq
  echo $MAX > /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
  echo $MIN > /sys/devices/system/cpu/cpu1/cpufreq/scaling_min_freq
  echo $MAX > /sys/devices/system/cpu/cpu1/cpufreq/scaling_max_freq
  echo "echo ondemand > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor" >> /root/Startup/start_cpu_freq
  echo "echo ondemand > /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor" >> /root/Startup/start_cpu_freq
  echo "echo $MIN > /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq" >> /root/Startup/start_cpu_freq
  echo "echo $MAX > /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq" >> /root/Startup/start_cpu_freq
  echo "echo $MIN > /sys/devices/system/cpu/cpu1/cpufreq/scaling_min_freq" >> /root/Startup/start_cpu_freq
  echo "echo $MAX > /sys/devices/system/cpu/cpu1/cpufreq/scaling_max_freq" >> /root/Startup/start_cpu_freq

  STATUSCPU1="`cat /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor`"
  if [ ! "$STATUSCPU1" ] ; then
   CPU1="CPU Frequency Scaling CPU 1 is not activated, 
or you don't have CPU 1"
  else
   CPU1="Scaling Mode: $STATUSCPU1
Frequencies - Min: `cat /sys/devices/system/cpu/cpu1/cpufreq/scaling_min_freq` Max: `cat /sys/devices/system/cpu/cpu1/cpufreq/scaling_max_freq`
And will be executed on every boot"
  fi
  gxmessage -bg orange "Status Summary:
CPU 0
Scaling Mode: `cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor`
Frequencies - Min: `cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq` Max: `cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq`
And will be executed on every boot

CPU 1
$CPU1" &
 ;;
esac
# Very End of this file 'usr/local/cpu-freq/cpu_func' #
###END###
