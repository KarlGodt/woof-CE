#!/bin/sh
#
# New header by Karl Reimer Godt, September 2014
  _TITLE_="Puppy_func_shutdownpjsua"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="/usr/local/psip/func_shutdownpjsua"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
source /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in 1; do shift; done; }

_trap

}
# End new header
#

echo -e "\nq\n" >> $PJSIGNAL
gxmessage -center -timeout 5 -buttons "" "shutting down pjsua..."
sleep 2
rm "$PJTMP/buddy-list"
#hopefully this will be ignored because pjsua is already shutdown
#if pjsua is still running the buddy-list will be rebuilt
echo -e "\n\n" >> $PJSIGNAL
usleep 100000
#try kills and report errors
for aPID in $(ps | grep 'pjsua' | grep -v 'grep' | cut -f 1-2 -d ' ');
do
    if [ ! "$aPID" = "$$" -a ! "$aPID" = "root" ]; then
        NAG=1
        echo "killing pjsua process $aPID"
        kill $aPID
        [ $? = 1 -a "$(ps | awk '{print $1}' | grep -w $aPID)" ] && { echo "I am $$, I failed to kill pjsua process: $aPID" && ps | grep -w "$aPID" | grep -v 'grep'; }
    fi
done
if [ -f "$PJTMP/buddy-list" ]; then
    gxmessage -center -timeout 2 -buttons "" "failed to shutdown pjsua, try again"
else
    gxmessage -center -timeout 2 -buttons "" "pjsua shutdown complete"
fi
