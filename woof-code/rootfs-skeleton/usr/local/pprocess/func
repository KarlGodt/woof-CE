#!/bin/bash
#
# New header by Karl Reimer Godt, September 2014
  _TITLE_="Puppy_func"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="/usr/local/pprocess/func"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
[ "$HAVE_F4PUPPY5" ] || source /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

TWO_HELP=''; TWO_VERSION=''; TWO_VERBOSE=''; TWO_DEBUG=''; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap

}
# End new header
#
case $1 in
-action)
	if [ "$KILL" = "false" ] && [ "$CPU" = "false" ]; then
		TXT1="$LOC131"
		. "$PROGPATH"/box_ok
	fi
	if [ "$KILL" = "true" ]; then
		TMP="-`echo "$KILL_SIGNAL" | cut -d " " -f 1`"
		if [  $TMP = "-0" ]; then TMP=""; fi
		kill $TMP `echo "$LIST" | awk '{print $1}'`
	fi
	if [ "$CPU" = "true" ]; then
		case $CPU_PRIORITY in
			$LOC105) renice -10 `echo "$LIST" | awk '{print $1}'`;; #high
			$LOC106) renice 0 `echo "$LIST" | awk '{print $1}'`;; #normal
			$LOC107) renice 10 `echo "$LIST" | awk '{print $1}'`;; #low
		esac
	fi
	;;
-set_filter)
	echo "$FILTER_STRING" > /tmp/pprocess-filter
	;;
-filter)
	ps > /tmp/pprocess-ps_source
	FILTER_STRING=($(<"/tmp/pprocess-filter"))
	grep -i "$FILTER_STRING" /tmp/pprocess-ps_source > /tmp/pprocess-ps
	;;
esac
# Very End of this file 'usr/local/pprocess/func' #
###END###
