#!/bin/sh
#(c) Copyright Barry Kauler 2009, puppylinux.com
#2009 Lesser GPL licence v2 (http://www.fsf.org/licensing/licenses/lgpl.html).
# Note: Puppy Package Manager is started from /usr/local/petget/pkg_chooser.sh for the GUI.
#  'petget' is for commandline execution, especially from ROX-Filer.
# If passed param is a pkg name preceded by a + to install pkg, - to uninstall pkg.
#  example: +xbubble-0.2.4
# For integration with Rox-Filer, commandline is a .pet|.deb|.tgz|.tar,gz with absolute path, install.
#  ex: petget /root/xbubble-0.2.4.pet
# For integration with browser, ex: petget http://somewhere.on.internet/xbubble-0.2.4.pet
# Note, petget also get called from /etc/rc.d/rc.update to remove packages. ex:
#  petget -xbubble-0.2.4
# ...when X not running, removal will not put up any DLG windows, will remove without question.
#w482 restart jwm immediately to update menu.
#v424 fix .pet in path with space chars.


  _TITLE_=Puppy_Pet_Get
_VERSION_=1.0omega
_COMMENT_="Handle Archive files."

MY_SELF="$0"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
source /etc/rc.d/f4puppy5
_trap
}

########################################################################
#
# ADDS/CHANGES by Karl Godt :
# 1.) usage message, called with $1 "-h" using bash shell
#       builtin getopts
# 2.) Support for .pet with other compressions as gzip :
#       bzip2,lzop,lzma,xz ;needs altered pet2tgz/tgz2pet,dir2pet
# 3.) though added in later Puppies, have manually adjusted support for .rpm
# 4.) Added support for checking pets in /tmp with extracting them there .
#       Code should be nearly the same as in installpkg.sh
#       On this installation still a TODO
# 5.0) added support for .pup in simple manner (extracts to tmp dir,
#       included archives need to be installed manually)
#
# DISTRO_VERSION=430·#481·#416·#218·#478······#####change·this·as·required#####
# DISTRO_BINARY_COMPAT="puppy"·#"ubuntu"·#"puppy"·#####change·this·as·required#####
# case·$DISTRO_BINARY_COMPAT·in
# ubuntu)
# DISTRO_NAME="Jaunty·Puppy"
# DISTRO_FILE_PREFIX="upup"
# DISTRO_COMPAT_VERSION="jaunty"
# ;;
# debian)
# DISTRO_NAME="Lenny·Puppy"
# DISTRO_FILE_PREFIX="dpup"
# DISTRO_COMPAT_VERSION="lenny"
# ;;
# slackware)
# DISTRO_NAME="Slack·Puppy"
# DISTRO_FILE_PREFIX="spup"
# DISTRO_COMPAT_VERSION="12.2"
# ;;
# arch)
# DISTRO_NAME="Arch·Puppy"
# DISTRO_FILE_PREFIX="apup"
# DISTRO_COMPAT_VERSION="200904"
# ;;
# t2)
# DISTRO_NAME="T2·Puppy"
# DISTRO_FILE_PREFIX="tpup"
# DISTRO_COMPAT_VERSION="puppy5"
# ;;
# puppy)·#built·entirely·from·Puppy·v2.x·or·v3.x·or·4.x·pet·pkgs.
# DISTRO_NAME="Puppy"
# DISTRO_FILE_PREFIX="pup"·#"ppa"·#"ppa4"·#"pup2"··#pup4··###CHANGE·AS·REQUIRED,·recommend·limit·four·characters###
# DISTRO_COMPAT_VERSION="4"·#"2"··#4·····###CHANGE·AS·REQUIRED,·recommend·single·digit·5,·4,·3,·or·2###
# ;;
# esac
# PUPMODE=2
# KERNVER=2.6.30.9-i586-dpup005-Celeron2G
# SATADRIVES='·sda'
# USB_SATAD=''
# PUP_HOME='/'
# PDEV1='sda2'
# Linux·puppypc·2.6.30.9-i586-dpup005-Celeron2G·#6·SMP·Sat·Jan·15·13:35:51·GMT-8·2011·i686·GNU/Linux
# Xserver=/usr/X11R7/bin/Xorg
# $LANG=de_DE@euro
# today=Sa·21.·Apr·19:35:49·GMT+1·2012
#
# TODO : adjust installpkg.sh
# TODO : add support for .Z compression ie for some CMAKE source
#       , probably .zip or other common Windows compressions
#
#
########################################################################

Version='1.1-getopts Macpup_F3-Puppy-Linux_4.3.0/2 KRG'

usage (){
MSG="
$0 [-h -V -v -d] FILE_NAME_TO_INSTALL

    Puppy Linux .pet installer script .

    Needs at least the parameter FILE_NAME_TO_INSTALL.ext

    Currently supported file formats/.ext :

    original : .pet
    new      : .b2pet,.lopet,.lapet,.xzpet
    other    : .tgz,.tar.gz,.deb,.rpm

    [partly unsupported : .pup]

    Depends on :
    pet2tgz, installpkg.sh, tar, gzip, dpkg-pkg, rpm
    [,bzip2,lzop,lzma,xz]


    OPTIONS: -h:ici,-V:version_info,-d:debug,-v:verbose
    "
    if [ "$DISPLAY" ];then
    if [ "$1" != '0' ];then BG='red';else BG='green';fi
    xmessage -bg $BG "$MSG"
    else
    echo "$MSG";fi
    exit $1
}
get_options(){
while getopts hVvd opt;do echo $opt
case $opt in
h) usage 0;;
V) echo -e "\n$0: Version '$Version'\n";exit 0;;
v) VERB=-v;L_VERB=--verbose;A_VERB=-verbose;ME_VERB=1;OUT=/dev/stdout;ERR=/dev/stderr;;
d) set -x;DEBUG=1;;
*) :;; #usage 1;;
esac;done
}
OUT=/dev/null;ERR=/dev/null
[ ! "$1" ] && usage 1
echo 1:"$1"
echo -n 2:
echo "$1" | grep '^\-'
if [ "`echo "$1" | grep '^\-'`" ];then
echo 3:"$1" |sed 's|\([-_\.][0-9\.]*\)\(\.[[:alpha:][\.2]]$\)|\1|'
[ -f "`echo "$1" |sed 's|\([-_\.][0-9\.]*\)\(\.[[:alpha:][\.2]]$\)|\1|;s|^-|\-|'`" ] || { echo '1 get_options';get_options $@; }
#fn=`echo "$1" |sed 's|\([-_\.][0-9\.]*\)\(\.[[:alpha:][\.2]]$\)|\1|;s|^-||'`
#echo 4:"$fn"
#grep_fn=`echo "$1" |sed -r 's~([[:punct:]])~\\\\\1~g'`
#echo 5:"$grep_fn"
#'geany
##[ -e "$fn" ] || get_options
#pwd
#ls | grep -w "$grep_fn"
#pwd
#ls -1
#pwd
if [[ "`ls -1 | grep -w "$grep_fn"`" = "" ]];then echo "2:Running getopts function"; get_options $@;fi
#pwd
fi
while [ "$2" ];do shift;done

#mkdir -p /tmp/PetGet  ##+++2011_10_25
TEMP_D=/tmp/PetGet  ##+++2012-05-10
mkdir -p $TEMP_D  ##+++2011_10_25

export LANG=C
. /etc/DISTRO_SPECS #has DISTRO_BINARY_COMPAT, DISTRO_COMPAT_VERSION

PASSEDPARAM="$1"

if [ "`echo -n "$PASSEDPARAM" | grep '^\\-'`" != "" ];then
 #remove a package...
 PKGNAME=`echo -n "$PASSEDPARAM" | cut -c 2-99`
 TREE2="$PKGNAME"
 export TREE2
 /usr/local/petget/removepreview.sh
 exit
fi

#want to install a pkg...

COMPAT_EXT=""
case $DISTRO_BINARY_COMPAT in
 slackware)
  COMPAT_EXT=".tgz"
 ;;
 debian|ubuntu)
  COMPAT_EXT=".deb"
 ;;
 arch)
  COMPAT_EXT=".tar.gz"
 ;;
esac

#what type is it...
PASSEDBASE=`basename "$PASSEDPARAM"`
case $PASSEDBASE in
 *.pet) EXT=".pet";;
 *.pup) EXT='.pup';;
 *.deb) EXT=".deb";;
 *.tgz) EXT=".tgz";;
 *.txz) EXT=".txz";;
 #*.tar.gz) EXT=".tar.gz";;
 *.tar.lzma|*.tar.lzm|*.tar.lza|*.tar.lzo|*.tar.lzp|*.tar.lzop|*.tar.bz2|*.tar.xz|*.tar.gz)
 EXT='.'`echo "$PASSEDBASE"|rev|cut -f1,2 -d.|rev`
  ;;
 *rpm)    EXT='.rpm';;
 *.b2pet) EXT='.b2pet';;
 *.lopet) EXT='.lopet';;
 *.lapet) EXT='.lapet';;
 *.xzpet) EXT='.xzpet';;
 *)
  EXT=""
 ;;
esac

case $PASSEDBASE in
*.tar.*) TAR_COMPRESS_EXT="${DLPKG_BASE##*\.}"
esac

#download if required...
PKGNAME=""; _PKG_ROOT=1
if [ "`echo -n "$PASSEDPARAM" | grep -E '^ftp|^http'`" != "" ];then
 cd /root
 rxvt -title "Puppy Package Manager: download" -bg orange -geometry 80x10 -e wget "$PASSEDPARAM"
 PKGPATH=`dirname "$PASSEDPARAM"` #really a url.
 FULLPKGNAME=`basename "$PASSEDPARAM"`
 PKGMAIN=`basename "$PASSEDPARAM" ${EXT}`
 if [ ! -f "$FULLPKGNAME" ];then
  xmessage -bg red "Sorry, failed to download $FULLPKGNAME"
  exit
 fi
else
 #get rid of any leading '+'...
 echo $LINENO
 PASSEDPARAM=`echo -n "$PASSEDPARAM" | sed -e 's%^+%%'`
 FIRSTCHAR=`echo -n "$PASSEDPARAM" | cut -c 1`
 if [ "$FIRSTCHAR" = "/" -o "$FIRSTCHAR" = "." ];then
  PKGPATH=`dirname "$PASSEDPARAM"`
  FULLPKGNAME=`basename "$PASSEDPARAM"`
  PKGMAIN=`basename "$PASSEDPARAM" ${EXT}`
 else
  PKGPATH=`pwd`
  if [ "$EXT" = "" ];then
   PKGMAIN="$PASSEDPARAM"
   FULLPKGNAME="${PKGMAIN}.pet"
   EXT=".pet"
  else
   FULLPKGNAME=`basename "$PASSEDPARAM"`
   PKGMAIN=`basename "$PASSEDPARAM" ${EXT}`
  fi
 fi
 #cp -f "${PKGPATH}/${FULLPKGNAME}" /root/ 2>$ERR #v424 fix if spaces in path.
 [ -f "$HOME/${FULLPKGNAME}" ] || { echo "File not in $HOME/ directory";cp -f "${PKGPATH}/${FULLPKGNAME}" $HOME/; _PKG_ROOT=''; } #v424 fix if spaces in path.
fi
originPKGPATH="$PKGPATH" #w482
PKGPATH=/root

unset SIMPLE_BACKUP_SUFFIX
unset VERSION_CONTROL

#split PKGMAIN, ex: FULLPKGNAME=xvidtune-1.0.1-i486-1.tgz has PKGNAME=xvidtune-1.0.1
 case $EXT in
  .deb)
   #deb ex: xsltproc_1.1.24-1ubuntu2_i386.deb  xserver-common_1.5.2-2ubuntu3_all.deb
   DB_nameonly=`echo -n "$PKGMAIN" | cut -f 1 -d '_'`
   DB_pkgrelease=`echo -n "$PKGMAIN" | rev | cut -f 2 -d '_' | cut -f 1 -d '-' | rev`
   prPATTERN="s%\\-${DB_pkgrelease}.*%%"
   PKGNAME=`echo -n "$PKGMAIN" | sed -e "$prPATTERN"`
   DB_version=`echo "$PKGNAME" | cut -f 2 -d '_'`
  ;;
  .pet)
   PKGNAME="$PKGMAIN"
   DB_version=`echo -n "$PKGNAME" | grep -o '[_-][0-9].*' | sed -e 's%^\-%%'`  ##+2012-02-06 changed \\- to [-_]
   xDB_version=`echo -n "$DB_version" | sed -e 's%\\-%\\\\-%g' -e 's%\\.%\\\\.%g'`
   xPATTERN="s%${xDB_version}%%"
   DB_nameonly=`echo -n "$PKGNAME" | sed -e "$xPATTERN" -e 's%\\-$%%'`
   DB_pkgrelease=""
  ;;
  .pup)
   PKGNAME="$PKGMAIN"
   DB_version=`echo -n "$PKGNAME" | grep -o '[_-][0-9].*' | sed -e 's%^\-%%'`  ##+2012-02-06 changed \\- to [-_]
   xDB_version=`echo -n "$DB_version" | sed -e 's%\\-%\\\\-%g' -e 's%\\.%\\\\.%g'`
   xPATTERN="s%${xDB_version}%%"
   DB_nameonly=`echo -n "$PKGNAME" | sed -e "$xPATTERN" -e 's%\\-$%%'`
   DB_pkgrelease=""
  ;;
  .tgz|.txz)
   #slack ex: xvidtune-1.0.1-i486-1.tgz  printproto-1.0.4-noarch-1.tgz
   PKGNAME=`echo -n "$PKGMAIN" | sed -e 's%\\-i[3456]86.*%%' -e 's%\\-noarch.*%%'`
   DB_version=`echo -n "$PKGNAME" | grep -o '\\-[0-9].*' | sed -e 's%^\\-%%'`
   xDB_version=`echo -n "$DB_version" | sed -e 's%\\-%\\\\-%g' -e 's%\\.%\\\\.%g'`
   xPATTERN="s%${xDB_version}%%"
   DB_nameonly=`echo -n "$PKGNAME" | sed -e "$xPATTERN" -e 's%\-$%%'`
   DB_pkgrelease=`echo -n "$PKGMAIN" | sed -e 's%.*\\-i[3456]86%%' -e 's%.*\\-noarch%%' -e 's%^\\-%%'`
  ;;
  .tar.gz|.tar.bz2)
   #arch ex: xproto-7.0.14-1-i686.pkg.tar.gz  trapproto-3.4.3-1.pkg.tar.gz
   PKGNAME=`echo -n "$PKGMAIN" | sed -e 's%\\-i[3456]86.*%%' -e 's%\\.pkg$%%' | rev | cut -f 2-9 -d '-' | rev`
   DB_version=`echo -n "$PKGNAME" | grep -o '\\-[0-9].*' | sed -e 's%^\\-%%'`
   xDB_version=`echo -n "$DB_version" | sed -e 's%\\-%\\\\-%g' -e 's%\\.%\\\\.%g'`
   xPATTERN="s%${xDB_version}%%"
   DB_nameonly=`echo -n "$PKGNAME" | sed -e "$xPATTERN" -e 's%\\-$%%'`
   DB_pkgrelease=`echo -n "$PKGMAIN" | sed -e 's%\\-i[3456]86.*%%' -e 's%\\.pkg$%%' | rev | cut -f 1 -d '-' | rev`
  ;;
  .rpm)
  #fedora ex: acetoneiso-2.3-2.mga2.i586.rpm
  #           acidrip-0.14-10.mga1.noarch.rpm
   PKGNAME=`echo -n "$PKGMAIN" | sed -e 's%\\.i[3456]86.*%%' -e 's%\\.noarch.*%%' -e 's%\\.mga[0-9]$%%' | rev | cut -f 2-9 -d '-' | rev`
   DB_version=`echo -n "$PKGNAME" | grep -o '\\-[0-9].*' | sed -e 's%^\\-%%'`
   xDB_version=`echo -n "$DB_version" | sed -e 's%\\-%\\\\-%g' -e 's%\\.%\\\\.%g'`
   xPATTERN="s%${xDB_version}%%"
   DB_nameonly=`echo -n "$PKGNAME" | sed -e "$xPATTERN" -e 's%\\-$%%'`
   DB_pkgrelease=`echo -n "$PKGMAIN" | sed -e 's%\\.i[3456]86.*%%' -e 's%\\.noarch.*%%' -e 's%.*mga%%'`
  ;;
  .bzpet|.lopet|.lapet|.xzpet)
   PKGNAME="$PKGMAIN"
   DB_version=`echo -n "$PKGNAME" | grep -o '\\-[0-9].*' | sed -e 's%^\-%%'`
   xDB_version=`echo -n "$DB_version" | sed -e 's%\\-%\\\\-%g' -e 's%\\.%\\\\.%g'`
   xPATTERN="s%${xDB_version}%%"
   DB_nameonly=`echo -n "$PKGNAME" | sed -e "$xPATTERN" -e 's%\\-$%%'`
   DB_pkgrelease=""
   ;;
 esac

cd "$PKGPATH" #well, this is /root

#confirm want to install...
export INSTALL_DIALOG="<window title=\"Puppy Package Manager\" icon-name=\"gtk-about\">
  <vbox>
  <pixmap><input file>/usr/local/lib/X11/pixmaps/question.xpm</input></pixmap>
   <text><label>Click 'OK' button to confirm that you wish to install this package:</label></text>
   <text use-markup=\"true\"><label>\"<b>${FULLPKGNAME}</b>\"</label></text>
   <hbox>
    <button ok></button>
    <button><label>Examine Package</label>
    <action>EXIT:examine</action></button>
    <button cancel></button>
   </hbox>
  </vbox>
 </window>"
RETPARAMS=`gtkdialog3 --program=INSTALL_DIALOG`
eval "$RETPARAMS"
#[ "$EXIT" != "OK" ] && exit
echo "$RETPARAMS"
echo "$EXIT"
if [ "$EXIT" != "OK" -a "$EXIT" != "examine" ];then
echo "Exiting $0"
[ ! "${_PKG_ROOT}" ] && rm "$HOME/${FULLPKGNAME}"
exit $?;fi
if [ "$EXIT" = "OK" ];then
#find entry in databases...
#pkgname|nameonly|version|pkgrelease|category|size|path|fullfilename|dependencies|description|
#optionally on the end: compileddistro|compiledrelease|repo| (fields 11,12,13)
pPATTERN='^'"$PKGNAME"'|'
if [ "$EXT" = ".pet" ];then
 DB_ENTRY=`cat /root/.packages/Packages-puppy-* | grep "$pPATTERN" | sort -r | head -n 1`
else
 DB_ENTRY=`cat /root/.packages/Packages-${DISTRO_BINARY_COMPAT}-* | grep "$pPATTERN" | head -n 1`
fi

#w482 doesn't matter if incomplete, installpkg.sh will read .desktop file for description and category...
#also, if .pet pkg has pet.specs, that will get written to /root/.packages/user-packages-installed
if [ "$DB_ENTRY" = "" ];then
 DB_ENTRY="${PKGNAME}|${DB_nameonly}|${DB_version}|${DB_pkgrelease}||||${FULLPKGNAME}|||"
fi

#w482 hack, if pkg was originally at /root then don't delete it...
[ "$originPKGPATH" = "$PKGPATH" ] && cp -f ${PKGPATH}/${FULLPKGNAME} ${PKGPATH}/${FULLPKGNAME}-TEMPBACKUP

#install pkg...
rm -f $TEMP_D/petget_missing_dbentries-Packages-* 2>$ERR
rm -f $TEMP_D/petget-installed-pkgs-log 2>$ERR
echo "$DB_ENTRY" > $TEMP_D/petget_missing_dbentries-Packages-alien
/usr/local/petget/installpkg.sh $PKGPATH/$FULLPKGNAME
RETVAL=$?

#installpkg.sh has already done this...
rm -f $PKGPATH/$FULLPKGNAME 2>$ERR
rm -f $PKGPATH/${PKGNAME}.tar.gz 2>$ERR

#w482 hack, if pkg was originally at /root then don't delete it...
[ "$originPKGPATH" = "$PKGPATH" ] && mv -f ${PKGPATH}/${FULLPKGNAME}-TEMPBACKUP ${PKGPATH}/${FULLPKGNAME}

#announce result...
if [ $RETVAL -ne 0 -o ! -s $TEMP_D/petget-installed-pkgs-log ];then
if [ $RETVAL != 0 ];then ADD_MSG='(Something went wrong in the installpkg.sh)'
 else ADD_MSG="($TEMP_D/petget-installed-pkgs-log seems not to be OK)";fi
 export FAIL_DIALOG="<window title=\"Puppy Package Manager\" icon-name=\"gtk-about\">
  <vbox>
  <pixmap><input file>/usr/local/lib/X11/pixmaps/error.xpm</input></pixmap>
   <text use-markup=\"true\"><label>\"<b>Error, package ${FULLPKGNAME} failed to install.</b>\"</label></text>
   <hbox>
    <button ok></button>
   </hbox>
  </vbox>
 </window>"
 gtkdialog3 --program=FAIL_DIALOG
 exit
fi

INSTALLEDMSG=`cat $TEMP_D/petget-installed-pkgs-log`
MENUMSG=""
INSTALLEDCAT=`echo -n "$INSTALLEDMSG" | rev | cut -f 1 -d ' ' | rev`
if [ "$INSTALLEDCAT" = "none" ];then
 MENUMSG="<text><label>...note, this package does not have a menu entry.</label></text>"
else
 MENUMSG="<text><label>...look in '${INSTALLEDCAT}' in the menu (bottom-left of screen) to run the application.</label></text>"
fi

#installpkg.sh will have logged to /tmp/petget-installed-pkgs-log
export INSTALL_DIALOG="<window title=\"Puppy Package Manager\" icon-name=\"gtk-about\">
 <vbox>
 <pixmap><input file>/usr/local/lib/X11/pixmaps/ok.xpm</input></pixmap>
  <text><label>The following package has been successfully installed:</label></text>
  <text use-markup=\"true\"><label>\"<b>${INSTALLEDMSG}</b>\"</label></text>
  ${MENUMSG}
  <hbox>
   <button ok></button>
  </hbox>
 </vbox>
</window>
"
gtkdialog3 --program=INSTALL_DIALOG

RESTARTMSG="Please wait, updating help page and menu..."
[ "`pidof jwm`" != "" ] && RESTARTMSG="Please wait, updating help page and menu (the screen will flicker!)..." #w482
[ "$INSTALLEDCAT" = "none" ] && RESTARTMSG="Please wait, updating help page..."
yaf-splash -font "8x16" -outline 0 -margin 4 -bg orange -text "${RESTARTMSG}" &
X3PID=$!
echo "$0:$LINENO"
#master help index has to be updated...
/usr/sbin/indexgen.sh
#Reconstruct configuration files for JWM, Fvwm95, IceWM...
if [ "$INSTALLEDCAT" != "none" ];then
 /usr/sbin/fixmenus
 [ "`pidof jwm`" != "" ] && jwm -restart #w482
fi

kill $X3PID

else  #examine package

function view_temp(){
rox /tmp/"${FULLPKG}"/
CONTENT=`find ./"${FULLPKG}"/`
CONTENT=`echo "$CONTENT" |sed "s|^\./$FULLPKG||"`
for cont in $CONTENT; do
[ -d "$cont" ] && continue
if [ -e "$cont" ];then
echo "$cont" >>files_replace.lst
else
echo "$cont" >>files_new.lst
fi
done
sleep 1
gxmessage -buttons "OK :140, Delete:141" "Click Delete button to erase this
examination directory ,
otherwise just OK"
if [ "$?" = '141' ];then
cd /root
rox -D /tmp/"${FULLPKG}"/
sleep 1
rm -rf /tmp/"${FULLPKG}"/
fi
}

#PKGPATH=`dirname "$PASSEDPARAM"`
#FULLPKGNAME=`basename "$PASSEDPARAM"`
#PASSEDBASE=`basename "$PASSEDPARAM"`

FULLPKG="${FULLPKGNAME%\.*}";echo $FULLPKG
EXTN="${FULLPKGNAME##*.}";echo $EXTN
mkdir -p /tmp/"$FULLPKG"
if [ "${_PKG_ROOT}" ];then
cp "$PKGPATH/$FULLPKGNAME" /tmp/"${FULLPKG}"/
else
mv "$PKGPATH/$FULLPKGNAME" /tmp/"${FULLPKG}"/
fi
cd /tmp/"${FULLPKG}"/

VIEW_TMP=1

case $EXTN in
pet)
pet2tgz ${FULLPKGNAME}
tar xzf ${FULLPKG}.tar.gz
;;
pup)
gunzip ${FULLPKGNAME}
;;

tar.gz|tgz)

if [ "$EXTN" = 'tgz' ];then
mv "${FULLPKGNAME}" "${FULLPKG}".tar.gz;fi

tar $VERB  xzf "${FULLPKG}".tar.gz 2>$ERR
if [ "$?" -ne 0 ];then
gunzip $VERB -f "${FULLPKG}".tar.gz
tar $VERB xf "${FULLPKG}".tar
fi

;;

tar.bz2)
tar xjf "${FULLPKG}".tar.bz2
;;

tar.xz|txz)

if [ "$EXT" = 'txz' ];then
mv "${FULLPKGNAME}" "${FULLPKG}".tar.xz;fi

xz -d "${FULLPKG}".tar.xz
tar xf "${FULLPKG}".tar
;;

deb)
mkdir -p /tmp/${FULLPKG}
dpkg-deb -x ${FULLPKGNAME} /tmp/${FULLPKG}
;;

b2pet)
pet2tgz -b ${FULLPKGNAME}
tar $VERB xjf ${FULLPKG}.tar.bz2
;;

lopet)
pet2tgz -l ${FULLPKGNAME}
lzop $VERB -d ${FULLPKG}.tar.lzo
tar $VERB xf ${FULLPKG}.tar
;;

lapet)
pet2tgz -L ${FULLPKGNAME}
lzma $VERB -d ${FULLPKG}.tar.lzma
tar $VERB xf ${FULLPKG}.tar
;;

xzpet)
pet2tgz -x ${FULLPKGNAME}
xz $VERB -d ${FULLPKG}.tar.xz
tar $VERB xf ${FULLPKG}.tar
;;

rpm)
RPM2CPIO="rpm2cpio"
[ "`which rpm2cpio2`" ] && RPM2CPIO='rpm2cpio2'
$RPM2CPIO ${FULLPKGNAME} 2>$TEMP_D/_rpm2cpio.errs| cpio -d -i -m 2>>$TEMP_D/_rpm2cpio.errs
if [ "$?" != '0' ];then
xmessage -bg red -file $TEMP_D/_rpm2cpio.errs
exec petget "$PASSEDPARAM"
fi
#tar xf ${FULLPKG}.tar
#trustedgrub-1.1.3-15.1.src.rpm
#included TrustedGRUB-1.1.3.tgz
FIND_PATTERN=`echo "$FULLPKG" | tr -d '[[:punct:]][[:digit:]]'| sed 's|src$||'`
echo "FIND_PATTERN=$FIND_PATTERN'"
#NEW_FULLPKG_NAME=`find -iname "*$FIND_PATTERN*" |grep -v '\.rpm$'`
NEW_FULLPKG_NAME=`find -iname "*$FIND_PATTERN*" |grep -E '\.tgz$|\.tar$|\.gz$|\.bz2$|\.lzo$|\.lzma$|\.xz$'`
echo "NEW_FULLPKG_NAME='$NEW_FULLPKG_NAME'"
#TODO if more than one ;(

if [ "$NEW_FULLPKG_NAME" ];then
EXT_1=`echo "$NEW_FULLPKG_NAME"|rev|cut -f 1 -d'.'|rev`
EXT_2=`echo "$NEW_FULLPKG_NAME"|rev|cut -f 2 -d'.'|rev`
echo "EXT_1='$EXT_1' EXT_2='$EXT_2'"
case $EXT_1 in
tgz)
cp "$NEW_FULLPKG_NAME" explore.tar.gz
tar $VERB xzf explore.tar.gz
;;
tar)
tar $VERB -xf "$NEW_FULLPKG_NAME"
;;
*)
 case $EXT_2 in
 tar)
  case $EXT_1 in
  gz)
  gunzip $VERB -f "$NEW_FULLPKG_NAME"
  ;;
  bz2)
  bunzip2 $VERB -f "$NEW_FULLPKG_NAME"
  ;;
  lzo)
  lzop $VERB -f -d "$NEW_FULLPKG_NAME"
  ;;
  lzma)
  lzma $VERB -f -d "$NEW_FULLPKG_NAME"
  ;;
  xz)
  xz $VERB -f -d "$NEW_FULLPKG_NAME"
  ;;
  *):;; #VIEW_TMP='';;
  esac
  NEW_PKG_NAME=`echo "$NEW_FULLPKG_NAME" |sed "s|\.$EXT_1||"`
  echo "NEW_PKG_NAME='$NEW_PKG_NAME'"
  tar -xf "${NEW_PKG_NAME}"
 ;;
 ""|*) :  #VIEW_TMP=''
 ;;
 esac
;;
esac
 else
 :
 fi
#view_temp
;; ##rpm

*) VIEW_TMP=''
xmessage -bg red "'$EXTN' examination not yet implemented"
;;
esac

if [ "${VIEW_TMP}" ];then
view_temp;fi

exec petget "$PASSEDPARAM"
fi
###END###
