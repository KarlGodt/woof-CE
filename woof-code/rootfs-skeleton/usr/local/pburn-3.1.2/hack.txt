bash-3.00# grep fdisk *
bash-3.00# grep disktype *
bash-3.00# grep blkid *
bash-3.00# grep wodim *
func:		ATIP="`wodim dev=/dev/sr0 -atip`"
pburn:		cdrkit) export CDRECORD="wodim"; export CDDA2WAV="icedax"; export MKISOFS="genisoimage";;
pburn:	export CDRECORD="wodim"; export CDDA2WAV="icedax"; export MKISOFS="genisoimage"
bash-3.00# cd
cd               cdda-player      cdir             cdreset
cd-drive         cdda2mp3         cdloop           cdrskin
cd-info          cdda2ogg         cdown            cdrwtool
cd-paranoia      cdda2wav         cdp              cdshuffle
cd-read          cddb_query       cdparanoia       cdstop
cdadd            cddetect         cdpause          cdtool2cddb
cdburner-wizard  cddetect_quick   cdplay           cdvolume
cdclose          cdeject          cdrdao
cdctrl           cdinfo           cdrecord
bash-3.00# grep 'cd\-drive' *
bash-3.00# grep 'cd\-info' *
bash-3.00# grep 'cd\-paranoia' *
bash-3.00# grep 'cd\-read' *
bash-3.00# grep 'cdadd' *
bash-3.00# grep 'cdclose' *
bash-3.00# grep 'cdctrl' *
bash-3.00# grep 'cdda\-player' *
bash-3.00# grep 'cdda2mp3' *
bash-3.00# grep 'cdda2ogg' *
bash-3.00# grep 'cdda2wav' *
func:	if type icedax ; then RIPPER=icedax; else RIPPER=cdda2wav; fi
pburn:		cdrtools) export CDRECORD="cdrecord"; export CDDA2WAV="cdda2wav"; export MKISOFS="mkisofs";;
pburn:	if which cdrecord ; then export CDRECORD="cdrecord"; export CDDA2WAV="cdda2wav"; export MKISOFS="mkisofs"; fi
bash-3.00#

bash-3.00# grep 'cddb_query' *
bash-3.00# grep 'cddetect' *
func:	if [ "`cddetect_quick`" != "`cat $WORKDIR/cddetect 2> /dev/null`" ]; then
func:		cddetect_quick > $WORKDIR/cddetect
func_gui: <input>"'while [ ! -f $WORKDIR/end_while ]; do if [ "`cddetect_quick`" !=  "`cat $WORKDIR/cddetect 2> /dev/null`" ] || [ ! -s $WORKDIR/cddetect ] || [ "`cat $WORKDIR/burn`" != "`cat $WORKDIR/burn_old`" ]; then nice -18 $APPDIR/func -update_sizebar; fi; sleep 0.3; done'"</input>
bash-3.00#
bash-3.00# grep 'cdeject' *
bash-3.00# grep 'cdinfo' *
bash-3.00# grep 'cdir' *
bash-3.00# grep 'cdloop' *
bash-3.00# grep 'cdown' *
bash-3.00# grep 'cdp' *
bash-3.00# grep 'cdparanoia' *
bash-3.00# grep 'cdpause' *
bash-3.00# grep 'cdplay' *
bash-3.00# grep 'cdrdao' *
func_toc_cue:			if [ "`which cdrdao`" ]; then
func_toc_cue:				echo "cdrdao write --device $BURNDEV \"$FILENAME\"" >> $WORKDIR/exec
bash-3.00#

bash-3.00# grep 'cdrecord' *
func:	# cdrecord -toc must be run before dvd-mediainfo to ensure spin-up of disc
func_toc_cue:		IMAGE_FILE="`echo $CHOOSER | sed -e '/.toc//g'`" #cdrecord doesn't call the *.toc file, but its image
pburn:		cdrtools) export CDRECORD="cdrecord"; export CDDA2WAV="cdda2wav"; export MKISOFS="mkisofs";;
pburn:	if which cdrecord ; then export CDRECORD="cdrecord"; export CDDA2WAV="cdda2wav"; export MKISOFS="mkisofs"; fi
bash-3.00#

bash-3.00# grep 'cdreset' *
bash-3.00# grep 'cdrskin' *
bash-3.00# grep 'cdrwtool' *
bash-3.00# grep 'cdshuffle' *
bash-3.00# grep 'cdstop' *
bash-3.00# grep 'cdtool2scddb' *
bash-3.00# grep 'cdvolume' *
