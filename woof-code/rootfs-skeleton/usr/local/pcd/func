#!/bin/bash
#
# New header by Karl Reimer Godt, September 2014
  _TITLE_="Puppy_func"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="/usr/local/pcd/func"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
source /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in 1; do shift; done; }

_trap

}
# End new header
#
#pcd
#Copyright 2009,2010
#Sigmund Berglund

case $1 in
-probe)
	#slpash
	echo "$LOC300 ....." > $WORKDIR/pcd-splashtext
	echo 0 > $WORKDIR/pcd-splash #reset progress bar
	. $APPDIR/box_splash &
	#---
	$APPDIR/func -stop
	echo -e "\c" > $WORKDIR/pcd-cdda
	echo -e "\c" > $WORKDIR/pcd-tracks
	echo "»»» pCD «««" > $WORKDIR/pcd-playing
	#read internal cd-text info
	cdda2wav dev=$DEVICE -info-only -no-infofile > $WORKDIR/pcd-cddb 2>&1 &
	while [ ! "$BREAK" ]; do
		#is disc an audio-CD
		if [ "`grep 'no audio' $WORKDIR/pcd-cddb`" ] || [ "`grep 'Read TOC size failed' $WORKDIR/pcd-cddb`" ] || [ "`grep 'load cdrom' $WORKDIR/pcd-cddb`" ]; then
			ERROR="$LOC400"
			echo -e "\c" > $WORKDIR/pcd-cddb
			BREAK=true
		fi
		#don't run complete cdda2wav check. kill it when we got enough
		if [ "`grep ISRC $WORKDIR/pcd-cddb`" ] || [ "`grep 'load cdrom' $WORKDIR/pcd-cddb`" ] ; then
			BREAK=true
			for I in `ps | grep cdda2wav | awk '{print $1}'`; do kill -9 $I 2> /dev/null; done
		fi
	done
	[ "`grep 'load cdrom' $WORKDIR/pcd-cddb`" ] && ERROR="$LOC401"
	#if no internal cd-text, try www
	LANG=C wget -S --spider -T 1 puppylinux.com 2> $WORKDIR/pcd-tmp #check internet connection
	if [ "`grep 'CD-Text: not detected' $WORKDIR/pcd-cddb`" ] && [ "`grep 'connected' $WORKDIR/pcd-tmp`" ]; then
		cdda2wav dev=$DEVICE -cddb=1 -info-only -no-infofile > $WORKDIR/pcd-cddb 2>&1 &
		while [ ! "$BREAK2" ]; do
			#don't run complete cdda2wav check. kill it when we got enough
			if [ "`grep ISRC $WORKDIR/pcd-cddb`" ] || [ "`grep 'load cdrom' $WORKDIR/pcd-cddb`" ]; then
				BREAK2=true
				for I in `ps | grep cdda2wav | awk '{print $1}'`; do kill -9 $I 2> /dev/null; done
			fi
		done
	fi
	cat $WORKDIR/pcd-cddb | grep 'Track ' | grep \' | cut -d ':' -f 2- | cut -d '[' -f 1 | cut -c 3- | sed -e "s/.$//" > $WORKDIR/pcd-tracks
	ALBUM=`grep 'Album title' $WORKDIR/pcd-cddb | cut -d "'" -f 2`
	ARTIST=`grep 'Album title' $WORKDIR/pcd-cddb | cut -d '[' -f 2 | cut -d ']' -f 1 | cut -d ' ' -f 2-`
	[ ! "$ARTIST" ] && ARTIST="$LOC301"
	[ ! "$ALBUM" ] && ALBUM="$LOC301"
	#add length
	NR=1
	while read I; do
		COL=$NR
		if [ $COL -gt 95 ]; then COL=`expr $NR - 95`
		elif [ $COL -gt 90 ]; then COL=`expr $NR - 90`
		elif [ $COL -gt 85 ]; then COL=`expr $NR - 85`
		elif [ $COL -gt 80 ]; then COL=`expr $NR - 80`
		elif [ $COL -gt 75 ]; then COL=`expr $NR - 75`
		elif [ $COL -gt 70 ]; then COL=`expr $NR - 70`
		elif [ $COL -gt 65 ]; then COL=`expr $NR - 65`
		elif [ $COL -gt 60 ]; then COL=`expr $NR - 60`
		elif [ $COL -gt 55 ]; then COL=`expr $NR - 55`
		elif [ $COL -gt 50 ]; then COL=`expr $NR - 50`
		elif [ $COL -gt 45 ]; then COL=`expr $NR - 45`
		elif [ $COL -gt 40 ]; then COL=`expr $NR - 40`
		elif [ $COL -gt 35 ]; then COL=`expr $NR - 35`
		elif [ $COL -gt 30 ]; then COL=`expr $NR - 30`
		elif [ $COL -gt 25 ]; then COL=`expr $NR - 25`
		elif [ $COL -gt 20 ]; then COL=`expr $NR - 20`
		elif [ $COL -gt 15 ]; then COL=`expr $NR - 15`
		elif [ $COL -gt 10 ]; then COL=`expr $NR - 10`
		elif [ $COL -gt 5 ]; then COL=`expr $NR - 5`
		fi
		LENGTH="`grep -m 1 $NR'.(' $WORKDIR/pcd-cddb | cut -d "," -f $COL | cut -d '.' -f 2 | cut -d ' ' -f 2`"
		echo "$NR | $I | ($LENGTH)" | sed -e "s/((/(/g" >> $WORKDIR/pcd-cdda
		NR=`expr $NR + 1`
	done < $WORKDIR/pcd-tracks
	#manually build list if no cd-text info available
	if [ ! "`cat $WORKDIR/pcd-cdda`" ]; then
		NR=1; LENGTH=0
		while [ "$LENGTH" ]; do
			COL=$NR
			if [ $COL -gt 95 ]; then COL=`expr $NR - 95`
			elif [ $COL -gt 90 ]; then COL=`expr $NR - 90`
			elif [ $COL -gt 85 ]; then COL=`expr $NR - 85`
			elif [ $COL -gt 80 ]; then COL=`expr $NR - 80`
			elif [ $COL -gt 75 ]; then COL=`expr $NR - 75`
			elif [ $COL -gt 70 ]; then COL=`expr $NR - 70`
			elif [ $COL -gt 65 ]; then COL=`expr $NR - 65`
			elif [ $COL -gt 60 ]; then COL=`expr $NR - 60`
			elif [ $COL -gt 55 ]; then COL=`expr $NR - 55`
			elif [ $COL -gt 50 ]; then COL=`expr $NR - 50`
			elif [ $COL -gt 45 ]; then COL=`expr $NR - 45`
			elif [ $COL -gt 40 ]; then COL=`expr $NR - 40`
			elif [ $COL -gt 35 ]; then COL=`expr $NR - 35`
			elif [ $COL -gt 30 ]; then COL=`expr $NR - 30`
			elif [ $COL -gt 25 ]; then COL=`expr $NR - 25`
			elif [ $COL -gt 20 ]; then COL=`expr $NR - 20`
			elif [ $COL -gt 15 ]; then COL=`expr $NR - 15`
			elif [ $COL -gt 10 ]; then COL=`expr $NR - 10`
			elif [ $COL -gt 5 ]; then COL=`expr $NR - 5`
			fi
			LENGTH="`grep -m 1 $NR'.(' $WORKDIR/pcd-cddb | cut -d "," -f $COL | cut -d '.' -f 2 | cut -d ' ' -f 2`"
			[ "$LENGTH" ] && echo "$NR | Track$NR | ($LENGTH)" >> $WORKDIR/pcd-cdda
			NR=`expr $NR + 1`
		done 
	fi
 
	echo "$ARTIST" > $WORKDIR/pcd-ARTIST
	echo "$ALBUM" > $WORKDIR/pcd-ALBUM
	if [ ! "`cat $WORKDIR/pcd-cdda`" ]; then
		echo "|$ERROR" > $WORKDIR/pcd-cdda
	else #autoplay first song
		echo 1 > $WORKDIR/pcd-nr
		$APPDIR/func -play &
	fi
	echo 100 > $WORKDIR/pcd-splash #reset progress bar
	;;
-rip)
	if [ "`which asunder 2> /dev/null`" ]; then asunder &
	elif [ "`which ripoff 2> /dev/null`" ]; then ripoff &
	elif [ "`which pcdripper 2> /dev/null`" ]; then pcdripper &
	fi
	;;
-play)
	echo 0 > $WORKDIR/pcd-progress
	for I in `ps | grep cdda2wav | awk '{print $1}'`; do kill -9 $I 2> /dev/null; done
	for I in `ps | grep ffmpeg | awk '{print $1}'`; do kill -9 $I 2> /dev/null; done
	for I in `ps | grep aplay | awk '{print $1}'`; do kill -9 $I 2> /dev/null; done
	[ ! "`cat $WORKDIR/pcd-nr`" ] && echo 1 > $WORKDIR/pcd-nr
	CDDA=`cat $WORKDIR/pcd-nr`
	grep -m 1 $CDDA" | " $WORKDIR/pcd-cdda | cut -d '|' -f 2 > $WORKDIR/pcd-playing
	hdparm -E2 /dev/cdrom #avoid noise
	cdda2wav dev=/dev/cdrom -t $CDDA -Owav - 2> $WORKDIR/pcd-progress | aplay -f cd -D plughw &
	while [ ! "$NEXT" ]; do
		sleep 2
		TMP=`ps`
		[ ! "`echo $TMP | grep aplay`" ] && NEXT=true
	done
	$APPDIR/func -next
	;;
-stop)
	echo 0 > $WORKDIR/pcd-progress
	echo '»»» pCD «««' > $WORKDIR/pcd-playing
	for I in `ps | grep pcd | grep play | grep -vF 'while ['  | awk '{print $1}'`; do kill -9 $I 2> /dev/null; done
	for I in `ps | grep cdda2wav | grep -vF 'while [' | awk '{print $1}'`; do kill -9 $I 2> /dev/null; done
	for I in `ps | grep aplay | grep -vF 'while ['| awk '{print $1}'`; do kill -9 $I 2> /dev/null; done
	;;
-next)
	CDDA=`cat $WORKDIR/pcd-nr`
	CDDA=`expr $CDDA + 1`
	echo $CDDA > $WORKDIR/pcd-nr
	for I in `ps | grep pcd | grep play | grep -vF 'while [' | awk '{print $1}'`; do kill -9 $I 2> /dev/null; done
	$APPDIR/func -play &
	;;
-previous)
	CDDA=`cat $WORKDIR/pcd-nr`
	CDDA=`expr $CDDA - 1`
	echo $CDDA > $WORKDIR/pcd-nr
	for I in `ps | grep pcd | grep play | grep -vF 'while [' | awk '{print $1}'`; do kill -9 $I 2> /dev/null; done
	$APPDIR/func -play &
	;;
esac
# Very End of this file 'usr/local/pcd/func' #
###END###
