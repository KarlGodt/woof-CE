#!/bin/ash
#Barry Kauler 2005 www.puppylinux.com
# Frontend for XArchive.
# Well, I want this to be a universal archiver frontend for puppy.
#v4.00 25apr2008 BK: now have full dpkg-deb in Puppy.
#w474 support .delta, .bfe files.

  _TITLE_=pup_zip
_VERSION_=1.0omega
_COMMENT_="Frontend for XArchive"

MY_SELF="$0"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
[ "$HAVE_F4PUPPY5" ] || source /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST="PARAMIN"
ADD_PARAMETERS="PARAMIN : /path/to/archive.ext"
_provide_basic_parameters

TWO_HELP=''; TWO_VERSION=''; TWO_VERBOSE=''; TWO_DEBUG=''; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG="Switch to handle various archive formats."
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap
}

PARAMIN="$@"
#note, do not cd to directory this app is located in.
CDIR=`pwd`

WHOLE_FILE_NAME="$1"
DIRECTORY_OF_FILE="${WHOLE_FILE_NAME%/*}"
#[ "$WHOLE_FILE_NAME" = "${WHOLE_FILE_NAME%/*}" ] && DIRECTORY_OF_FILE='.'
[ "$WHOLE_FILE_NAME" = "${WHOLE_FILE_NAME%/*}" ] && DIRECTORY_OF_FILE="$PWD"
WFN="$WHOLE_FILE_NAME"
DOF="$DIRECTORY_OF_FILE"

if [ "$DEBUG" ]; then
echo "\$0     '$0'"
echo "\$1     '$1'"
echo "\$@     '$@'"
echo "PARAMIN='$PARAMIN'"
echo 'CDIR' "$CDIR"
fi

#checks
if [ "${0%/*}" = "${1%/*}" ]; then
 echo "Not changing into '${0%/*}' . Exiting ."
 exit 1
else
 #cd "$CDIR"
 [ "$DEBUG" ] || echo "$PWD"
fi
[ -f "$WFN" ] || { echo "'$WFN' : Not a regular file. Exiting.";exit 1; }

#VAR_1="\"`echo "$1"`\""
#VAR_1=`echo "$WFN" | sed 's#^#"#; s#$#"#'`
#echo ':'"$VAR_1"':'

_old_if(){
  if [[ "$1" =~ '.delta$' ]];then exe=xdelta_gui
elif [[ "$1" =~ '.bfe$' ]] ; then exe=bcrypt_gui
elif [[ "$1" =~ '.pet$' ]] ; then exe=petget
elif [ "`echo "$1" |grep -E '\.bz2$|\.gz$|\.Z$|\.lzo$|\.lzma$|\.xz$'`" ];then
  if [[ ! "$1" =~ '.tar.' ]];then
   case "${1##*\.}" in
   gz) exe=gunzip;;
   bz2)exe=bunzip2;;
   lzo)exe=lzop;OPT=-d;;
   lzma)exe=lzma;OPT=-d;;
   xz) exe=xz;OPT=-d;;
   Z)  exe=uncompress;;
   esac
  fi
fi
}

case $PARAMIN in
*.delta) exe=xdelta_gui;;
*.bfe)   exe=bcrypt_gui;;
*.pet|*.pup)   exe=petget;;
*.tar*)  exe=;;
*.gz)    exe=gunzip;;
*.bz2)   exe=bunzip2;;
*.lzo)   exe=lzop;OPT=-d;;
*.lzma)  exe=lzma;OPT=-d;;
*.xz)    exe=xz;OPT=-d;;
*.Z)     exe=uncompress;;
esac


if [ "$exe" ];then
#which "$exe" || { xmessage -bg red "'$exe' not installed (in PATH) ";exit 1; }
type "$exe" || { xmessage -bg red "'$exe' not installed (in PATH) ";exit 1; }

 case "$exe" in
 xdelta_gui|bcrypt_gui|petget)
 exec "$exe" "$1";;
 *)
 xmessage -buttons "Yes:101,No:105" "Do you want to decompress
$PARAMIN ?
"
 A="$?"
 [ "$A" -eq 105 ] && { xmessage -timeout 6 "Not done. ";exit 0; }
 #alt to xmessage :    yaf-splash -timeout 6 -text "Not done."
 if [ "$A" -eq 101 ] ; then
 [ "$exe" = 'lzop' ] || { cp "$1" "${DOF}"/tmp-"${1##*/}";RV=$?; }
 "$exe" $OPT "$1" ;RV=$((RV+$?))
 sync
 [ "$exe" = 'lzop' ] || { mv "${DOF}"/tmp-"${1##*/}" "$1";RV=$((RV+$?)); }
 exit $RV
 fi #xmessage
 ;;
 esac

fi # exe

##simple .lz extension:
if [ "`echo "$1" |grep '\.lz$'`" ];then
 cp "$1" "${DOF}"/tmp-"${1##*/}"
 lzma -S .lz -d "$1"
 if [ $? = 0 ] ; then
 mv "${DOF}"/tmp-"${1##*/}" "$1"
 else
  lzop -S.lz -d "$1"
  rm "${DOF}"/tmp-"${1##*/}"
 fi
 exit $?
fi

#in order of preference...
if [ ! "`type xarchive`" = "" ];then
echo XARCHIVE FILE
 XARCHIVE="xarchive"
else
 if [ ! "`type TkZip`" = "" ];then
 echo TKZIP FILE
  XARCHIVE="TkZip"
 else
  if [ ! "`type guitar`" = "" ];then
  echo GUITAR FILE
   XARCHIVE="guitar"
  else
  echo ERROR
   exec xmessage -bg "orange red" -center -title "PupZip: ERROR" "No archive GUI program found.
Please install XArchive."
  fi
 fi
fi

#the full alternatives, dotpups by GuestToo...
DPKGDEB="dpkg-deb"
#[ ! "`which dpkg-deb2`" = "" ] && echo $LINENO && DPKGDEB="dpkg-deb2"
[ "`type -path dpkg-deb2`" ] && DPKGDEB="dpkg-deb2"
RPM2CPIO="rpm2cpio"
#[ ! "`which rpm2cpio2`" = "" ] && echo $LINENO && RPM2CPIO="rpm2cpio2"
[ "`type -path rpm2cpio2`" ] && RPM2CPIO="rpm2cpio2"

if [ "$PARAMIN" = "" ];then
 #just start xarchive...
 echo "NO PARAMIN '$PARAMIN' : starting XARCHIVE"
 exec $XARCHIVE
fi

if [ "$XARCHIVE" = "xarchive" ];then
echo "XARCHIVE='$XARCHIVE'"
 MSGE="Drag and drop invocation of XArchive is achieved by dragging any file or
directory the \"pupzip\" icon on the desktop. If you drag one of the
recognised archived files, such as .tar.gz, .rpm, .deb, .zip, .tar.bz2,
it will open in XArchive and you will be given the opportunity to extract
it. If you drag an ordinary file to the desktop icon, such as for example
\"myfile.txt\", a XArchive will popup a dialog asking if you want to add
it to an existing archive or create a new one."
else
echo "$0:$LINENO: somethingelse"
 MSGE="There is support for drag-and-drop of archive files to the desktop icon,
however not for files and directories -- for that you need to have
XArchiver installed, the preferred archiver program for Puppy."
fi

if [ "$PARAMIN" = "--help" ];then
echo "PARAMIN is HELP"
 xmessage -bg "orange" -center -title "PupZip: help" "
This is a frontend to $XARCHIVE, which in turn is a frontend to the
archiver utilities in Puppy (such as gzip, bzip2, dpkg, rpm, zip).

Note: $XARCHIVE can be started in the conventional way via the menu.

$MSGE

PupZip can also be invoked from Rox by the \"Open With...\" menu,
by right-clicking on a file or directory."
 exit
fi


# REM: Is it a Normal file or an archive file ?

#NORMFILE=`echo -n "$PARAMIN" | grep -iv "\\.tar" | grep -iv "\\.bz" | grep -iv "\\.gz" | grep -iv "\\.rpm" | grep -iv "\\.deb" | grep -iv "\\.zip" | grep -iv "\\.tgz" | grep -iv "\\.tbz"`

# REM: Use /usr/local/lib/xarchive/wrappers/*.sh EXTS=
if test -d /usr/local/lib/xarchive/wrappers; then
echo "Getting supported file extensions from /usr/local/lib/xarchive/wrappers..."
#SUP_EXTENS=`grep '^EXTS=.*' /usr/local/lib/xarchive/wrappers/*.sh | cut -f2 -d'"' | tr '\n' ' |' | tr ' ' '|' | tr -s '|' | sed 's%^|*%%;s%|*$%%'`
SUP_EXTENS=`grep -E '^EXTS=.*|^.*_EXTS=.*' /usr/local/lib/xarchive/wrappers/*.sh | cut -f2 -d'"' | sed 's% %\$|\\\\\.%g' | sed 's%^%\\\\\.%;s%$%\$%' | tr '\n' '|' | sed 's%^|*%%;s%|*$%%'`
fi

if test "$SUP_EXTENS"; then
echo "Got \"$SUP_EXTENS\""
NORMFILE=`echo "$PARAMIN" | grep -iEv "$SUP_EXTENS"`
else
# REM: Use Puppy-Stock-Custom line
NORMFILE=`echo "$PARAMIN" | grep -iEv '\.tar$|\.tar\.|\.bz2$|\.gz$|\.rpm$|\.deb$|\.zip$|\.tgz$|\.tbz$|\.txz$|\.lzo$|\.lzma$|\.xz$|\.Z$|\.rar$|\.apk'`
fi
echo "NORMFILE='$NORMFILE'"

if [ "$NORMFILE" = "" ];then
 #it is an archive file...
 echo NORMFILE is empty

 _get_absolute_path(){
 #get absolute path of file...
 if [ "`echo -n "$PARAMIN" | cut -b 1`" = "/" ];then
  FULLSPEC="$PARAMIN"
 else
  #relative path...
  if [ "$CDIR" = "/" ];then
   FULLSPEC="/$PARAMIN"
  else
   FULLSPEC="$CDIR/$PARAMIN"
  fi
 fi
 }
 FULLSPEC=`realpath "$PARAMIN"`
echo "FULLSPEC='$FULLSPEC'"

 #busybox applets are not adequate for handling rpm, deb...
 AFILE=`basename "$PARAMIN"`
 if [ "`echo -n "$AFILE" | grep '\.'`" = "" ];then
  #file has no extension, so treat as ordinary file...
  if [ "$XARCHIVE" = "xarchive" ];then
  echo "$0: $LINENO about to exec
 '$XARCHIVE' --add=ask '$PARAMIN'"
   exec xarchive --add=ask "$PARAMIN"
  else
   exec xmessage -bg "orange red" -center -title "PupZip: ERROR" "Not an archive file"
  fi

 else
 # REM: Some files like trustedgrub-1.1.0-14.1.src.rpm
 #      Have lots of dots, try to get the to the last
 #      Could use |rev|cut|rev also I think
  AEXT="$AFILE"
  while [ "`echo -n "$AEXT" | grep '\.'`" != "" ];do
   AEXT=`echo -n "$AEXT" | cut -f 2- -d '.'`
  done
 fi

 echo "AFILE='$AFILE'"
 echo "AEXT='$AEXT'"

 #drops here with AEXT=extension.
 case $AEXT in
  rpm|RPM)
   # REM: create a temp dir and extract the .rpm
   mkdir /tmp/tmp_rpm
   cd /tmp/tmp_rpm || exit 1
   # REM: into it
   $RPM2CPIO "$FULLSPEC" | cpio -d -i -m
   if [ ! $? -eq 0 ];then
    exec xmessage -bg "orange red" -center -title "PupZip: ERROR" "An error has occurred opening the RPM file.
Suggestion: install unrpm.pup DotPup package, which contains an alternative
RPM extraction program, that PupZip will automatically use if present."
   fi
   sync
   # REM: No error, so continue
   #      with creating a temp tar file outside the extraction directory
   #tar -c -f /tmp/temprpm.tar .
   # REM: Give the temporary tar file a better name
   UCFILE=${AFILE%.$AEXT}
   UCFILE=`basename "$UCFILE"`
   tar -c -f /tmp/"${UCFILE}".tar .
   tarRV=$?
   # REM: Remove the now unneeded temporary extraction directory
   [ "$DEBUG" ] || { test $tarRV = 0 && rm -rf /tmp/tmp_rpm/; }
   # REM: Now create an extraction directory,
   #      so xarchive does not scatter everything in toplevel of /tmp
   mkdir -p /tmp/"${UCFILE}"/
   mv $VERB /tmp/"${UCFILE}".tar /tmp/"${UCFILE}"/
   # REM: TODO evealuate errors ...
   cd /
   # REM: Now run xarchive
   #$XARCHIVE /tmp/temprpm.tar
   $XARCHIVE /tmp/"${UCFILE}"/"${UCFILE}".tar
   xarRV=$?
   #test $? = 0 && rm -f /tmp/temprpm.tar
   # REM: Now can remove temporary tar file to free RAM
   [ "$DEBUG" ] || { test $xarRV = 0 && rm -rf /tmp/"${UCFILE}"/"${UCFILE}".tar; }
   cd $CDIR
   # REM: Now open ROX-Filer window there if has content
   [ -d /tmp/"${UCFILE}"/ -a "`ls -A /tmp/"${UCFILE}"/`" ] && rox -d /tmp/"${UCFILE}"/
   exit $xarRV
   ;;

#v4.00 remove...
#  deb|DEB)
#   mkdir -p /tmp/tempdeb
#   cd /tmp/tempdeb || exit 1
#   $DPKGDEB -x "$FULLSPEC"
#   if [ ! $? -eq 0 ];then
#    exec xmessage -bg "orange red" -center -title "PupZip: ERROR" "An error has occurred opening the DEB file."
#   fi
#   tar -c -f /tmp/tempdeb.tar .
#   test $? = 0 && rm -rf /tmp/tempdeb
#   cd /
#   $XARCHIVE /tmp/tempdeb.tar
#   test $? = 0 && rm -f /tmp/tempdeb.tar
#   cd $CDIR
#   exit
#   ;;

 esac
 echo "$0: $LINENO about to exec
 '$XARCHIVE' '$PARAMIN'"
 export PARAMIN
 exec $XARCHIVE "$PARAMIN"
else
 if [ "$XARCHIVE" = "xarchive" ];then
  exec xarchive --add=ask "$NORMFILE"
 else
  exec xmessage -bg "orange red" -center -title "PupZip: ERROR" "Not an archive file"
 fi
fi

###END###
