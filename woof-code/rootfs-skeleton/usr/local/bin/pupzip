#!/bin/bash

#Barry Kauler 2005 www.puppylinux.com
#frontend for XArchive.
#well, i want this to be a universal archiver frontend for puppy.
#v4.00 25apr2008 BK: now have full dpkg-deb in Puppy.
#w474 support .delta, .bfe files.

echo '$0' "$0"
echo '$1' "$1"
echo '$@' "$@"
PARAMIN="$@"
echo "PARAMIN='$PARAMIN'"
CDIR="`pwd`"
echo 'CDIR' $CDIR
#note, do not cd to directory this app is located in.
#VAR_1="\"`echo "$1"`\""
VAR_1=`echo "$1" | sed 's#^#"#; s#$#"#'`

echo ':'"$VAR_1"':'

#w474
if [ "`echo -n "$1" | grep '\.delta$'`" != "" ];then
echo "XDELTA FILE"
 exec xdelta_gui "$1"
fi
if [ "`echo -n "$1" | grep '\.bfe$'`" != "" ];then
echo "BFEcrypt FILE"
 exec bcrypt_gui "$1"
fi
if [ "`echo -n "$1" | grep 'pet$'`" != "" ];then
echo "PET FILE"
 exec petget "$1"
fi


#v2.11 G2 has suggested this...
if [[ "`echo "$1" | grep -i '\.gz$'`" != "" ]] ;then
echo GZ FILE
   if [[ "`echo "$1" | grep -i '\.tar\.gz$'`" = "" ]] ;then
   echo NOT TAR-GZ FILE;
   ## xmessage -buttons "Yes:101,No:105" -nearmouse
xmessage -buttons "Yes:101,No:105" "Do you want to decompress
  $VAR_1 ?
(it will decompress in current location)";
    #[[ "$?" -eq 101 ]] || exit
    A="$?"
    [[ "$A" -eq 105 ]] && xmessage "Not done " && exit 0
    [[ "$A" -eq 101 ]]
      cp -a "$1" "${1##*.}".tmp.gz
      gunzip "$1"
      mv "${1##*.}".tmp.gz "$1"
      #sync
      sleep 5
      exit
    if [ "$A" -ne "101" -a "$A" -ne "105" ]; then ## [[ would not run with -a
     xmessage "Pressed button $?"
      exit 0
      fi
   fi
fi

#also this...
if [ "`echo "$1" | grep -i '\.bz2$'`" != "" ] ;then
echo BZIP2 FILE
   if [ "`echo "$1" | grep -i '\.tar\.bz2$'`" = "" ] ;then
   echo NOT TAR-BZIP2 FILE;
   #F=/mnt/hdb9/Kernels/2.6.33/2.6.33.7/linux-2.6.33.7/Documentation/kernel-parameters.txt
      xmessage -buttons "Yes:101,No:105" -nearmouse "Do you want to decompress "$VAR_1" ?
(it will decompress in current location
 and the original file will be deleted)";
      [ "$?" -eq 101 ] || exit
      xmessage "Uncompressing, please wait..." &
      UPID="$!"
      bunzip2 "$1"
      sync
      kill "$UPID"
      exit
   fi
fi


#in order of preference...
if [ ! "`which xarchive`" = "" ];then
echo XARCHIVE FILE
 XARCHIVE="xarchive"
else
 if [ ! "`which TkZip`" = "" ];then
 echo TKZIP FILE
  XARCHIVE="TkZip"
 else
  if [ ! "`which guitar`" = "" ];then
  echo GUITAR FILE
   XARCHIVE="guitar"
  else
  echo ERROR
   exec xmessage -bg "orange red" -center -title "PupZip: ERROR" "No archive GUI program found.
Please install XArchive."
  fi
 fi
fi

#the full alternatives, dotpups by GuestToo...
DPKGDEB="dpkg-deb"
[ ! "`which dpkg-deb2`" = "" ] && echo line 80 && DPKGDEB="dpkg-deb2"
RPM2CPIO="rpm2cpio"
[ ! "`which rpm2cpio2`" = "" ] && echo line 82 && RPM2CPIO="rpm2cpio2"

if [ "$PARAMIN" = "" ];then
 #just start xarchive...
 echo "NO PARAMIN '$PARAMIN' : starting XARCHIVE"
 exec $XARCHIVE
fi

if [ "$XARCHIVE" = "xarchive" ];then
echo "XARCHIVE='$XARCHIVE'"
 MSGE="Drag and drop invocation of XArchive is achieved by dragging any file or
directory the \"pupzip\" icon on the desktop. If you drag one of the
recognised archived files, such as .tar.gz, .rpm, .deb, .zip, .tar.bz2,
it will open in XArchive and you will be given the opportunity to extract
it. If you drag an ordinary file to the desktop icon, such as for example
\"myfile.txt\", a XArchive will popup a dialog asking if you want to add
it to an existing archive or create a new one."
else
echo "$0:$LINENO: somethingelse"
 MSGE="There is support for drag-and-drop of archive files to the desktop icon,
however not for files and directories -- for that you need to have
XArchiver installed, the preferred archiver program for Puppy."
fi

if [ "$PARAMIN" = "--help" ];then
echo "PARAMIN is HELP"
 xmessage -bg "orange" -center -title "PupZip: help" "
This is a frontend to $XARCHIVE, which in turn is a frontend to the
archiver utilities in Puppy (such as gzip, bzip2, dpkg, rpm, zip).

Note: $XARCHIVE can be started in the conventional way via the menu.

$MSGE

PupZip can also be invoked from Rox by the \"Open With...\" menu,
by right-clicking on a file or directory."
 exit
fi


NORMFILE="`echo -n "$PARAMIN" | grep -iv "\\.tar" | grep -iv "\\.bz" | grep -iv "\\.gz" | grep -iv "\\.rpm" | grep -iv "\\.deb" | grep -iv "\\.zip" | grep -iv "\\.tgz" | grep -iv "\\.tbz"`"
echo "NORMFILE='$NORMFILE'"
if [ "$NORMFILE" = "" ];then
 #it is an archive file...
 echo NORMFILE is empty
 #get absolute path of file...
 if [ "`echo -n "$PARAMIN" | cut -b 1`" = "/" ];then
  FULLSPEC="$PARAMIN"
 else
  #relative path...
  if [ "$CDIR" = "/" ];then
   FULLSPEC="/$PARAMIN"
  else
   FULLSPEC="$CDIR/$PARAMIN"
  fi
 fi
echo "FULLSPEC='$FULLSPEC'"
 #busybox applets are not adequate for handling rpm, deb...
 AFILE="`basename "$PARAMIN"`"
 if [ "`echo -n "$AFILE" | grep '\.'`" = "" ];then
  #file has no extension, so treat as ordinary file...
  if [ "$XARCHIVE" = "xarchive" ];then
  echo "$0: $LINENO about to exec
 '$XARCHIVE' --add=ask '$PARAMIN'"
   exec xarchive --add=ask "$PARAMIN"
  else
   exec xmessage -bg "orange red" -center -title "PupZip: ERROR" "Not an archive file"
  fi
 else
  AEXT="$AFILE"
  while [ ! "`echo -n "$AEXT" | grep '\.'`" = "" ];do
   AEXT="`echo -n "$AEXT" | cut -f 2-6 -d '.'`"
  done
 fi
 echo "AFILE='$AFILE'"
 echo "AEXT='$AEXT'"
 #drops here with AEXT=extension.
 case $AEXT in
  rpm|RPM)
   mkdir /tmp/temprpm
   cd /tmp/temprpm
   $RPM2CPIO "$FULLSPEC" | cpio -d -i -m
   if [ ! $? -eq 0 ];then
    exec xmessage -bg "orange red" -center -title "PupZip: ERROR" "An error has occurred opening the RPM file.
Suggestion: install unrpm.pup DotPup package, which contains an alternative
RPM extraction program, that PupZip will automatically use if present."
   fi
   sync
   tar -c -f /tmp/temprpm.tar .
   rm -rf /tmp/temprpm
   cd /
   $XARCHIVE /tmp/temprpm.tar
   rm -f /tmp/temprpm.tar
   cd $CDIR
   exit
   ;;
#v4.00 remove...
#  deb|DEB)
#   mkdir /tmp/temprpm
#   cd /tmp/temprpm
#   $DPKGDEB -x "$FULLSPEC"
#   if [ ! $? -eq 0 ];then
#    exec xmessage -bg "orange red" -center -title "PupZip: ERROR" "An error has occurred opening the DEB file."
#   fi
#   tar -c -f /tmp/temprpm.tar .
#   rm -rf /tmp/temprpm
#   cd /
#   $XARCHIVE /tmp/temprpm.tar
#   rm -f /tmp/temprpm.tar
#   cd $CDIR
#   exit
#   ;;
 esac
 echo "$0: $LINENO about to exec
 '$XARCHIVE' '$PARAMIN'"
 export PARAMIN
 exec $XARCHIVE "$PARAMIN"
else
 if [ "$XARCHIVE" = "xarchive" ];then
  exec xarchive --add=ask "$NORMFILE"
 else
  exec xmessage -bg "orange red" -center -title "PupZip: ERROR" "Not an archive file"
 fi
fi

###END###
