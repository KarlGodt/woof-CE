#!/bin/sh -a

  _TITLE_="Puppy_browser-default"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="$0"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
 set +e
 . /etc/rc.d/f4puppy5 && {
 set +n
 . /etc/rc.d/f4puppy5; } || echo "WARNING : Could not source /etc/rc.d/f4puyppy5 ."

ADD_PARAMETER_LIST=
ADD_PARAMETERS=
_provide_basic_parameters

TWO_HELP=''; TWO_VERSION=''; TWO_VERBOSE=''; TWO_DEBUG=''; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
for i in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap
} || echo "Warning : No /etc/rc.d/f4puppy5 installed."

#kill `ps|grep "defbrowser"|awk '{print $1}'`

SCREEN=`xwininfo -root | grep ' \-geometry ' | tr -s ' ' | cut -f 3 -d ' ' | cut -f 1 -d '+' | tr 'x' ' '`
HEIGHT=`echo -n "$SCREEN" | cut -f 2 -d ' '`
YDIMENSION=`echo $(($HEIGHT - 163))`

function CHGDEF(){
        DEFOLD=`grep -v "#" /usr/local/bin/defaultbrowser`
        DEFNEW="exec $BRS \"\$@\""
        OLD=`echo $CUR|cut -d ' ' -f2`
        if [[ "$BRS" != "$OLD" ]];then
        echo "sed -i 's/$DEFOLD/$DEFNEW/' /usr/local/bin/defaultbrowser" >/tmp/change-browser
        . /tmp/change-browser
        #echo $OLD
           if [ `which yaf-splash2` != "" ];then
       yaf-splash2 -font "-misc-dejavu sans-bold-r-normal--16-0-0-0-p-0-iso10646-1" -margin 4 -bg yellow -timeout 3 -outline 0 -text "$BRS is now the default browser" &
              else gtkdialog-splash -icon gtk-info -bg yellow -timeout 3 -outline 0 -text "$BRS is now the default browser" &
           fi
        fi
}

function browsenow(){
     sleep 2
     exec defaultbrowser &
}

#echo "#browsers" >/tmp/installed-browsers
#[ "`which PuppyBrowser`" != "" ]&& echo "PuppyBrowser" >>/tmp/installed-browsers
#[ "`which seamonkey2`" != "" ]&& echo "seamonkey2" >>/tmp/installed-browsers
#[ "`which chromium-browser`" != "" ]&& echo "chromium-browser" >>/tmp/installed-browsers
#[ "`which firefox`" != "" ]&& echo "firefox" >>/tmp/installed-browsers
#[ "`which opera`" != "" ]&& echo "opera" >>/tmp/installed-browsers
#[ "`which iron`" != "" ]&& echo "iron" >>/tmp/installed-browsers
#[ "`which midori`" != "" ]&& echo "midori" >>/tmp/installed-browsers
#[ "`which google-chrome`" != "" ]&& echo "google-chrome" >>/tmp/installed-browsers
#[ "`which chrome`" != "" ]&& echo "chrome" >>/tmp/installed-browsers

#new engine to find installed browsers from *.desktop files
rm -rf /tmp/tmpbrs
mkdir /tmp/tmpbrs
grep -i "browser" /usr/share/applications/*.desktop|cut -d ':' -f1|tr '/' ' '|awk '{print $4}'>/tmp/browserlist
echo '#browsers' >/tmp/installed-browsers
INSTALLED_BROWSERS=`cat /tmp/browserlist`
for i in $INSTALLED_BROWSERS;do
#grep 'Exec=' /usr/share/applications/$i|cut -d '=' -f2|sed 's/ \%U$//g'|sed s'/\// /'g | tr " " '\n' | tail -n1>/tmp/tmpbrs/$i
        #cat /tmp/tmpbrs/$i>>/tmp/browserexecs
grep -m1 '^Exec=' /usr/share/applications/$i|cut -d '=' -f2
#grep -m1 '^Exec=' /usr/share/applications/$i|cut -d '=' -f2|awk '{print $1}' >/tmp/tmpbrs/$i
basename `grep -m1 '^Exec=' /usr/share/applications/$i|cut -d '=' -f2|awk '{print $1}'`
basename `grep -m1 '^Exec=' /usr/share/applications/$i|cut -d '=' -f2|awk '{print $1}'` >/tmp/tmpbrs/$i
done
BROWSE=`ls /tmp/tmpbrs`
for b in $BROWSE;do cat /tmp/tmpbrs/$b >>/tmp/installed-browsers
done




CUR=`grep -v "#" /usr/local/bin/defaultbrowser|awk '{print $2}'`
if [ "$CUR" = "quickpet" ];then CUR="Change to a Browser!"
        else CUR="Now $CUR"
fi

defbrowser="
<window title=\"Change Default\">
 <vbox>

    <tree>
     <label>$CUR</label>
     <variable>BRS</variable>

     <input>grep -v '#' /tmp/installed-browsers</input>
     <action signal=\"button-release-event\">CHGDEF</action>
     <action signal=\"button-release-event\">browsenow</action>
     <action signal=\"button-release-event\">exit:done</action>
    </tree>

 </vbox>
</window>"
gtkdialog3 -p defbrowser --geometry +40+$YDIMENSION
unset defbrowser
# Very End of this file 'usr/sbin/browser-default' #
###END###
