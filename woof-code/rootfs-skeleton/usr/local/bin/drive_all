#!/bin/ash
#(c) Copyright 2008 Barry Kauler, puppylinux.com
#2008 Lesser GPL licence v2 (http://www.fsf.org/licensing/licenses/lgpl.html)
#/sbin/pup_event_frontend_d creates a desktop icon and copy of this script for each drive, ex:
# for drive sda: cp -a /usr/local/bin/drive_all /root/.pup_event/drive_sda/AppRun
#this script is launched by pup_event_frontend_d when the icon is first created. also,
#this script is launched when user clicks on deskop icon (former is configurable,
# see /usr/sbin/eventmanager.
#passed param is category of drive: card, floppy, optical, usbdrv, drive.
#v4.0.2 jun08: first write of this script, expanding 'pup_eventd' management.
#v403 icon menu, can call with 'unmount', 'eventmanager' and 'pmount_<DRV_CATEGORY>' params.
#v411 added 'quiet' option for vfat, suppresses error msg when file attribs not preserved on copy.
#w002 left click to unmount a partition.
#w476 fix codepage for vfat f.s.

test -f /etc/rc.d/f4puppy5 && . /etc/rc.d/f4puppy5

tmpDIR=/tmp/drive_all
mkdir $VERB -p "$tmpDIR" || _exit 1 "Could not create '$tmpDIR'"
exec 2>>"$tmpDIR"/err.log
exec 1>>"$tmpDIR"/log.log
echo "$0:$*" >&2

#w002 extracted as a func...
unmount_func() {
 MNTPT=${MNTPT:-"$*"}
 test    "$MNTPT" || return 3
 test -d "$MNTPT" || return 4
 case $MNTPT in /|/mnt/home) return 5;;

 esac

 rox -D "$MNTPT"
 _sync
 while :;do
  /bin/umount "$MNTPT" ; umVAL=$?
  #fix zombie process prevents partition unmount, invisible to fuser...
  if [ "$umVAL" -ne 0 ];then
   ZOMBIES="`/bin/ps -H -A | grep '<defunct>' | sed -e 's/  /|/g' | grep -v '|||' | awk '{print $1}'`"
   for oneZOMBIE in $ZOMBIES
   do
    echo "Killing parentless zombie process '$oneZOMBIE'"
    kill $oneZOMBIE
   done
   [ -n "`busybox mount | grep "$MNTPT"`" ] && /bin/umount "$MNTPT" ; umVAL=$?
  fi
  #rare ocassion, partition got unmounted before umount runs above...
  umPATTERN="${MNTPT} "
  [ "`busybox mount | grep "$umPATTERN"`" ] || umVAL=0
  if [ "$umVAL" != 0 ];then
   #EXTRAMSG0="`_command fuser -v -m $MNTPT 2>&1`"
   fsUSERS=`fuser -m "$MNTPT"`
   EXTRAMSG0=`for i in $fsUSERS; do ps | grep -w $i | grep -vE 'grep|message|splash';done`
   if [ "$EXTRAMSG0" = "" ];then
    xmessage -bg "#ff8080" -title "Puppy drive manager: ERROR" -center "FAILURE! In the case of removable media, the most
common reason is the media is not currently inserted.
If so, please remedy."
   else
    xmessage -bg "#ff00ff" -title "KILL, KILL..." -center -buttons KILL:10,EXIT:20 "FAILURE! One or more processes (programs) are currently
using /dev/${oneDRVNAME}. Here they are:
$EXTRAMSG0

If you press the \"KILL\" button, Puppy will attempt to
kill the offending programs for you. Only do this as a
last resort. Firstly you should try to close the programs
manually, so do not press \"KILL\".
PLEASE PRESS THE \"EXIT\" BUTTON!"
    if [ $? -eq 10 ];then
     fuser -k -m "$MNTPT"
     continue
    fi
   fi
  else
   case "$oneDRVNAME" in sr[0-9]*|scd[0-9]*|hd[a-z]) eject $VERB /dev/$oneDRVNAME;; esac
  fi
  break
 done
}

_exec_pmount(){
 if [ "`pidof gtkdialog_pmount`" ];then #if pmount running, kill it.
  killall gtkdialog_pmount 2>>$ERR
  sleep 0.1
 fi
 LINEPATTERN=0006;_lineno $LINEPATTERN
 exec pmount ${DRV_CATEGORY} /dev/$oneDRVNAME  # for better filter in pmount, add /dev/ prefix
}

#test "$*" || _exec_pmount

DRV_CATEGORY="${1}"
DRV_CATEGORY=${DRV_CATEGORY:-"drive"} #precaution.
[ "$DRV_CATEGORY" = "all" ] && DRV_CATEGORY="drive" #precaution.

FSTYPE=${2:-""}
#[ "$2" ] && FSTYPE="$2" #see pup_eventd

#extract drive name from end of the script name...
#note, when click on desktop icon, /root/.pup_event/drive_<oneDRVNAME> is executed,
#however a script may run /root/.pup_event/drive_<oneDRVNAME>/AppRun ...

#oneDRVNAME="`echo "${0}" | sed -e 's%/AppRun%%' | rev | cut -f 1 -d '_' | rev`"
#echo "oneDRVNAME='$oneDRVNAME'" >&2
test "`echo "$0" | grep '^/'`" && {
    _debug "Absolute PATH"
oneDRVNAME="`echo "${0}" | sed -e 's%/AppRun%%' | rev | cut -f 1 -d '_' | rev`"
} || {
    _notice "no absolute PATH"
    MY_SELF=`realpath "$0"`
oneDRVNAME="`echo "${MY_SELF}" | sed -e 's%/AppRun%%' | rev | cut -f 1 -d '_' | rev`"
}
test "$oneDRVNAME" || _exit 2 "ERROR -- no oneDRVNAME"


# ***
# First: the options '', pmount_*, eventmanager, unmountall, unmount
case "$1" in
'')         _exec_pmount;;
*pmount_*)
DRV_CATEGORY="`echo -n "${1}" | cut -f 2 -d '_'`"
# if [ "`pidof gtkdialog_pmount`" != "" ];then #if pmount running, kill it.
#  killall gtkdialog_pmount 2>>$ERR
#  sleep 0.1
# fi
 LINEPATTERN=0006;_lineno $LINEPATTERN
# exec pmount ${DRV_CATEGORY} /dev/$oneDRVNAME
_exec_pmount
;;
"eventmanager") #v403 chosen from drive icon menu.
 #v405 'desktop' param, cutdown tabs for desktop drive icons only...
 exec eventmanager desktop
;;

#v424 have added right-click menu item to unmount all partitions (see pup_event_frontend_d)...
"unmountall")
 for MNTPT in `mount | grep '^/dev/' | grep -vE '^/dev/loop|^/dev/ram|^/dev/nbd|^/dev/md|^/dev/mtd' | cut -f 3 -d ' ' | grep -vE '^/initrd/|^/$' | tac`
 do
  unmount_func "$MNTPT"
  STATUS=$((STATUS+$?))
 done
 exit $STATUS
;;

"unmount") #v403 chose unmount from drive icon menu.
 mPATTERN='^/dev/'"$oneDRVNAME"' '
 MNTPT="`/bin/df | grep "$mPATTERN" | tr -s ' ' | cut -f 6 -d ' '`"
 [ "$MNTPT" ] || { _info "Device '$oneDRVNAME' not mounted. Exiting."; exit 0; } #precaution.
 case "$MNTPT" in "/"|*/initrd/*)
  xmessage -bg "#ff8080" -title "Puppy drive manager" -center "/dev/${oneDRVNAME} mounted on ${MNTPT}
is in use by Puppy. You cannot unmount it."
  exit 1
 ;;
 esac
 unmount_func "$MNTPT"
 exit $?

__unmount_dialog__(){
#w002 left-mouse-click to unmount...
#info: params passed to this script:
# left-click: 0=/root/.pup_event/drive_sda3/AppRun 1=drive 2=ext3
# right-menu: 0=/root/.pup_event/drive_sda3/AppRun 1=unmount 2=
# right-menu: 0=/root/.pup_event/drive_sda3/AppRun 1=pmount_drive 2=
# right-menu: 0=/root/.pup_event/drive_sda3/AppRun 1=eventmanager 2=
#in first ex $1 can be drive,floppy,usbdrv,optical,card.


#v424 have removed this dlg box. maybe make it optional in the future...
if [ $2 ];then
 #if partition already mounted, offer to unmount it...
 mPATTERN='^/dev/'"$oneDRVNAME"' '
 MNTPT="`/bin/df | grep "$mPATTERN" | tr -s ' ' | cut -f 6 -d ' '`"
 if [ "$MNTPT" != "" ];then
  if [ "$MNTPT" != "/" -a "`echo "$MNTPT" | grep '/initrd/'`" = "" ];then
   #it is allowed to be unmounted (not in use by woof)...
   xmessage -bg "orange" -title "Puppy drive manager" -center -buttons " NO :11,Unmount ${oneDRVNAME}:10,Unmount all:12" "Do you want to unmount ${oneDRVNAME}?
It is currently mounted on ${MNTPT}"
   UMNTFLG=$?
   if [ "$UMNTFLG" = 10 ];then
    unmount_func
       exit
   fi
   if [ "$UMNTFLG" = 12 ];then
    for MNTPT in `mount | grep '^/dev/' | grep -vE '^/dev/loop|^/dev/ram' | cut -f 3 -d ' ' | grep -v '^/initrd/' | grep -v '^/$' | tac`
       do
        unmount_func
       done
    exit
   fi
  fi
 fi
fi
}
;;
esac


# ***
# Second: the Settings of eventmanager
[ -f /etc/eventmanager ] && . /etc/eventmanager             #written by /usr/sbin/eventmanager
DISP=${DISPLAY%.*}
[ -f /etc/eventmanager.$DISP ] && . /etc/eventmanager.$DISP #written by /usr/sbin/eventmanager

[ $RAMSAVEINTERVAL ] || RAMSAVEINTERVAL=30
[ "$ICONDESK"       = "true" -o "$ICONDESK"       = "false" ] || ICONDESK="true"
[ "$HOTPLUGNOISY"   = "true" -o "$HOTPLUGNOISY"   = "false" ] || HOTPLUGNOISY="false"
[ "$AUTOTARGET"     = "true" -o "$AUTOTARGET"     = "false" ] || AUTOTARGET="true"
[ "$ICONPARTITIONS" = "true" -o "$ICONPARTITIONS" = "false" ] || ICONPARTITIONS="true"


#decision... we can bring up a "handler" window, that explains things, good for beginners.
#or jump direct to most appropriate target application, or do nothing.
#for now only have AUTOTARGET=true go direct to most appropriate target app,
# =false always start Pmount.
if [ "$AUTOTARGET" = "false" ];then
# if [ "`pidof gtkdialog_pmount`" != "" ];then #if pmount running, kill it.
#  killall gtkdialog_pmount 2>>$ERR
#  sleep 0.1
# fi
 LINEPATTERN=000B;_lineno $LINEPATTERN
# exec pmount $DRV_CATEGORY /dev/$oneDRVNAME
_exec_pmount
fi

#if ICONDESK=false (see /etc/eventmanager and /sbin/pup_eventd) then there will only
#be one icon on the desktop, labelled 'drives' and handler script is /usr/local/bin/drive_drives
if [ "$oneDRVNAME" = "drives" ];then
# if [ "`pidof gtkdialog_pmount`" != "" ];then #if pmount running, kill it.
#  killall gtkdialog_pmount 2>>$ERR
#  sleep 0.1
# fi
 LINEPATTERN=000A;_lineno $LINEPATTERN
# exec pmount $DRV_CATEGORY /dev/$oneDRVNAME
_exec_pmount
fi


# ***
# Third: cd-rom, partition

#oh, now have to analyse the media, decide what app to run...
case "$oneDRVNAME" in sr[0-9]*|scd[0-9]*|hd[a-z])
 srPATTERN='^/dev/'"$oneDRVNAME"' '
 if [ "`busybox mount | grep "$srPATTERN"`" = "" ];then
  cddetect $Q -d/dev/${oneDRVNAME}
  RETVAL=$?
  case $RETVAL in
  3) #iso file: normal data cd.
   true
   ;;
  1) #audio
   ln $VERB -sf /dev/${oneDRVNAME} /dev/cdrom
   exec defaultmediaplayer cdda://dev/cdrom
   ;;
  5) #video dvd
   ln $VERB -sf /dev/${oneDRVNAME} /dev/dvd
   exec defaultmediaplayer dvd://dev/dvd
   ;;
  0) #failed to detect type.
   #cddetect does not work properly for dvd's, try something else...
   if [ "`dvd+rw-mediainfo /dev/sr0 | grep 'Mounted Media: .* DVD-ROM'`" != "" ];then
    ln $VERB -sf /dev/${oneDRVNAME} /dev/dvd
    exec defaultmediaplayer dvd://dev/dvd
   fi
   ;;
  esac
 fi
 FSTYPE=`guess_fstype /dev/$oneDRVNAME`
 test "$FSTYPE" || FSTYPE=iso9660
 test "$FSTYPE" = "unknown" && FSTYPE=iso9660
;;
esac

LINEPATTERN=000C;_lineno $LINEPATTERN
#if dropped down here, it is likely to be a data partition...
#if it is a mountable partition then mount and open with rox. If already mntd then open in rox...
#if [ "$ICONPARTITIONS" = "true" ];then

if [ "$FSTYPE" != "" ];then
 dPATTERN='^/dev/'"$oneDRVNAME"' '
 if [ "`/bin/df | grep "$dPATTERN"`" = "" ];then
  #not mounted...
  #test -d /mnt/$oneDRVNAME || mkdir -p /mnt/$oneDRVNAME
  case $FSTYPE in
   ntfs)
    #'mount' is a script that takes care of mounting ntfs...
    /bin/mount -t ntfs "/dev/$oneDRVNAME" "/mnt/$oneDRVNAME"
    RETVAL1=$?
    ;;
   vfat)
    #w476 modify codepage and iocharset (note: this code also in /usr/sbin/pmount)...
    #note, could also set iocharset=iso8859-2 (default: codepage=437, iocharset=iso8859-1)
    NLS_PARAM=''
    if [ -f /etc/keymap ];then #set in /etc/rc.d/rc.country
     KEYMAP="`cat /etc/keymap | cut -f 1 -d '.'`"
     case $KEYMAP in
      de|be|br|dk|es|fi|fr|it|no|se|pt)
       NLS_PARAM=',codepage=850'
      ;;
      slovene|croat|hu101|hu|cz-lat2|pl|ro_win)
       NLS_PARAM=',codepage=852,iocharset=iso8859-2'
      ;;
     esac
    fi
    /bin/mount -t vfat -o shortname=mixed,quiet${NLS_PARAM} "/dev/$oneDRVNAME" "/mnt/$oneDRVNAME" #v411
    RETVAL1=$?
    ;;
   *)
    /bin/mount -t $FSTYPE "/dev/$oneDRVNAME" "/mnt/$oneDRVNAME"
    RETVAL1=$?
    ;;
  esac
  #[ $RETVAL1 -eq 0 ] && exec rox -x "/mnt/$oneDRVNAME" -d "/mnt/$oneDRVNAME"
  [ "$RETVAL1" != 0 ] || exit $RETVAL1
 else
  #mounted...
  MNTPT="`/bin/df | grep "$dPATTERN" | tr -s ' ' | cut -f 6 -d ' '`"
  if [ -h /mnt/home ];then
   [ "`readlink /mnt/home`" = "$MNTPT" ] && MNTPT="/mnt/home"
  fi
  #exec rox -x /mnt/$oneDRVNAME -d /mnt/$oneDRVNAME
  exec rox -x "$MNTPT" -x "${MNTPT%/*}" -d "$MNTPT"
 fi
fi


# Fourth: last fallback pmount

#NOTE: if pmount already running, don't really want to kill then restart,
# just want to bring the window up if it's minimised ...how?

#if [ "`pidof gtkdialog_pmount`" != "" ];then #if pmount running, kill it.
# killall gtkdialog_pmount 2>>$ERR
# sleep 0.1
#fi
LINEPATTERN=0FFF;_lineno $LINEPATTERN
#exec pmount ${DRV_CATEGORY} /dev/$oneDRVNAME
_exec_pmount

###END###
