#!/bin/sh
#
# New header by Karl Reimer Godt, September 2014
  _TITLE_="Puppy_jwmx2"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="/usr/local/bin/jwmx2"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
[ "$HAVE_F4PUPPY5" ] || . /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

TWO_HELP=''; TWO_VERSION=''; TWO_VERBOSE=''; TWO_DEBUG=''; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap

}
# End new header
#
BGOPT=""
if [ -f /root/.jwm/jwm_colors ];then #100504
. /root/.jwm/jwm_colors
 BGOPT="-bg ${MENU_BG}"
fi

#killall icewmtray 2>$ERR
pidof icewmtray >$OUT && { killall icewmtray
sleep 2
}

#killall blinky 2>$ERR
pidof blinky >$OUT && { killall blinky
sleep 2
#blinky ${BGOPT} &
}

#killall freememapplet_tray 2>$ERR
pidof freememapplet_tray >$OUT && { killall freememapplet_tray
sleep 1
}

#killall firewallstate & 2>$ERR
pidof firewallstate >$OUT && { killall firewallstate
sleep 1
#/root/Startup/firewallstate & 2>$ERR
[ -x /root/Startup/firewallstate ] && exec /root/Startup/firewallstate 2>$ERR &
sleep2
}

#killall  powerapplet_tray 2>$ERR
pidof powerapplet_tray >$OUT && { killall powerapplet_tray
#/root/Startup/powerapplet_tray & 2>$ERR
[ -x /root/Startup/powerapplet_tray ] && exec /root/Startup/powerapplet_tray 2>$ERR &
}

__out_code__(){
#find apps in /root/startup and execute
if [ "$POWER" = "" ];then
        [ -x /root/Startup/powerapplet_tray ] && exec /root/Startup/powerapplet_tray 2>$ERR &
fi
FWALL=` ps|grep 'firewallstate'|grep -v 'grep'`
if [ "$FWALL" = "" ];then
        exec firewallstate 2>$ERR &
fi
}

#retrovol kick along
sleep 4
#killall retrovol && retrovol -hide ${BGOPT} &
pidof retrovol >$OUT && { killall retrovol
sleep 1
}
exec retrovol -hide ${BGOPT} &

###END###
