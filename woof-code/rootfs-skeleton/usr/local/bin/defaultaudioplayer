#!/bin/sh
#
# New header by Karl Reimer Godt, September 2014
  _TITLE_="Puppy_defaultaudioplayer"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="/usr/local/bin/defaultaudioplayer"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
[ "$HAVE_F4PUPPY5" ] || source /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

TWO_HELP=''; TWO_VERSION=''; TWO_VERBOSE=''; TWO_DEBUG=''; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap

}
# End new header
#
__say_aqualung_help__(){
    cat >&2 <<EoI
Aqualung -- Music player for GNU/Linux
Build version: R-1114
(C) 2004-2010 Tom Szilagyi <tszilagyi@users.sourceforge.net>
This is free software, and you are welcome to redistribute it
under certain conditions; see the file COPYING for details.

Invocation:
aqualung --help
aqualung --version
aqualung [--output (oss|alsa|jack|sndio|pulse|win32)] [options] [file1 [file2 ...]]

General options:
-D, --disk-realtime: Try to use realtime (SCHED_FIFO) scheduling for disk thread.
-Y, --disk-priority <int>: When running -D, set scheduler priority to <int> (defaults to 1).

Options relevant to ALSA output:
-d, --device <name>: Set the output device (defaults to 'default').
-r, --rate <int>: Set the output sample rate.
-R, --realtime: Try to use realtime (SCHED_FIFO) scheduling for ALSA output thread.
-P, --priority <int>: Set scheduler priority to <int> (default is 1 when -R is used).

Options relevant to OSS output:
-d, --device <name>: Set the output device (defaults to '/dev/dsp').
-r, --rate <int>: Set the output sample rate.
-R, --realtime: Try to use realtime (SCHED_FIFO) scheduling for OSS output thread.
-P, --priority <int>: Set scheduler priority to <int> (default is 1 when -R is used).

Options relevant to JACK output:
-a[<port_L>,<port_R>], --auto[=<port_L>,<port_R>]: Auto-connect output ports to
given JACK ports (defaults to first two hardware playback ports).
-c, --client <name>: Set client name (needed if you want to run multiple instances of the program).

Options relevant to PulseAudio and sndio outputs:
-r, --rate <int>: Set the output sample rate.
-R, --realtime: Try to use realtime (SCHED_FIFO) scheduling for audio output thread.
-P, --priority <int>: Set scheduler priority to <int> (default is 1 when -R is used).

Options relevant to WIN32 output:
-r, --rate <int>: Set the output sample rate.

Options relevant to the Sample Rate Converter:
-s[<int>], --srctype[=<int>]: Choose the SRC type, or print the list of available
types if no number given. The default is SRC type 4 (Linear Interpolator).

Options for remote cue control:
-N, --session <int>: Number of Aqualung instance to control.
-B, --back: Jump to previous track.
-F, --fwd: Jump to next track.
-L, --play: Start playing.
-U, --pause: Pause playback, or resume if already paused.
-T, --stop: Stop playback.
-V, --volume [m|M]|[=]<val>: Set, adjust or mute volume.
-Q, --quit: Terminate remote instance.
Note that these options default to the 0-th instance when no -N option is given,
except for -L which defaults to the present instance (so as to be able to start
playback immediately from the command line).

Options for file loading:
-E, --enqueue: Don't clear the contents of the playlist when adding new items.
-t[<name>], --tab[=<name>]: Add files to the specified playlist tab.

If you don't specify a session number via --session, the files will be opened by the new
instance, otherwise they will be sent to the already running instance you specify.

Options for changing state of Playlist/Music Store windows:
-l [yes|no], --show-pl=[yes|no]: Show/hide playlist window.
-m [yes|no], --show-ms=[yes|no]: Show/hide music store window.

Examples:
$ aqualung -s3 -o alsa -R -r 48000 -d plughw:0,0
$ aqualung --srctype=1 --output oss --rate 96000
$ aqualung -o jack -a -E `find ./ledzeppelin/ -name "*.flac"`

Depending on the compile-time options, not all file formats
and output drivers may be usable. Type aqualung -v to get a
list of all the compiled-in features.
EoI
}

DEFAULT_AUDIO_PLAYER=/usr/multimedia/bin/aqualung
AUDIO_PLAYER_OPS="--session 0 --enqueue"
if test "`which "$DEFAULT_AUDIO_PLAYER"`"; then
exec "$DEFAULT_AUDIO_PLAYER" $AUDIO_PLAYER_OPS "$@"
else
xmessage "$DEFAULT_AUDIO_PLAYER not found."
fi

# Very End of this file 'usr/local/bin/defaultaudioplayer' #
###END###
