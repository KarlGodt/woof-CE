#!/bin/sh
#
# New header by Karl Reimer Godt, September 2014
  _TITLE_="Puppy_gtk2jwm"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="/usr/local/jwmconfig2-mine/gtk2jwm"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
source /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in 1; do shift; done; }

_trap

}
# End new header
#
##########################
#
# gtk2jwm
# this script integrates
# the default jwm theme
# with the current gtk
# theme.
#
# author: thoughtjourney
# date: 28/08/2005
#
# Hacked BK Feb 2006 for JWM 1.4
# Abused by Dougal, Dec 2006
#########################
## Latest update: July 14th: add gradient support for JWM
# BK jan 2008: integrated into jwmconfig2.
#modified by Karl Godt 18 Nov 2010
# 28 Dec 2010 shinobar: removed wrong save code

# 2012 Apr 11 Karl Godt : sorry for having abandoned that !
# That must have been in the time I had not enought HDD space to follow
# the development and in that time parts of jwmconfig had been disabled .
# Jwmconfig is difficult to understand also to me,
# and it seems that shinobar did a little too much removing obsolete code .
# 1: put in the old code to create gradient colors
# 2: put in code for third party themes that use 'gtk_color_scheme = .*' lines
# especially for the themes from gtk2-engines_2.20.2 pkg
# Clearlooks,Crux,Industrial,Mist,Redmond,ThinIce

 ##-------------variables---------------->>
 GTKTHEME=`fgrep 'include' /root/.gtkrc-2.0 | fgrep '/usr/share/themes/' | grep -v '^#' | fgrep -m1 'gtkrc' | tr -d "'" | tr -d '"' | sed 's/include //' | tr -d '\t' | tr -d ' '`
 [ ! -e $GTKTHEME ] && exit 1
 TrayFile=/root/.jwmrc-tray
 JWMTHEME=/root/.jwm/jwmrc-theme
 COLORS_DEFINITIONS_FILE=`find /usr -name rgb.txt|head -n1` ##file containing literal color names
 echo "$COLORS_DEFINITIONS_FILE"
 FULL_COLOUR=255
 if test -f /root/.jwm/jwm_colors.bak ; then
. /root/.jwm/jwm_colors.bak
fi
 ##------get relevant gtk colours-------->>
 #COLOR_ROW_AT=`grep -m1 -E 'gtk_color_scheme = .*|gtk\-color\-scheme = .*' "$GTKTHEME" |tr -d ' ' |cut -f2 -d=` #awk '{print $3}'`
 COLOR_ROW_AT=`grep -m1 'gtk[_\-]color[_\-]scheme = .*' "$GTKTHEME" |tr -d ' ' |cut -f2 -d=`
 if [ ! "$COLOR_ROW_AT" ];then
 COLOR_ROW_AT=`sed -n '/gtk[_-]color[_-]scheme =/,/[[:blank:]]*".*color[=: ]*.*"/ p' "$GTKTHEME" | sed 's|gtk[_-]color[_-]scheme =||;/^$/d'` 
 fi
 echo "$COLOR_ROW_AT"
 if [ "$COLOR_ROW_AT" ];then #new imported standard theme with @color lines
 echo -e "$COLOR_ROW_AT" >/tmp/colors.fir
 #echo "$COLOR_ROW_AT" |tr -d ' '|sed 's|\\n|;|g'|tr ';' '\n' |tr ':' '=' |tr -d ' "' >/tmp/colors.src
 cat /tmp/colors.fir |tr ';' '\n' |tr ':' '=' |tr -d ' "' >/tmp/colors.src
 sed -i 's|=#\([0-9a-f][0-9a-f][0-9a-f]\)$|=#\1\1|' /tmp/colors.src #some have only the first three hex valus, missing the last three, so guessing them equal
 source /tmp/colors.src
 MENU_BG="$bg_color"
 ACTIVE_BG="$selected_bg_color"
 FOREGROUND="$fg_color"
 PAGER_BG="$bg_color"
 FG_SELECTED="$selected_fg_color"
 else #original code
 MENU_BG=`grep -v "^#" $GTKTHEME | grep -m1 '\Wbg\[NORMAL\]' | cut -d'=' -f2 |tr -d '" ' |sed 's|##.*||' |awk '{print $1}'`
 ACTIVE_BG=`grep -v "^#" $GTKTHEME | grep -m1 '\Wbg\[SELECTED\]' | cut -d'=' -f2 |tr -d '" ' |sed 's|##.*||' |awk '{print $1}'`
 FOREGROUND=`grep -v "^#" $GTKTHEME | grep -m1 '\Wfg\[NORMAL\]' | cut -d'=' -f2 |tr -d '" ' |sed 's|##.*||' |awk '{print $1}'`
 PAGER_BG=`grep -v "^#" $GTKTHEME | grep -m1 '\Wbg\[ACTIVE\]' | cut -d'=' -f2 |tr -d '" ' |sed 's|##.*||' |awk '{print $1}'`
 FG_SELECTED=`grep -v "^#" $GTKTHEME | grep -m1 '\Wfg\[SELECTED\]' | cut -d'=' -f2 |tr -d '" ' |sed 's|##.*||' |awk '{print $1}'`
 fi
echo "$MENU_BG
$ACTIVE_BG
$FOREGROUND
$PAGER_BG
$FG_SELECTED"
#convert literal color names
for color in "MENU_BG=$MENU_BG" "ACTIVE_BG=$ACTIVE_BG" "FOREGROUND=$FOREGROUND" "PAGER_BG=$PAGER_BG" "FG_SELECTED=$FG_SELECTED";do
if [ "`echo "$color" | grep '=[[:alpha:]]'`" ];then #ie color=black4
COLOR="${color%=*}"
col="${color#*=}"
echo "COLOR=$COLOR col=$col"
#possible_colors=`grep -w "$col" "$COLORS_DEFINITIONS_FILE"` >/tmp/$col.pos
grep -w "$col" "$COLORS_DEFINITIONS_FILE" >/tmp/$col.pos
cat /tmp/$col.pos |awk '{print $4" "$5" "$1" "$2" "$3}' >/tmp/$col.pos.reo
grep -w -e "^$col [0-9]*" /tmp/$col.pos.reo >/tmp/$col.cfg
rr=`awk '{print $2}' /tmp/$col.cfg`
RR=`echo "ibase=10;obase=16;$rr" |bc`
[ "${#RR}" = 1 ] && RR="0${RR}"
gg=`awk '{print $3}' /tmp/$col.cfg`
GG=`echo "ibase=10;obase=16;$gg" |bc`
[ "${#GG}" = 1 ] && GG="0${GG}"
bb=`awk '{print $4}' /tmp/$col.cfg`
BB=`echo "ibase=10;obase=16;$bb" |bc`
[ "${#BB}" = 1 ] && BB="0${BB}"
eval $COLOR="#${RR}${GG}${BB}"
fi
if [ "`echo "$color" | grep '={.*}'`" ];then #ie color={ 0.83, 0.81, 0.78 }
COLOR="${color%=*}"
col="${color#*=}"
col="${col//\{/}"
col="${col//\}/}"
col="${col//,/ }"
col_1=`echo "$col" | awk '{print $1}'`
col_2=`echo "$col" | awk '{print $2}'`
col_3=`echo "$col" | awk '{print $3}'`
LANG=C col_1=`dc $col_1 255 \* p |cut -f1 -d'.'`
LANG=C col_2=`dc $col_2 255 \* p |cut -f1 -d'.'`
LANG=C col_3=`dc $col_3 255 \* p |cut -f1 -d'.'`
LANG=C RR=`printf '%x' $col_1`
[ "${#RR}" = 1 ] && RR="0${RR}"
LANG=C GG=`printf '%x' $col_2`
[ "${#GG}" = 1 ] && BB="0${GG}"
LANG=C BB=`printf '%x' $col_3`
[ "${#BB}" = 1 ] && BB="0${BB}"
eval $COLOR="#${RR}${GG}${BB}"
fi
done
echo "$MENU_BG
$ACTIVE_BG
$FOREGROUND
$PAGER_BG
$FG_SELECTED"
 #save them...
 echo '#This is written to by /usr/local/jwmconfig2/gtk2jwm script' > /root/.jwm/jwm_colors
 echo "MENU_BG='${MENU_BG}'" >> /root/.jwm/jwm_colors
 echo "ACTIVE_BG='${ACTIVE_BG}'" >> /root/.jwm/jwm_colors
 echo "FOREGROUND='${FOREGROUND}'" >> /root/.jwm/jwm_colors
 echo "PAGER_BG='${PAGER_BG}'" >> /root/.jwm/jwm_colors
 echo "FG_SELECTED='${FG_SELECTED}'" >> /root/.jwm/jwm_colors

# 28 Dec 2010 shinobar: removed wrong/obsolete save code
if test -f /root/.tcl-gtk ; then
 rm -f /root/.tcl-gtk
fi
 
 if [ -z "$MENU_BG" ]; then
  echo > "$JWMTHEME"
  pidof jwm >/dev/null && jwm -restart
  exit 2
  
 else  
  # create gradient colours:
  DIFF="16#20"
  for COLOUR in ACTIVE_BG MENU_BG
  do
    NAME=${COLOUR:0:3}
    eval RR=\${$COLOUR:1:2}
    eval GG=\${$COLOUR:3:2}
    eval BB=\${$COLOUR:5:2}

    for ONE in RR GG BB
    do
      eval A=\$$ONE
      let MORE="16#$A"+"$DIFF"
      let LESS="16#$A"-"$DIFF"

      if [ $MORE -gt 255 ] ; then # limit to max
        eval ${ONE}_LOWER="bf"
        eval ${ONE}_UPPER="ff"
      elif [ $LESS -lt 0 ] ; then
        eval ${ONE}_LOWER="00"
        eval ${ONE}_UPPER="40"
      else
        TMP_LOWER="`echo "$LESS 16 o p" |dc`"
        [ ${#TMP_LOWER} -eq 1 ] && TMP_LOWER="0$TMP_LOWER"
        eval ${ONE}_LOWER=$TMP_LOWER
        TMP_UPPER="`echo "$MORE 16 o p" |dc`"
        [ ${#TMP_UPPER} -eq 1 ] && TMP_UPPER="0$TMP_UPPER"
        eval ${ONE}_UPPER=$TMP_UPPER
      fi
    done
    #echo "#$RR_LOWER$GG_LOWER$BB_LOWER:#$RR_UPPER$GG_UPPER$BB_UPPER"
    eval ${NAME}_GRAD="#$RR_LOWER$GG_LOWER$BB_LOWER:#$RR_UPPER$GG_UPPER$BB_UPPER"
    eval ${NAME}_REVERSED="#$RR_UPPER$GG_UPPER$BB_UPPER:#$RR_LOWER$GG_LOWER$BB_LOWER"
  done
  
  DEFAULT="
  <JWM>

<WindowStyle>
	<Active>
		<Text>$FG_SELECTED</Text>
		<Title>$ACT_GRAD</Title>
		<!-- <Corner>white</Corner> -->
       	<Outline>black</Outline>
	</Active>
	<Inactive>
		<Text>$FOREGROUND</Text>
		<Title>$MEN_GRAD</Title>
		<!-- <Corner>#aaaaaa</Corner> -->
       	<Outline>black</Outline>
	</Inactive>
</WindowStyle>

<TaskListStyle>
	<Foreground>$FOREGROUND</Foreground>
	<Background>$MEN_REVERSED</Background>
	<ActiveForeground>$FG_SELECTED</ActiveForeground>
	<ActiveBackground>$ACT_GRAD</ActiveBackground>
</TaskListStyle>

<TrayStyle>
	<Foreground>$FOREGROUND</Foreground>
	<Background>$MENU_BG</Background>
</TrayStyle>

<PagerStyle>
	<Outline>black</Outline>
	<!-- non-active programs: bg[NORMAL]-->
	<Foreground>$MENU_BG</Foreground>
	<!-- non-active desktops: bg[ACTIVE]-->
	<Background>$PAGER_BG</Background>
	<!-- selected app/desktop bg[SELECTED]-->
	<ActiveForeground>$FG_SELECTED</ActiveForeground>
	<!-- frame of selected desktop...bg[SELECTED] -->
	<ActiveBackground>$ACTIVE_BG</ActiveBackground>
</PagerStyle>


<MenuStyle>
	<Foreground>$FOREGROUND</Foreground>
	<Background>$MENU_BG</Background>
	<ActiveForeground>$FG_SELECTED</ActiveForeground>
	<ActiveBackground>$ACT_REVERSED</ActiveBackground>
</MenuStyle>

</JWM>
"
 fi
echo "$DEFAULT" > "$JWMTHEME"
 TrayFileBak="/root/.jwmrc-tray.bak"
cp -f "$TrayFile" "$TrayFileBak"
BackgroundColor="$MENU_BG" #"#ffc100"
echo $MENU_BG
 
function GetLineIndex
{
   lineVal=`fgrep -in "$1" $TrayFile | awk -F":" '{print $1}'`
   #return `expr $lineVal`
   return $lineVal
}

 GetLineIndex "blinkydelayed"
 linenumber=$?
 echo $linenumber
 
 GetLineIndex "xload -nolabel"
 linenumber2=$?

 echo $linenumber2
 
 lineNumber=`expr $linenumber`
 lineNumber2=`expr $linenumber2`
 
 blinkyline="         blinkydelayed -bg \"$BackgroundColor\""
 xloadline="         xload -nolabel -fg red -hl white -bg \"$BackgroundColor\""
if test $lineNumber -gt 0 ; then
sed -e "$lineNumber"i"$blinkyline" -e "$lineNumber"d $TrayFileBak > $TrayFile
fi
if test $lineNumber2 -gt 0 ; then
sed -e "$lineNumber2"i"$xloadline" -e "$lineNumber2"d $TrayFileBak > $TrayFile
fi
 #end John Doe's code.
 ########
 
sync
pidof jwm >/dev/null && jwm -restart
# Very End of this file 'usr/local/jwmconfig2-mine/gtk2jwm' #
###END###
