#!/bin/bash
#Pmusic - export
#GPL 2011 - Copyright Sigmund Berglund

. $APPDIR/func -reset_gtk
cd $HOME
echo -n > $WORKDIR/splash_copy_text

help_tag (){
	export FRAME="$LOC_INFO"
	export IMG=info
	export TXT1="<b>%a</b> - $LOC_ARTIST
<b>%A</b> - $LOC_ALBUM
<b>%n</b> - $LOC722
<b>%t</b> - $LOC_TITLE"
	$APPDIR/box_ok &
}
export -f help_tag

GUI_CDAUDIO='
<frame '$LOC720'>
 <hbox>
  <text><label>'$LOC721'</label></text>
  <entry>
   <variable>CD_FILE_NAME</variable>
   <input>echo "%a - %t"</input>
  </entry>
  <button>
   <input file stock="gtk-help"></input>
   <action>help_tag</action>
  </button>
 </hbox>
 <checkbox tooltip-text="'$LOC724' .mp3 .ogg .wma .ape">
  <label>'$LOC723'</label>
  <default>true</default>
  <variable>ADD_META</variable>
 </checkbox>
 <checkbox>
  <label>'$LOC725'</label>
  <variable>ADD_M3U</variable>
 </checkbox>
</frame>
'

S='
<window title="Pmusic - '$LOC114'" icon-name="gtk-media-stop">
 <vbox>
  <frame '$LOC299'>
   <hbox>
    <text><label>'$LOC291'</label></text>
    <entry accept="directory">
     <variable>COPYDIR</variable>
     <input>echo $HOME</input>
    </entry>
    <button>
     <input file stock="gtk-open"></input>
     <action type="fileselect">COPYDIR</action>
    </button>
   </hbox>
   <checkbox>
    <label>'$LOC292'</label>'
    [ "`grep -F 'cdda:' $WORKDIR/playlist`" ] && S=$S'<visible>disabled</visible>'
    S=$S'<variable>ADD_NUMBERING</variable>
   </checkbox>
   <checkbox>
    <label>'$LOC2910'</label>
    <variable>BOOKMARK_TARGET</variable>
   </checkbox>
  </frame>
  <frame '$LOC297'>
   <checkbox>
    <label>'$LOC298'</label>
    <variable>CHK_OUTPUT_STREAM</variable>
    <action>if true enable:COPY_BITRATE</action>
    <action>if true enable:COPY_SAMPLE</action>
    <action>if true enable:COPY_CHANNEL</action>
    <action>if true enable:COPY_FORMAT</action>
    <action>if true enable:TXT_COPY_BITRATE</action>
    <action>if true enable:TXT_COPY_SAMPLE</action>
    <action>if true enable:TXT_COPY_CHANNEL</action>
    <action>if true enable:TXT_COPY_FORMAT</action>
    <action>if false disable:COPY_BITRATE</action>
    <action>if false disable:COPY_SAMPLE</action>
    <action>if false disable:COPY_CHANNEL</action>
    <action>if false disable:COPY_FORMAT</action>
    <action>if false disable:TXT_COPY_BITRATE</action>
    <action>if false disable:TXT_COPY_SAMPLE</action>
    <action>if false disable:TXT_COPY_CHANNEL</action>
    <action>if false disable:TXT_COPY_FORMAT</action>
   </checkbox>
   <hbox>
    <text><variable>TXT_COPY_FORMAT</variable><visible>disabled</visible><label>'$LOC293'</label></text>
    <comboboxentry>
     <variable>COPY_FORMAT</variable>
     <visible>disabled</visible>
	 <item>aiff</item>
	 <item>asf</item>
	 <item>au</item>
	 <item>flac</item>
	 <item>mp3</item>
	 <item>ogg</item>
	 <item>rm</item>
	 <item>voc</item>
	 <item>wav</item>
    </comboboxentry>
   </hbox>
   <hbox>
    <text><variable>TXT_COPY_BITRATE</variable><visible>disabled</visible><label>'$LOC294'</label></text>
    <hbox width-request="80">
     <entry><variable>COPY_BITRATE</variable><visible>disabled</visible><default>192000</default></entry>
    </hbox>
   </hbox>
   <hbox>
    <text><variable>TXT_COPY_SAMPLE</variable><visible>disabled</visible><label>'$LOC295'</label></text>
    <hbox width-request="80">
     <entry><variable>COPY_SAMPLE</variable><visible>disabled</visible><default>44100</default></entry>
    </hbox>
   </hbox>
   <hbox>
    <text><variable>TXT_COPY_CHANNEL</variable><visible>disabled</visible><label>'$LOC296'</label></text>
    <hbox width-request="80">
     <entry><variable>COPY_CHANNEL</variable><visible>disabled</visible><default>2</default></entry>
    </hbox>
   </hbox>
  </frame>'
  [ ! "`grep -vF 'cdda:' $WORKDIR/playlist`" ] && S=$S$GUI_CDAUDIO
  S=$S'<hbox>
   <button><input file stock="gtk-cancel"></input><label>'$LOC_CANCEL'</label></button>
   <button can-default="true" has-default="true" use-stock="true">
    <input file stock="gtk-save-as"></input>
    <label>'$LOC290'</label>
    <action type="exit">ok</action>
   </button>
  </hbox>
 </vbox>
</window>'

export pmusic_copy="$S"
[ $TOOLTIPS = false ] && pmusic_copy="`echo "$pmusic_copy" | sed 's%tooltip-text%tooltipXXXtext%g'`" #deactivate tooltips
I=$IFS; IFS=""
for STATEMENTS in $($GTKDIALOG -p pmusic_copy --center); do
	eval $STATEMENTS
done
IFS=$I
if [ $EXIT = "ok" ]; then
	#splash
	echo 0 > $WORKDIR/splash_copy
	export pmusic_copy_splash='
	<window title="Pmusic" icon-name="gtk-media-stop" allow-grow="false">
	<vbox>
	 <frame>
	  <text><label>""</label></text>
	  '"<text use-markup=\"true\"><label>\"<b><span color='"'gray30'"' size='"'x-large'"'>Pmusic  </span><span color='"'gray30'"' size='"'large'"'>$VERSION</span></b>\"</label></text>
	  <text><label>$LOC290</label></text>
	 </frame>
	 <progressbar>
	  <input>"'while [ "$I" != "100" ]; do I=`cat '$WORKDIR'/splash_copy`; TXT=`cat '$WORKDIR'/splash_copy_text`; echo $I; echo "$TXT"; sleep 1; done</input>
	  <action type="exit">Ready</action>
	 </progressbar>
	 <hbox>
	  <button cancel>
	   <action>killall exec_copy</action>
	   <action>killall cdda2wav</action>
	   <action>killall ffmpeg</action>
	   <action>eject</action>
	   <action>echo 100 '$WORKDIR'/splash_copy</action>
	   <action>exit:EXIT</action>
	  </button> 
	 </hbox>
	</vbox></window>'
	$GTKDIALOG --program=pmusic_copy_splash --center &

	#bookmark
	if [ $BOOKMARK_TARGET = true ]; then
		BOOKMARK_PATH="$COPYDIR"
		BOOKMARK_NAME="`basename "$COPYDIR"`"
		. $APPDIR/func_bookmarks -bookmark_add
	fi
	#---
	cut -d '|' -f 4 $WORKDIR/playlist > $WORKDIR/tmp
	TMP="`echo "$COPYDIR""/" | sed -e s%//%/%g`" #be sure to end with one /
	COPYDIR="$TMP"
	COUNT_TOTAL="`echo $(wc -l $WORKDIR/playlist | awk '{print $1}') | bc`" #for progress in splash-window
	COUNT=0
	echo '#!/bin/sh' > $WORKDIR/exec_copy
	while read I; do
		[ "$CHK_OUTPUT_STREAM" = "true" ] && OUTPUT_STREAM="-ac $COPY_CHANNEL -ar $COPY_SAMPLE -ab $COPY_BITRATE"
		FILE="`echo $I | cut -d ' ' -f 2-`"
		#update progress in spash-window
		COUNT=$(($COUNT+1))
		echo "echo \"$(($COUNT*100/($COUNT_TOTAL+1)))\" > $WORKDIR/splash_copy" >> $WORKDIR/exec_copy
		echo "echo \"$(basename $FILE | sed -e 's/\.[^\.]*$//') ( $COUNT / $COUNT_TOTAL )\" > $WORKDIR/splash_copy_text" >> $WORKDIR/exec_copy
		#CD-audio
		if [ "`echo $I | grep -F cdda:`" ]; then
			pmusic -s stop
			#define tags which we stored when reading CD
			CDDB_NR="`echo "$FILE" | cut -d: -f2`"
			CDDB_ARTIST="`grep "|${CDDB_NR}|" $WORKDIR/cddb | cut -d'|' -f3`"
			CDDB_TITLE="`grep "|${CDDB_NR}|" $WORKDIR/cddb | cut -d'|' -f2`"
			CDDB_ALBUM="`grep "|${CDDB_NR}|" $WORKDIR/cddb | cut -d'|' -f5`"
			[ ! "$CDDB_TITLE" ] && CDDB_TITLE="CD-track $CDDB_NR" #not all CDs are available in the cddb
			#---
			NAME="`echo "$CD_FILE_NAME" | sed -e "s/%a/$CDDB_ARTIST/" -e "s/%t/$CDDB_TITLE/" -e "s/%A/$CDDB_ALBUM/" -e "s/%n/$CDDB_NR/"`"
			[ ! "$NAME" ] && NAME="CD-track_`echo $I | cut -d ' ' -f 1 | sed -e 's/\.[^\.]*$//'`" #if no metatags exists
			[ ! "$COPY_FORMAT" ] && COPY_FORMAT=wav #no formating is chosen, but we need one for ffmpeg
			CDDA_TRACK="`echo $I | cut -d: -f 2`" 
			echo -n "cdda2wav dev=$CD_DEVICE -t $CDDA_TRACK -Owav - | " >> $WORKDIR/exec_copy
			echo -n "ffmpeg -i pipe:0 -f $COPY_FORMAT $OUTPUT_STREAM -y \"" >> $WORKDIR/exec_copy
			echo -n "$COPYDIR$NAME.$COPY_FORMAT" | sed -e 's/`/\\\`/g' -e 's/"/\\\"/g' >> $WORKDIR/exec_copy #allow ` and " in filename 
			echo "\"" >> $WORKDIR/exec_copy
			#add id3tag
			if [ "$ADD_META" = "true" ] && [ "`which id3info`" ] && [ "`echo $COPY_FORMAT | grep -iE "ape|mp3|ogg|wma"`" ]; then
				echo "id3tag -a \"$CDDB_ARTIST\" -s \"$CDDB_TITLE\" -A \"$CDDB_ALBUM\" -y ' ' -t$CDDB_NR \"$COPYDIR$NAME.$COPY_FORMAT\"" >> $WORKDIR/exec_copy
			fi
			#build playlist
			if [ "$ADD_M3U" = "true" ]; then
				echo "$NAME.$COPY_FORMAT" >> "$COPYDIR$CDDB_ARTIST - $CDDB_ALBUM.m3u"
			fi
			#---
			continue
		fi
		#---
		TARGET="`basename "$FILE"`"
		[ $ADD_NUMBERING = true ] && TARGET="`echo $I | cut -d ' ' -f 1`"_"`basename "$FILE"`"
		if [ "$COPY_FORMAT" ]; then
			NAME="`echo "$TARGET" | sed -e 's/\.[^\.]*$//'`" #remove extension
			if [ -f "$COPYDIR""$NAME.$COPY_FORMAT" ]; then #already exist
				IMG=dialog-warning; FRAME="$LOC_WARNING"; TXT1="<b>$COPYDIR$NAME.$COPY_FORMAT $LOC503</b>"; TXT2="$LOC504"
				sleep 1
				. $APPDIR/box_yesno
				if [ $EXIT != yes ]; then continue; fi
			fi
			echo -n "ffmpeg -i \"" >> $WORKDIR/exec_copy
			#if youtube url we need to find the exact URL. And if exist, use name from the webmusic_index.
			if [ "`echo "$FILE" | grep -F 'youtube.com'`" ]; then
				. $APPDIR/func  -get_youtube_url "$FILE"
				FILE=$URL
				NAME="$ARTIST - $TITLE"
			fi
			#jamendo
			[ "`echo "$FILE" | grep -F 'jamendo.com'`" ] && NAME="`grep -F "$FILE" $WORKDIR/playlist | cut -d'|' -f3`"
			#---
			echo -n "$FILE" | sed -e 's/`/\\\`/g' -e 's/"/\\\"/g' >> $WORKDIR/exec_copy #allow ` and " in filename 
			echo -n "\" -f $COPY_FORMAT $OUTPUT_STREAM -y \"" >> $WORKDIR/exec_copy
			echo -n "$COPYDIR$NAME.$COPY_FORMAT" | sed -e 's/`/\\\`/g' -e 's/"/\\\"/g' >> $WORKDIR/exec_copy #allow ` and " in filename 
			echo "\"" >> $WORKDIR/exec_copy 
		else
			if [ -f "$COPYDIR""$TARGET" ]; then #already exist
				IMG=dialog-warning; FRAME="$LOC_WARNING"; TXT1="<b>$FILE $LOC503</b>"; TXT2="$LOC504"
				sleep 1
				. $APPDIR/box_yesno
				if [ $EXIT != yes ]; then continue; fi
			fi
			echo -n "cp -f \"" >> $WORKDIR/exec_copy
			echo -n "$FILE" | sed -e 's/`/\\\`/g' -e 's/"/\\\"/g' >> $WORKDIR/exec_copy #allow ` and " in filename 
			echo -n "\" \"" >> $WORKDIR/exec_copy 
			echo -n "$COPYDIR$TARGET" | sed -e 's/`/\\\`/g' -e 's/"/\\\"/g' >> $WORKDIR/exec_copy #allow ` and " in filename 
			echo "\"" >> $WORKDIR/exec_copy
		fi
	done < $WORKDIR/tmp
	chmod 700 $WORKDIR/exec_copy
	$WORKDIR/exec_copy
	echo 100 > $WORKDIR/splash_copy #reset progress bar
fi
