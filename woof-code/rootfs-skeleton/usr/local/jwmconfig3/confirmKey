#!/bin/sh
#
# New header by Karl Reimer Godt, September 2014
  _TITLE_="Puppy_confirmKey"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="/usr/local/jwmconfig3/confirmKey"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
source /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap

}
# End new header
#


########################################################################
#
#
#
#
#
# /dev/hda8:
# LABEL="MacPup431_O2"
# UUID="6d9a8e91-c301-4ff8-9875-97ec708cbee8"
# TYPE="ext3"
# DISTRO_NAME='Puppy'
# DISTRO_VERSION=431
# DISTRO_BINARY_COMPAT='puppy'
# DISTRO_FILE_PREFIX='pup'
# DISTRO_COMPAT_VERSION='4'
# PUPMODE=2
# KERNVER=2.6.37.4-KRG-i486-StagingDrivers-2
# PUP_HOME='/'
# SATADRIVES='·'
# USBDRIVES='·sda·'
# Linux·puppypc·2.6.37.4-KRG-i486-StagingDrivers-2·#4·SMP·Thu·Mar·17·06:05:58·GMT-8·2011·i686·GNU/Linux
# X·Window·System·Version·1.3.0
# Release·Date:·19·April·2007
# X·Protocol·Version·11,·Revision·0,·Release·1.3
# Build·Operating·System:·UNKNOWN·
# Current·Operating·System:·Linux·puppypc·2.6.37.4-KRG-i486-StagingDrivers-2·#4·SMP·Thu·Mar·17·06:05:58·GMT-8·2011·i686
# Build·Date:·28·November·2007
# $LANG=de_DE@euro
# today=So·30.·Okt·12:48:02·GMT+1·2011
#
#
#
#
#
########################################################################

#########################
#
# confirms the keyboard shortcut changes and saves them
#
# for use with the jwmConfigMgr & keyboard scripts
#
# author: thoughtjourney
# date: 18/08/2005
#
#########################

##--------variables---------->>
PRO="/confirmKey"
SCRIPT_DIR="/usr/local/jwmconfig3"
. "$SCRIPT_DIR"/path

##------preparation---------->>
Mold=`cat "$TmpSCO" | cut -f 2 -d "|"`
KeyO=`cat "$TmpSCO" | cut -f 3 -d "|"`
A=`cat "$TmpSCO" | cut -f 4 -d "|"`
if [ "$MSK" = "mask" ] || [ -z "$MSK" ] && [ "$CHECK" != "true" ] ;then
   MASKKEY=''
   P=''
else
ADDMASK="$MSK"
. "$SCRIPT_DIR"/func -testInput
fi

#-------delete??------->
####1
if [ "$CHECK" = "true" ]; then
echo $DBG 33 $CHECK
   #-----mask and key---->
  #####2
   if [ -z "$Mold" ];then
Xdialog --title "Delete Shortcut?"\
                  --yesno "KEY   : $KeyO\n\
ACTION: $A\n\n\
Are you sure you wish to delete this shortcut?\n\n" 0 0
YN=$?
     #####3
      if [ "$YN" = "1" ]; then
         exit 0
      else
         DEL_SED=/y\ key=\"$KeyO\"\>/d
         P=""
      fi
     #####3
   #-------key only----->
   else
Xdialog --title "Delete Shortcut?"\
                  --yesno "MASK  : $Mold\n\
KEY   : $KeyO\n\
ACTION: $A\n\n\
Are you sure you wish to delete this shortcut?\n\n" 0 0
YN1=$?
     #####4
      if [ "$YN1" = "1" ]; then
         exit 0
      else
         DEL_SED=/Key\ mask=\"$Mold\"\ key=\"$KeyO\"\>/d
      fi
     #####4
    fi
   #####2
   sed "$DEL_SED" "$PersonalFile" > "$PersonalFile2"
   mv "$PersonalFile2" "$PersonalFile"
Xdialog --title "Shortcut_Deleted" --msgbox "The following shortcut has been deleted\n\n
$Mold $P $KeyO $A\n\n" 0 0
sync
echo $DBG 73 what now
unset Change_Shortcut
exit 0

echo $DBG 75 now 'else'
#------change---------->
else
  #---previous shortcut had no mask--->
 #####5
  if [ -z "$Mold" ]; then

     echo $DBG 72 NEWMASK: $MSK
    #####6
     if [ -z "$MASKKEY" ];then

        #--new shortcut doesn't have mask-->
        GAP="y key="
        CHANGE_SED=s!y\ key=\"$KeyO\"\>!y\ key=\"$NEWKEY\"\>!g
        sed -e "$CHANGE_SED" "$PersonalFile" > "$PersonalFile2"
        P=""
     else
        #--new shortcut has mask-->
        CHANGE_SED=s!Key\ key=\"$KeyO\"\>!Key\ mask=\"$MASKKEY\"\ key=\"$NEWKEY\"\>!g
        sed -e "$CHANGE_SED" "$PersonalFile" > "$PersonalFile2"
     fi
    #####6
   else
   #---previous shortcut had mask--->
    #####7
     if [ -z "$MASKKEY" ];then

        #--new shortcut doesn't have mask-->
        CHANGE_SED=s!y\ mask=\"$Mold\"\ key=\"$KeyO\"\>!y\ key=\"$NEWKEY\"\>!g
        sed -e "$CHANGE_SED" "$PersonalFile" > "$PersonalFile2"
        P=""
     else
        #--new shortcut has mask-->
        CHANGE_SED=s!Key\ mask=\"$Mold\"\ key=\"$KeyO\"\>!Key\ mask=\"$MASKKEY\"\ key=\"$NEWKEY\"\>!g
        echo $DBG $CHANGE_SED
        sed -e "$CHANGE_SED" "$PersonalFile" > "$PersonalFile2"

     fi
    #####7
  fi
 #####5

fi
####1

#---------confirm-------->
cp "$PersonalFile2" "$PersonalFile"

Xdialog --title "Shortcut_Changed" --msgbox "The shortcut has been changed to\n\n
$MASKKEY $P $NEWKEY  $A\n\n" 0 0

sync
exit 0
