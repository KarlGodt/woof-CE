#!/bin/sh
#
# New header by Karl Reimer Godt, September 2014
  _TITLE_="Puppy_jwmConfigMgr"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="/usr/local/jwmconfig3/jwmConfigMgr"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
[ "$HAVE_F4PUPPY5" ] || source /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

TWO_HELP=''; TWO_VERSION=''; TWO_VERBOSE=''; TWO_DEBUG=''; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap

}
# End new header
#
#based on the original jwmConfigMgr developed by 'thoughtjourney' 2005.

########################################################################
#
# CHANGES by Karl Reimer Godt
# 01.0 : named to jwmconfig3
# 02.0 : added files func and path
# 03.0 : chaged the notebook tabs
#
# /dev/hda8:
# LABEL="MacPup431_O2"
# UUID="6d9a8e91-c301-4ff8-9875-97ec708cbee8"
# TYPE="ext3"
# DISTRO_NAME='Puppy'
# DISTRO_VERSION=431
# DISTRO_BINARY_COMPAT='puppy'
# DISTRO_FILE_PREFIX='pup'
# DISTRO_COMPAT_VERSION='4'
# PUPMODE=2
# KERNVER=2.6.37.4-KRG-i486-StagingDrivers-2
# PUP_HOME='/'
# SATADRIVES='·'
# USBDRIVES='·sda·'
# Linux·puppypc·2.6.37.4-KRG-i486-StagingDrivers-2·#4·SMP·Thu·Mar·17·06:05:58·GMT-8·2011·i686·GNU/Linux
# X·Window·System·Version·1.3.0
# Release·Date:·19·April·2007
# X·Protocol·Version·11,·Revision·0,·Release·1.3
# Build·Operating·System:·UNKNOWN·
# Current·Operating·System:·Linux·puppypc·2.6.37.4-KRG-i486-StagingDrivers-2·#4·SMP·Thu·Mar·17·06:05:58·GMT-8·2011·i686
# Build·Date:·28·November·2007
# $LANG=de_DE@euro
# today=So·30.·Okt·12:48:40·GMT+1·2011
#
#
#
#
#
########################################################################



##--------variables---------->>
PRO="/jwmConfigMgr"
SCRIPT_DIR="/usr/local/jwmconfig3"
. /etc/rc.d/PUPSTATE
. "$SCRIPT_DIR"/path

##______Firstrun_____________>>

if test ! -f "$ThemeFileDef" || [ "$PUPMODE" -eq 5 ] ;then
. "$SCRIPT_DIR"/func -backup
fi

export JWM_Display="
<window title=\"JWM Configuration Manager\" icon-name=\"gtk-preferences\" window-position=\"1\">
 <vbox>
  <notebook labels=\"Desktop|JWM|Theme\">
   <vbox>
    <hbox>
     <text>
      <label>Window focus Model</label>
     </text>
     <button>
      <input file>$MINI_ICONS_DIR/mini-windows.xpm</input>
      <action>$SCRIPT_DIR/focusModel &</action>
     </button>
    </hbox>
    <hbox>
     <text>
      <label>Desktop Background</label>
     </text>
     <button>
      <input file>$MINI_ICONS_DIR/mini-cave.xpm</input>
      <action>wallpaper &</action>
     </button>
    </hbox>
   </vbox>

   <vbox>
    <hbox>
     <text>
      <label>Taskbar management</label>
     </text>
     <button>
      <input file>$MINI_ICONS_DIR/mini-maxwide.xpm</input>
      <action>$SCRIPT_DIR/taskbar &</action>
     </button>
    </hbox>
    <hbox>
     <text>
      <label>Application launch Buttons in Taskbar</label>
     </text>
     <button>
      <input file>$MINI_ICONS_DIR/Executable.xpm</input>
      <action>$SCRIPT_DIR/panel-buttons &</action>
     </button>
    </hbox>
    <hbox>
     <text>
      <label>Keyboard Shortcuts</label>
     </text>
     <button>
      <input file>$MINI_ICONS_DIR/mini-keyboard.xpm</input>
      <action>$SCRIPT_DIR/keyboard &</action>
     </button>
    </hbox>
    <hbox>
     <text>
      <label>Advanced Keyboard Shortcuts</label>
     </text>
     <button>
      <input file>$MINI_ICONS_DIR/mini-keyboard.xpm</input>
      <action>/usr/local/bin/advancedShortcut.sh &</action>
     </button>
    </hbox>
   </vbox>

   <vbox>
    <hbox>
     <text>
      <label>Inner GTK Theme, writes the gtkrc Configuration File</label>
     </text>
     <button>
      <input file>$MINI_ICONS_DIR/mini-windows.xpm</input>
      <action>gtk-chtheme &</action>
     </button>
    </hbox>
    <hbox>
     <text>
      <label>Apply chosen GTK THEME from configuration file to JWM</label>
     </text>
     <button>
      <input file>$MINI_ICONS_DIR/mini-tick.xpm</input>
      <action>$SCRIPT_DIR/applygtk.sh &</action>
     </button>
    </hbox>
    <hbox>
     <text>
      <label>Choose one of the PUPPY JWM themes</label>
     </text>
     <button>
      <input file>$MINI_ICONS_DIR/pup17.png</input>
      <action>$SCRIPT_DIR/theme_switcher &</action>
     </button>
    </hbox>
    <hbox>
     <text>
      <label>Or, start developing your own JWM Themes</label>
     </text>
     <button>
      <input file>$MINI_ICONS_DIR/mini-palette.xpm</input>
      <action>/usr/local/jwmthememaker/jwmthememaker &</action>
     </button>
    </hbox>
    <hbox>
     <text>
      <label>Apply your newest Theme to JWM</label>
     </text>
     <button>
      <input file>$MINI_ICONS_DIR/mini-tick.xpm</input>
      <action>$SCRIPT_DIR/gtk2jwm &</action>
     </button>
    </hbox>
    <hbox>
     <text>
      <label>Restore previous Theme from Backupfile</label>
     </text>
     <button>
      <input file>$MINI_ICONS_DIR/mini-turn.xpm</input>
      <action>$SCRIPT_DIR/restore.sh &</action>
     </button>
    </hbox>
    <hbox>
     <text>
      <label>Load Default Theme</label>
     </text>
     <button>
      <input file>$MINI_ICONS_DIR/mini.window3d.xpm</input>
      <action>$SCRIPT_DIR/loadDefault.sh &</action>
     </button>
    </hbox>
   </vbox>
  </notebook>

  <frame Important!>
   <hbox>
    <pixmap>
     <input file>$MINI_ICONS_DIR/info16.xpm</input>
    </pixmap>
    <text>
     <label>Some of the above actions require JWM to be restarted for changes to take effect</label>
    </text>
   </hbox>
   <hbox>
    <text>
     <label>Restart JWM now?</label>
    </text>
    <button yes>
     <action>jwm -restart &</action>
    </button>
   </hbox>
  </frame>
  <hbox>
   <button help>
    <action>xmessage -buttons Exit -bg black -fg green -name 'jwmConfigMgr HELP' -center 'JWM is a Window Manager. It controls the behaviour and appearance of the windows and the tray.' &</action>
   </button>
   <button>
    <label>Exit</label>
    <input file stock=\"gtk-quit\"></input>
    <action>EXIT:ok</action>
   </button>
  </hbox>
 </vbox>
</window>
"
##------------run------------->>
gtkdialog3 --program JWM_Display

##----------cleanup------------>>
unset JWM_Display

exit 0
