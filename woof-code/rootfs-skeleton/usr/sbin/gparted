#!/bin/sh
#
# New header by Karl Reimer Godt, September 2014
  _TITLE_="Puppy_gparted"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="/usr/sbin/gparted"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
source /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in 1; do shift; done; }

_trap

}
# End new header
#
#
#  Purpose:  Perform appropriate startup of GParted executable gpartedbin.
#
#            On systems with hal-lock, use hal-lock to acquire device
#            locks prior to running gpartedbin.
#            This is to prevent devices from being automounted.
#            File system problems can occur if devices are mounted
#            prior to the completion of GParted's operations.
#            See GParted bug #324220
#            http://bugzilla.gnome.org/show_bug.cgi?id=324220
#
#            On systems without hal-lock, invoke gpartedbin directly.
#

#
#  Search PATH to determine if hal-lock program can be found
#
HAVE_HAL_LOCK=no
for k in '' `echo "$PATH" | sed 's,:, ,g'`; do
	if test -x "$k/hal-lock"; then
		#if test "z`ps -e | grep hald |grep -v grep`" != "z"; then
		if test "z`ps ac | grep hald`" != "z"; then
			HAVE_HAL_LOCK=yes
			break
		fi
	fi
done

#
#  Use hal-lock for invocation if it exists, otherwise simply run gpartedbin
#
if test "x$HAVE_HAL_LOCK" = "xyes"; then
	hal-lock --interface org.freedesktop.Hal.Device.Storage --exclusive \
		--run "/usr/sbin/gpartedbin $*"
else
	/usr/sbin/gpartedbin $*
fi
