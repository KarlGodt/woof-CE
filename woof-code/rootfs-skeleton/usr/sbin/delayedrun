#!/bin/sh
#(c) copyright 2007 Barry Kauler
#2007 Lesser GPL licence v2 (http://www.fsf.org/licensing/licenses/lgpl.html)
# Launched from ~/.xinitrc, so X is running.
# Note, see also /usr/sbin/savepuppyd, launched from /etc/rc.d/rc.local0.
#v3.91 BK oct,nov 2007, upated for Dingo.
#v3.94 BK 15 dec 2007, updated.
#v4.01 BK 19may2008: don't think loading usb-storage reqd here anymore.
#v4.01 BK 19may2008: note the new pup_eventd also launched from .xinitrc.
#w007 path fix for Xorg.
#w481 warning if modules cannot be loaded.
#100404 fix load applets for fbpanel. 100413 think needs some 'sleep 0.1'
#100504 background color for retrovol.
#100511 for ram-challenged pc, better to display welcome1stboot.png.
#100513 jwm tray now uses freememapplet_tray and blinky_tray. NOTE: future, move these to $HOME/Startup.
#100517 freememapplet_tray moved to $HOME/Startup.
#100522 'surfer' is a simple viewer (uses libgtkhtml).
#100608 if yaf-splash symlink to gtkdialog-splash, use '-fontsize large' parameter.

FILENAME0=

FILENAME10=
FILENAME11=
FILENAME12=

FILENAME20=
FILENAME21=
FILENAME22=

FILENAME30=
FILENAME31=
FILENAME32=

FILENAME40=
FILENAME41=
FILENAME42=
FILENAME43=

FILENAME50=
FILENAME51=
FILENAME52=

  _TITLE_=delayedrun
_VERSION_=1.0omega
_COMMENT_="Sccript to manage tasks and programs after windowmanager has initialized.."

MY_SELF="$0"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
 set +e
 source /etc/rc.d/f4puppy5 && {
 set +n
 source /etc/rc.d/f4puppy5; } || echo "WARNING : Could not source /etc/rc.d/f4puyppy5 ."

ADD_PARAMETER_LIST=
ADD_PARAMETERS=
_provide_basic_parameters

TWO_HELP=''; TWO_VERSION=''; TWO_VERBOSE=''; TWO_DEBUG=''; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
for i in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap
} || echo "Warning : No /etc/rc.d/f4puppy5 installed."


#variables created at bootup by 'init' in initramfs...
. /etc/rc.d/PUPSTATE

echo "
$0:
PATH='$PATH'
"

FONTSIZEPARAM=''
#[ -h /usr/bin/yaf-splash ] && FONTSIZEPARAM='-fontsize large' #100608

KERNVER="`uname -r`" #w481

BAREVIEW="bareview"
[ "`which bareview`" = "" ] && BAREVIEW="defaulthtmlviewer"

sleep 2 #let the dust settle first.

read WM </etc/windowmanager
[ "$WM" ] || WM=jwm
until pidof ${WM##*/};do
sleep 2;c=$((c+1));[ "$c" = 10 ] && break
done

case "$WM" in
*icewm*|*icewm-session*)

test -f $HOME/.icewm/theme && . $HOME/.icewm/theme
THEMEDIR="/usr/share/icewm/themes"
test -f ${THEMEDIR}/${Theme} && . ${THEMEDIR}/${Theme}

NUMCOLOR=`echo $ColorNormalTaskBarApp|grep "rgb:"`
  if [[ $NUMCOLOR = "" ]];
   then BG=""
   else PRE_BG=`echo $ColorNormalTaskBarApp|cut -d ':' -f2|sed 's%/%%g'`
        BG="#${PRE_BG}"
  fi

  if [[ "$Theme" = "GoldenSand/default.theme" ]];
   then BG="#C6AD73"
  fi

  if [ "$BG" = "" ];
   then BGOPT=""
   else BGOPT="-bg ${BG}"
  fi

  pidof icewmtray >$OUT && { killall icewmtray; sleep 1; }
  exec icewmtray &
  #icewmtray &

  #sleep 4
  sleep 2
  #long sleep here , since it takes long to initialize
           #and _tray apps don't appear if started too soon after
 ;;
*jwm*|*)
  BGOPT=""
  if [ -f $HOME/.jwm/jwm_colors ];then #100504
   . $HOME/.jwm/jwm_colors
   [ "$MENU_BG" ] && BGOPT="-bg ${MENU_BG}"
  fi
 ;;
esac

#this goes into the tray...
CURRPS="`ps`"
#if [ "`echo "$CURRPS" | grep -E 'lxpanel|fbpanel'`" != "" ];then
 #freememapplet_tray & #created by BK. 100517 moved to $HOME/Startup
 #sleep 0.1
 BLINK_TRAY=`which blinky_tray`
if [ "$BLINK_TRAY" != "" ];then
 exec blinky_tray -bg ${BGOPT} & #created by Lior Tubi and MU.
 sleep 0.1
fi
#fi
if [ "`which retrovol`" != "" -a "`pidof retrovol`" = "" ];then
 if [ "`retrovol -help 2>&1 | grep '\-show'`" != "" ];then
  exec retrovol ${BGOPT} &  #100119 tray volume control by pizzasgood. 100504
 else
  exec retrovol -hide ${BGOPT} &  #100413 versions after 0.2. 100504
 fi
fi

#offer to popup a getting-started html page...
#the test for /etc/videomode is for when Xvesa has finished choosing a resolution...
if [ "`readlink /usr/bin/X`" = "Xorg" -o -e /etc/videomode ];then #w007
 if [ $PUPMODE -eq 5 ];then
  exec first-run.sh &
  if [ "`ls -1 /lib/modules/${KERNVER}/modules.* 2>$ERR`" = "" ];then #w481
   #thistle is a very light purple...
   #yDISPLAY='-display :0'
   yaf-splash $yDISPLAY -margin 2 ${FONTSIZEPARAM} -bg thistle -bw 0 -placement top -font "9x15B" -outline 0 -text "Welcome! Move mouse-pointer here for getting-started information.
   WARNING: all required kernel modules were not loaded due to restricted RAM.
   You need to reboot to create a save-file on the hard drive and/or
   you need a swap file/partition to obtain more space.
   If you click here, a help file will display, or simply select Shutdown->Reboot from the menu." &
  else
   #thistle is a very light purple...
   #yDISPLAY='-display :0'
   yaf-splash $yDISPLAY -margin 2 ${FONTSIZEPARAM} -bg thistle -bw 0 -placement top -font "9x15B" -outline 0 -text "Welcome! Move mouse-pointer here for getting-started information" &
  fi
  RETVALs=$?
  YAFPIDs=$!
  LOOPCNT=0
  while [ $RETVALs -eq 0 ];do #only do this if X running.
   usleep 500000 #sleep 1
   LOOPCNT=`expr $LOOPCNT + 1`
   [ $LOOPCNT -gt 110 ] && break #55 second timeout.
   [ "`pidof yaf-splash`" != "" ] && continue
   #bark and put up the getting started message...
   if [ ! "`grep 'alias snd\-card\-0' /etc/modprobe.conf`" = "" ];then
    aplay /usr/share/audio/2barks.au &
    #wavplay /usr/share/audio/2barks.wav &
    RETAPLAY=$?
    PIDAPLAY=$!
   fi
   #100511 for ram-challenged pc, better to display png...
   if [ -f /usr/share/doc/welcome1stboot.png ];then
    if [ "`which gview`" ];then
     gview /usr/share/doc/welcome1stboot.png
    else
     defaultimageviewer /usr/share/doc/welcome1stboot.png
    fi
   else
    #100522 'surfer' is a simple viewer (uses libgtkhtml)...
    if [ -f /usr/bin/surfer ];then
     surfer /usr/share/doc/welcome1stboot.htm #can't handle the file:// prefix.
    else
     $BAREVIEW file:///usr/share/doc/welcome1stboot.htm
    fi
   fi
   #[ $RETAPLAY -eq 0 ] && kill $PIDAPLAY 2>$ERR
   [ "`pidof aplay`" != "" ] && killall aplay
   break
  done
  [ $RETVALs -eq 0 ] && kill $YAFPIDs 2>$ERR
 fi
fi

#v2.16 popup the BootManager if an extra SFS file added (once only)...
if [ "$PUPMODE" != 5 -a "$PUPMODE" != 2 ];then
  . /etc/rc.d/BOOTCONFIG
  #if EXTRASFSLIST variable not there, then auto-load of SFS files (meaning, user
  # has probably never run the BootManager)...
  if [ "`grep '^EXTRASFSLIST' /etc/rc.d/BOOTCONFIG`" = "" ];then
   #see /initrd/init which writes these to BOOTCONFIG..
   if [ "$LASTUNIONRECORD" != "" ];then
    if [ "$LASTUNIONRECORD" != "$PREVUNIONRECORD" ];then
     bootmanager extrasfs quiet
    fi
   fi
  fi
fi

#v2.16 popup a warning if booting from usb flash...
#if [ "$PMEDIA" = "usbflash" -a "$PUPMODE" != 5 ];then
case $PUPMODE in
7|13) PUPPY_ON_USB=1;;
5) case $PMEDIA in
    *usb*) PUPPY_ON_USB=1;; #old Puppies do not unmount host partition though pfix=ram :(
   esac;;
esac

if test "$PUPPY_ON_USB"; then
 yaf-splash ${FONTSIZEPARAM} -font "8x16" -outline 0 -margin 4 -bg yellow -text "WARNING! Do not unplug USB Flash drive!" &
 X1PID=$!
 X1RET=$?
 sleep 3
 [ $X1RET -eq 0 ] && kill $X1PID 2>$ERR
fi

[ "`which freememapplet_tray`" -a ! "`pidof freememapplet_tray`" ] && exec freememapplet_tray &
[ "`which fbxkb`" -a ! "`pidof fbxkb`" ] && exec fbxkb &
[ "`which network_tray`" -a ! "`pidof network_tray`" ] && exec network_tray &

#v2.17 suggested by andrei...
if [ -d $HOME/Startup ];then
 for a in $HOME/Startup/*
 do
  [ -f "$a" -a -x "$a" ] && { echo $a
  exec $a &
}
  sleep 1
 done
fi

exit $?
###END###
