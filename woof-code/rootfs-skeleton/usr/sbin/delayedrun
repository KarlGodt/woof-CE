#!/bin/ash
#(c) copyright 2007 Barry Kauler
#2007 Lesser GPL licence v2 (http://www.fsf.org/licensing/licenses/lgpl.html)
#launched from ~/.xinitrc, so X is running.
#note, see also /usr/sbin/savepuppyd, launched from /etc/rc.d/rc.local0.
#v3.91 BK oct,nov 2007, upated for Dingo.
#v3.94 BK 15 dec 2007, updated.
#v4.01 BK 19may2008: don't think loading usb-storage reqd here anymore.
#v4.01 BK 19may2008: note the new pup_eventd also launched from .xinitrc.
#w007 path fix for Xorg.
#w481 warning if modules cannot be loaded.

# common helper functions
. /etc/rc.d/f4puppy5
# BATCHMARKER01 - Marker for Line-Position to bulk insert code into.

#variables created at bootup by /initrd/usr/sbin/init...
. /etc/rc.d/PUPSTATE

KERNVER=`uname -r` #w481

BAREVIEW="bareview"
[ "`which bareview`" ] || BAREVIEW="defaulthtmlviewer"

sleep 2 #let the dust settle first.

#w002 this goes into the tray. eggtray gtk app written by mu...
CURRPS=`ps`
[ "`echo "$CURRPS" | grep -E 'lxpanel|fbpanel'`" ] && freememappletd

welcome_function(){
#offer to popup a getting-started html page...

#the test for /etc/videomode is for when Xvesa has finished choosing a resolution...
[ "`readlink /usr/bin/X`" = "Xorg" -o -e /etc/videomode ] || return 0

if [ "`ls -1 /lib/modules/${KERNVER}/modules.* 2>$ERR`" ];then #w481
yaf-splash -display :0 -margin 2 -bg thistle -bw 0 -placement top -font "9x15B" -outline 0 -text "Welcome! Click here for getting-started information" &
else
                                    #thistle is a very light purple...
yaf-splash -display :0 -margin 2 -bg thistle -bw 0 -placement top -font "9x15B" -outline 0 -text "Welcome! Click here for getting-started information. WARNING: all required kernel modules were not loaded due to restricted RAM. You need to reboot to create a save-file on the hard drive and/or you need a swap file/partition to obtain more space. If you click here, a help file will display, or simply select Shutdown->Reboot from the menu." &
fi
RETVALs=$?
YAFPIDs=$!
LOOPCNT=0

  while [ "`pidof X`" ];do #only do this if X running.
   usleep 500000 #sleep 1
   LOOPCNT=$((LOOPCNT + 1))
   [ $LOOPCNT -gt 110 ] && break #55 second timeout.
   [ "`pidof yaf-splash`" ] && continue
   #bark and put up the getting started message...
   if [ "`grep 'alias snd\-card\-0' /etc/modprobe.conf`" ];then
    aplay /usr/share/audio/2barks.au &
    #wavplay /usr/share/audio/2barks.wav &
    RETAPLAY=$?
    PIDAPLAY=$!
   fi
   $BAREVIEW file:///usr/share/doc/welcome1stboot.htm
   #[ $RETAPLAY -eq 0 ] && kill $PIDAPLAY 2>$ERR
   [ "`pidof aplay`" ] && killall aplay
   break
  done

[ $RETVALs -eq 0 ] && kill $YAFPIDs 2>>$ERR
}
[ $PUPMODE -eq 5 ] && welcome_function

bootmanager_function(){
#v2.16 popup the BootManager if an extra SFS file added (once only)...
                               [ $PUPMODE -eq 5 ] && return 0 #want pupsave loaded
. /etc/rc.d/BOOTCONFIG
  #if EXTRASFSLIST variable not there, then auto-load of SFS files (meaning, user
  # has probably never run the BootManager)...
[ "`grep '^EXTRASFSLIST' /etc/rc.d/BOOTCONFIG`" ] && return 0
                           [ "$LASTUNIONRECORD" ] || return 0 #see /initrd.gz/init which writes these to BOOTCONFIG..
     [ "$LASTUNIONRECORD" != "$PREVUNIONRECORD" ] && bootmanager extrasfs quiet
}
[ -d /initrd ] && bootmanager_function  #test it isn't full hd installation.

_start_retrovol(){
	retrovol --help 2>&1 | grep $Q hide && exec retrovol -hide & return $?
    exec retrovol &
}

which retrovol &&  _start_retrovol

_say_usb_warning(){
#v2.16 popup a warning if booting from usb flash...
#if [ "$PMEDIA" = "usbflash" ];then
 test -b /dev/$PDEV1 || return 1
 readlink /sys/class/block/$PDEV1 | grep $Q usb || return 0
 if mountpoint $Q /initrd/mnt/dev_save || mountpoint $Q /initrd/mnt/dev_ro2; then
 yaf-splash -font "8x16" -outline 0 -margin 4 -bg yellow -text "WARNING! Do not unplug USB Flash drive!" &
 X1PID=$!
 X1RET=$?
 sleep 3
 [ $X1RET -eq 0 ] && kill $X1PID
 else true
 fi
#fi
}
case $PUPMODE in 5|7|13) _say_usb_warning;;esac

#v2.17 suggested by andrei...
if [ -d /root/Startup ];then
find /root/Startup -type d -exec chmod $VERB 0660 {} \;
 for a in /root/Startup/*
 do
  [ -f "$a" -a -x "$a" ] && exec "$a" & sleep 0.21
 done
fi


###END###
