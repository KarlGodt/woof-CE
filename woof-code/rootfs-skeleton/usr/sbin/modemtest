#!/bin/ash
#Barry Kauler 2007 LGPL
#v405 overhauled.
#v408 rerwin: bugfix.
#v465 rerwin: v413 move init string to Init3
#v477 rerwin: v413 wait longer for modem response; add splash message during sleep
. /etc/rc.d/f4puppy5
# BATCHMARKER01 - Marker for Line-Position to bulk insert code into.
#v424 rerwin: reset skip-PIN flag

#[ ! $1 ] && exit
DEVM=$1
PARAM2=$2

MODEMDEV=""
if [ -h /dev/modem ];then
 MODEMDEV="`readlink /dev/modem`"
fi

#a fallback if user runs this script directly...
[ "$DEVM" ] || [ "$MODEMDEV" ] || exit
[ "$DEVM" ] || [ "$MODEMDEV" ] && DEVM="$MODEMDEV"

if [ "$PARAM2" = "initonly" ];then
 MSGSUCCESS="Okay, the modem was probed and it responded, confirming that it does exist,\n
now the probe can be done to determine a suitable initialization string.\n
Click the 'Yes' button to do this (recommended), \n
or 'No' if you have changed your mind..."
else
 MSGSUCCESS="Success, the modem responds! (the modem is there, getting it to dialout is another matter!)\n
Click the 'yes' button if you would like /dev/modem to be a link to ${DEVM} and the Wvdial\n
configuration file /etc/wvdial.conf set with entry 'Modem = /dev/${DEVM}. An attempt will\n
also be made to determine appropriate modem initialization strings."
fi


#return the IRQ that respond to a given device...
irq_from_device_func() { #device passed in, ex: /dev/ttyS0
 #v1.0.2 it seems that setserial may be more trouble than its worth...
 #in the case of linmodems it often doesn't work...
 case ${1} in
  /dev/ttyS[0-9])
   set -- `setserial -v -b ${1} auto_irq skip_test autoconfig session_lockout`
   [ "$6" ] && echo $6 | tr -d \)
  ;;
  esac
}

#talk to modem, wait for response...
chat_with_func() { #device passed in.
 rm -f /tmp/answer.txt
 #TODO maybe send +++ to return modem to command-mode.
 #hangs if modem unplugged or turned off (contrary to what docs say)...
 modem-stats -c "ATZ" $1 >/tmp/answer.txt &
 sleep 5 #v413
 killall modem-stats
 if [ -e /tmp/answer.txt ];then
  if [ -s /tmp/answer.txt ];then #nonzero size.
   grep "^OK" /tmp/answer.txt >$OUT 2>&1
   [ $? -eq 0 ] && return 0 #success
  fi
 fi
 return 1
}

modem_test_func() {
 [ "$DEVM" ] || DEVM='invalid'
 #case $DEVM in
 #tty*)
  yaf-splash -font "8x16" -outline 0 -margin 4 -bg orange -text "Verifying modem is present..." &
  X8PID=$! #v413
  rm -f /tmp/.pupdial_pin_sent
  IRQM=$(irq_from_device_func /dev/${DEVM})
  fuser -k /dev/${DEVM} 2>$ERR #kill processing attached to device.
  chat_with_func /dev/$DEVM
  if [ $? -eq 0 ];then
   kill $X8PID #v413
   if [ "$DEVM" = "$MODEMDEV" -a "$PARAM2" = "" ];then
    Xdialog --left --wmclass "pupdial" --title "PupDial: modem test" --no-cancel --msgbox "Success, the modem responds! (the modem is there, getting it to dialout is another matter!)" 0 0
   else 
    Xdialog --left --wmclass "pupdial" --title "PupDial: modem test" --no-cancel --yesno "${MSGSUCCESS}" 0 0
    if [ $? -eq 0 ];then
     yaf-splash -font "8x16" -outline 0 -margin 4 -bg orange -text "Please wait, updating settings..." &
     X9PID=$!
     ln $VERB -snf $DEVM /dev/modem
     #aPATTERN="s%^Modem = .*%Modem = ${DEVM}%"
     aPATTERN="s%^Modem = .*%Modem = /dev/${DEVM}%"  #v408 rerwin
     sed -e "$aPATTERN" /etc/wvdial.conf >/tmp/wvdial.conf.tmp
     [ $? -eq 0 ] && mv $VERB -f /tmp/wvdial.conf.tmp /etc/wvdial.conf
     waitmax 29 gen_modem_init_string >$OUT #writes to /tmp/mymodeminitstring
     if [ -s /tmp/mymodeminitstring ];then
      INITSTRING="`cat /tmp/mymodeminitstring | tr '&' '~'`" #sed problem with &
      bPATTERN="s/^Init3.*/Init3 = ${INITSTRING}/" #v413
      sed -e "$bPATTERN" /etc/wvdial.conf >/tmp/wvdial.conf.tmp
      if [ $? -eq 0 ];then
       cat /tmp/wvdial.conf.tmp | tr '~' '&' >/etc/wvdial.conf #restore &
      fi
     fi
     kill $X9PID
    fi
   fi
  else
   kill $X8PID #v413
   Xdialog --left --wmclass "pupdial" --title "PupDial: modem test" --no-cancel --msgbox "Sorry, the modem was not detected." 0 0
  fi
 # ;;
 #*)
 #  Xdialog --center --wmclass "pupdial" --title "PupDial: modem test" --no-cancel --msgbox "There is no modem to test." 0 0
 # ;;
 #esac
}

modem_test_func

###END###
