#!/bin/sh
#
# New header by Karl Reimer Godt, September 2014
  _TITLE_="Puppy_freememappletshell"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="/usr/sbin/freememappletshell"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
[ "$HAVE_F4PUPPY5" ] || source /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

TWO_HELP=''; TWO_VERSION=''; TWO_VERBOSE=''; TWO_DEBUG=''; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap

}
# End new header
#
#try prevent freememapplet escaping tray when jwm -restart restarted.

exec 1>>/tmp/freememappletshell.log 2>&1

ERR=/dev/null
QUIET=''

#which freememapplet || { echo "freememapplet not installed.";exit 1; }

#pidof freememapplet && killall freememapplet
#pidof freememapplet || freememapplet &

pidof inotifywait && killall inotifywait

#sleep 2
#exec freememapplet


for p in `echo -e "${PATH//:/\n}"` ; do
FREE_MEM_APPLETS="$FREE_MEM_APPLETS
`ls -1 ${p}/*freemem* 2>$ERR`"
done

FREE_MEM_APPLETS=`echo "$FREE_MEM_APPLETS" | grep -vw "${0##*/}"`

for app in $FREE_MEM_APPLETS ; do
echo -n "$app "
[ -f $app -a -x $app ] || { echo " not a file andor not executable";continue; }
echo -n " is file and executable "

#pidof $app || { echo;continue; }
ldd $app | grep $Q -i 'xpm' && { pidof ${app##*/} && { kill `pidof ${app##*/}`;sleep 10; }; }
pidof ${app##*/} && { echo " alreay running";continue; }
echo " not already running"

$app &
#echo
done

echo
sleep 1
ps -A -o pid,s,cmd,args | grep free
