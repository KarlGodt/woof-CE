#!/bin/ash
#Barry Kauler 2009
#Called from Xorg Wizard, via xinit, testing a video mode.
#091124 bug fixes, vert and horiz freqs did not display for vesa driver.

  _TITLE_="pup_xinitrc_test.sh"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="$0"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
 set +e
 . /etc/rc.d/f4puppy5 && {
 set +n
 . /etc/rc.d/f4puppy5; } || echo "WARNING : Could not source /etc/rc.d/f4puyppy5 ."

ADD_PARAMETER_LIST=
ADD_PARAMETERS=
_provide_basic_parameters

TWO_HELP=''; TWO_VERSION=''; TWO_VERBOSE=''; TWO_DEBUG=''; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
for i in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap
} || echo "Warning : No /etc/rc.d/f4puppy5 installed."

[ "$TMP_DIR" ] || TMP_DIR=/tmp/xorgwizard
mkdir $VERB -p "$TMP_DIR"
[ "$XORG_TEST_RESULTS_FILE" ] || XORG_TEST_RESULTS_FILE="$TMP_DIR"/xorgwizard_initrc_test_results
[ "$XORG_TEST_TIMEOUT" ]      || XORG_TEST_TIMEOUT=20 #test timeout in seconds
[ "$XORG_DIALOG_TITLE" ]      || XORG_DIALOG_TITLE="Puppy Xorg Video Wizard"


set -- `xvidtune -show` #'-display :0' not needed.
LANG=C CLOCKHZ=`dc $2 1000000 \* p`
CLOCKHZINT=`echo -n "$CLOCKHZ" | cut -f 1 -d '.'`
if [ "$CLOCKHZINT" -ne 0 ];then
 XTEST=$3
 YTEST=$7
 LANG=C VRTEST=`dc $CLOCKHZ $6 \/ ${10} \/ p`
 LANG=C HSTEST=`dc $CLOCKHZ $6 \/ 1000 \/ p`
else
 #some video chips do not work with xvidtune.
 XRANDRINFO="`xrandr -q | grep '\*' | tr -s ' ' | grep '^ [0-9]' | head -n 1`"
     XTEST=`echo -n "$XRANDRINFO" | cut -f 2 -d ' ' | cut -f 1 -d 'x'`
     YTEST=`echo -n "$XRANDRINFO" | cut -f 2 -d ' ' | cut -f 2 -d 'x'`
    VRTEST=`echo -n "$XRANDRINFO" | cut -f 3 -d ' ' | cut -f 1 -d '*'`
 VRTESTINT=`echo -n "$VRTEST"     | cut -f 1 -d '.'`

 #xrandr does not always return the vertical frequency...
 if [ "$VRTESTINT" -eq 0 -o ! "$VRTEST" ];then
  if [ "$MONCHOICES" = "" ];then #091124 exported from xorgwizard.
   mcPATTERN=" ${XTEST}x${YTEST}"'@'
   [ -f "$TMP_DIR"/ddcprobe.txt ] && VRTEST=`grep "$mcPATTERN" "$TMP_DIR"/ddcprobe.txt | tail -n 1 | cut -f 2 -d '@'` #091124
  else
   mcPATTERN='^'"${XTEST}x${YTEST}"'@'
   VRTEST=`echo "$MONCHOICES" | grep -m1 "$mcPATTERN" | cut -f 2 -d '@'`
  fi
  [ "$VRTEST" ] || VRTEST=60 #desparate last resort.
 fi
 # so we calc horiz freq theoretically...
 HSTEST=`gtf "$XTEST" "$YTEST" "$VRTEST" | head -n 2 | tail -n 1 | cut -f 1 -d ';' | cut -f 2 -d ':' | cut -f 2 -d ' '`
fi

#round off to two decimal places...
LANG=C HSTEST=`printf "%.2f" $HSTEST`
LANG=C VRTEST=`printf "%.2f" $VRTEST`

echo "XTEST=$XTEST
YTEST=$YTEST
VRTEST=$VRTEST
HSTEST=$HSTEST" > "$XORG_TEST_RESULTS_FILE" #read by xorgwizard.

xmessage -font "8x16" -center -timeout $XORG_TEST_TIMEOUT \
 -buttons "OK:10" -default OK -title "$XORG_DIALOG_TITLE" "
$XORG_DIALOG_TITLE: testing X


If you can see this, then X is working!


Current resolution:         ${XTEST}x${YTEST} pixels
Horizontal sync frequency:  $HSTEST KHz
Vertical refresh frequency: $VRTEST Hz (times per second)

Please click the 'OK' button, or if your mouse isn't working,
just hit the ENTER key, or the combination CTRL-ALT-BACKSPACE.

If you don't do anything, this test will timeout in ${XORG_TEST_TIMEOUT} seconds.
"

#when xmessage terminates, xinit should kill Xorg.
###END###
