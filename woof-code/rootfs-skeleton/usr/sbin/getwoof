#!/bin/sh
#120801 download Woof.
#this code is clumsy, had to checkout, then set some parameters in repo, then erase and checkout again.
#One optional parameter, 'update'.

_TITLE_=getwoof
_VERSION_=1.0omega
_COMMENT_="CLI to download woof from github.com/puppylinux-woof-CE/woof-CE.git ."

MY_SELF="$0"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
 set +e
 source /etc/rc.d/f4puppy5 && {
 set +n
 source /etc/rc.d/f4puppy5; } || echo "WARNING : Could not source /etc/rc.d/f4puyppy5 ."

ADD_PARAMETER_LIST="help|update"
ADD_PARAMETERS="help : show original help message
update : do git pull"
_provide_basic_parameters

ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
#[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
#for i in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap
} || echo "Warning : No /etc/rc.d/f4puppy5 installed."


if [ $1 ];then
 case $1 in
  *update)
   [ ! -d woofx ] && exit 2
   cd woofx
   git pull
  ;;
  *help)
   echo "Current directory must be in a Linux filesystem."
   echo "The Woof repository will be checked-out into directory 'woofx'."
   echo "Option passed parameter 'update' will update 'woofx' from the online
Woof repository directory."
  ;;
 esac
 exit 0
fi

# download woof-CE's code
git="$(which git)"
if [ -n "$git" ]
then
        "$git" clone https://github.com/puppylinux-woof-CE/woof-CE.git woofx
else
        zip="$(mktemp -u)"
        wget -O "$zip" https://github.com/puppylinux-woof-CE/woof-CE/archive/master.zip
        unzip "$zip"
        rm -f "$zip"
        mv woof-CE-master woofx
fi
# Very End of this file 'usr/sbin/getwoof' #
###END###
