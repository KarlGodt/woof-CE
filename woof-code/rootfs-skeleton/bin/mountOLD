#!/bin/bash
#
# New header by Karl Reimer Godt, September 2014
  _TITLE_="Puppy_mount"
_VERSION_=1.0omega
_COMMENT_="$_TITLE_:Puppy Linux shell script [to TODO here]"

MY_SELF="/bin/mount"
MY_PID=$$

test -f /etc/rc.d/f4puppy5 && {
[ "$HAVE_F4PUPPY5" ] || source /etc/rc.d/f4puppy5

ADD_PARAMETER_LIST=""
ADD_PARAMETERS=""
_provide_basic_parameters

TWO_HELP=''; TWO_VERSION=''; TWO_VERBOSE=''; TWO_DEBUG=''; ## Set to anything if code requires further down (ie. custom usage or version message)
ADD_HELP_MSG="$_COMMENT_"
_parse_basic_parameters "$@"
[ "$DO_SHIFT" ] && [ ! "${DO_SHIFT//[[:digit:]]/}" ] && {
  for oneSHIFT in `seq 1 1 $DO_SHIFT`; do shift; done; }

_trap

}
# End new header
#
#BK 2006 www.puppylinux.com
#2007 Lesser GPL licence v2 (http://www.fsf.org/licensing/licenses/lgpl.html)
#v407 fix for floppy drive icon.
#v409 gparted create ext3 part. failed, fixed by making /etc/mtab a symlink.

#mount-FULL, umount-FULL, losetup-FULL are the full versions.
#The Busybox versions of mount and umount are available but only by:
# # busybox mount ...
# # busybox umount ...
#mount and umount are now scripts.
#if an ntfs partition, puppy uses user-mode ntfs-3g driver.
#the mount and umount scripts allow seamless mounting and unmounting of ntfs f.s.


########################################################################
#
# CHANGES by Karl Reimer Godt
# 1.0 : added simple mount for
#       just 'mount /dev/sda#'
# 2.0 : support for directories with spaces
# 2.1 : added '-q' and '-Q' parameter for quoted output
# 2.2 : uses bash instead of sh
# 2.3 : uses BASH_ARGV to separate the parameters
#       instead of LASTPARAM and DASHOPTS
# 3.0 : added simple 'debug' and 'verbose' parameters
# 4.0 : removal of /tmp/ntfsmnterr$$.txt at the end
#
# /dev/hda7
# /dev/hda7:
# LABEL="/"
# UUID="429ee1ed-70a4-43a5-89f8-33496c489260"
# TYPE="ext4"
# DISTRO_NAME='LucidÂPuppy'
# DISTRO_VERSION=218
# DISTRO_MINOR_VERSION=00
# DISTRO_BINARY_COMPAT='ubuntu'
# DISTRO_FILE_PREFIX='luci'
# DISTRO_COMPAT_VERSION='lucid'
# DISTRO_KERNEL_PET='linux_kernel-2.6.33.2-tickless_smp_patched-L3.pet'
# PUPMODE=2
# SATADRIVES=''
# PUP_HOME='/'
# PDEV1='hda7'
# DEV1FS='ext4'
# LinuxÂpuppypcÂ2.6.31.14Â#1ÂMonÂJanÂ24Â21:03:21ÂGMT-8Â2011Âi686ÂGNU/Linux
# Xserver=/usr/bin/Xorg
# $LANG=en_US
# today=TueÂOctÂ25Â13:03:32ÂGMT+1Â2011
#
#
#
#
#
########################################################################

[ "$1" ] || exec busybox mount
[ "$1" = '-Q' ] && { busybox mount | sed -r 's,(.* on )(.*)( type .*),\1"\2"\3,';exit $?; }
[ "$1" = '-q' ] && { busybox mount | sed -r "s,(.* on )(.*)( type .*),\1'\2'\3,";exit $?; }

out=/dev/null;err=$out
case $1 in
verbose) DEBUG=1;err=/dev/stderr;out=/dev/stdout;shift;;
debug) set -x;shift;;
esac

SIMPLEMOUNT=''
if [ -n "`echo "$1" | grep '/dev/'`" ];then
 if [[ "`echo "$@"`" == "$1" ]];then
  if [ -z "$2" ] ; then
if [ ! -f /etc/fstab ] || [ -z "`grep -w "$1" /etc/fstab | grep -v -E -e '^#|^[[:blank:]]*#'`" ] ; then
just_name=`echo "$1" | sed 's#/dev/##'`
mkdir -p /mnt/$just_name
SIMPLEMOUNT="$1 /mnt/$just_name"
fi
fi;fi;fi  ###KRG
#i realised this script has to allow reentrancy. So, all temp file now unique,
#using ${$} which is pid of script.
MYPID=${$}
. /etc/rc.d/functions4puppy4 #v4.02 ##for driveicons

#v2.12 discovered difference between $@ and $*. Replaced all $@ with $* in this script...
#extract all the '-' options, on separate lines... do NOT use $@!!!!...
#v3.93 eliminate ' -- ' and all past it...
#v409 now have /etc/mtab a symlink to /proc/mounts so this section not needed...
##v2.10 do not update /etc/mtab if '-n' option...
#DASHOPTS="`echo "$*" | tr '\t' ' '  | sed -e 's/ -- .*//' | tr ' ' '\n' | grep '^\-'`"

#needs an explicit '-t ntfs', does not work with /etc/fstab...
if [ "`echo "$*" | grep -e '\-t[[:blank:]]*ntfs[[:blank:]]*'`" = "" ];then

 #v3.93 always use full mount, in case of params not understood by bb-mount...
 ##v2.10 hack for T2, scripts have '--bind'...

 # #busybox mount does not support '--bind'
 # #as have mtab file (see below), can now use full mount...
  #v409 put in '-n' option as now have /etc/mtab symlink to /proc/mounts...
  if test -n "$SIMPLEMOUNT" ; then #KRG
  mount-FULL -n $SIMPLEMOUNT  ## does not work within double quotes
  RETVAL=$?  ###DBG
  echo "RETVAL1-1='$RETVAL'"  ###DBG
  else  ###KRG
  mount-FULL -n "${@}"  ###orig
  RETVAL=$?  ###DBG
  echo "RETVAL1-2='$RETVAL'"  ###DBG
 fi  ###KRG

else echo 105
 #screen out all the options...
 #set | grep BASH_ARGV|sed -r 's,([\[0-9\]*]="),param\1,g'
 #CMDPRMS=`set |grep BASH_ARGV |sed -r 's,([\[0-9\]*]="),param\1,g;s,BASH_ARGV=\(,,;s,\)$,,;s," (param[\[0-9\]*]="),"\n\1,g'`

CMDPRMS=`set |grep BASH_ARGV |sed -r 's,([\[0-9\]*]="),\1,g;s,BASH_ARGV=\(,,;s,\)$,,;s," ([\[0-9\]*]="),"\n\1,g'`
echo "CMDPRMS='$CMDPRMS'"
 c=0
 while read line;do
 #echo $line | grep -e 'param\[[0-9]*\]="-.*' && continue
 #echo $line | grep -v -e 'param\[[0-9]*\]="/.*' && continue
 echo $line | grep -e '\[[0-9]*\]="-.*' && continue
 echo $line | grep -v -e '\[[0-9]*\]="/.*' && continue
 echo $line
 eval param[$c]=`echo "$line" |sed 's|^\[[0-9]*\]=||'`
 ((c++))
 done <<EOI
$(echo "$CMDPRMS")
EOI

 for i in `seq 0 1 $((${#param[@]}-1))`;do
 echo ${i}: ${param[$i]} #${param[$((i-1))]} -1 for -t ntfs /dev/sda1 /mnt/sda1
 if [ "`echo ${param[$i]} |grep '^/dev/'`" ];then
 PARTITION[$i]="${param[$i]}"
 else
 MOUNTPOINT[$i]="${param[$i]}"
 fi
 done
 echo "param@=${param[@]}"
 echo "PARTI@=${PARTITION[@]}"
 echo "MOUNT@=${MOUNTPOINT[@]}"
 [ "`echo "${MOUNTPOINT[@]}"`" ] && mkdir -p "${MOUNTPOINT[@]}"
 #echo ${#param[@]}
 #echo "${#param[@]}"
 #echo ${#param[*]}
 #echo "${#param[*]}"

 #exit

 #kirk advised these options so Rox will not complain about file
 #permissions when copy a file to a ntfs partition...
 #[ -f /tmp/ntfsmnterr${MYPID}.txt ] && rm -f /tmp/ntfsmnterr${MYPID}.txt

 ntfs-3g "${PARTITION[@]}" "${MOUNTPOINT[@]}" -o umask=0,no_def_opts 2>>/tmp/ntfsmnterr$$.txt
 RETVAL=$?
 #v2.16 ntfs-3g v1.417, part. scheduled for check, failed with value 10...
 #v4.00 ntfs-3g v1.2412 does not have 4,10, has 15 for dirty f.s., 14 hiberneted...
 if [ $RETVAL -eq 4 -o $RETVAL -eq 10 -o $RETVAL -eq 15 -o $RETVAL -eq 14 ];then  #try to force it...
  if [ $RETVAL -eq 14 ];then
   #ntfs-3g $CMDPRMS -o umask=0,no_def_opts,remove_hiberfile 2>/tmp/ntfsmnterr${MYPID}.txt
   #RETVAL=$?
   false #echo > /dev/null
  else
   ntfs-3g $CMDPRMS -o force,umask=0,no_def_opts 2>>/tmp/ntfsmnterr$$.txt
   RETVAL=$?
   ERRMSG1=`cat /tmp/ntfsmnterr$$.txt`
   echo "$ERRMSG1"
   if [ $RETVAL -eq 0 ];then
    echo "WARNING: NTFS f.s. mounted read/write but corrupted."
    [ ! "`pidof X`" = "" ] && nohup gxmessage -bg red -center -title "NTFS WARNING" "The ntfs-3g driver was able to mount the NTFS
partition but returned this error message:
$ERRMSG1

It is mounted read/write, but advice is only write
to it in emergency situation. Recommendation is
boot Windows and fix the filesystem first!!!" &
   fi
  fi
 fi

 #ntfs-3g plays very safe and will not mount if thinks anything
 #wrong with ntfs f.s. But, we may want to recover files from a
 #damaged windows. So, fall back to the kernel ntfs driver...
 if [ ! $RETVAL -eq 0 ];then
  #mount read-only...
  #busybox mount -r -t ntfs "${param[@]}"
  mount-FULL -r -t ntfs "${PARTITION[@]}" "${MOUNTPOINT[@]}"
  RETVAL=$?
  ERRMSG1="`cat /tmp/ntfsmnterr$$.txt`"
  echo "$ERRMSG1"
  if [ $RETVAL -eq 0 ];then
   echo "WARNING: NTFS f.s. mounted read-only."
   [ "`pidof X`" ] && nohup gxmessage -bg red -center -title "NTFS WARNING" "The ntfs-3g driver was unable to mount the NTFS
partition and returned this error message:
$ERRMSG1

So, probably the inbuilt kernel NTFS driver has been used
to mount the partition read-only." &
  fi
 fi
fi
echo "Mount Return Value='$RETVAL' Display='$DISPLAY'"
#v4.02 if there is a desktop icon (see pup_eventd), then refresh it...
if [ "$RETVAL" -eq 0 -a "$DISPLAY" != "" ];then
 [ "$DEBUG" ] && echo 'first if'
 DEVNAME="`busybox mount | tail -n 1 | grep '^/dev/' | cut -f 1 -d ' ' | cut -f 3 -d '/'`"
 if [ "$DEVNAME" != "" ];then
 [ "$DEBUG" ] && echo 'second if'
  DRVNAME="`echo -n "$DEVNAME" | cut -c 1-3`"
  #special case, SD card /dev/mmcblk0p1...
  [ "$DRVNAME" = "mmc" ] && DRVNAME="`echo -n "$DEVNAME" | sed -e 's/p[0-9]$//'`"
  xDRVNAME="$DRVNAME" #v404
  #[ -d /root/.pup_event/drive_${DEVNAME} ] && DRVNAME="$DEVNAME" #icon for each partition.
  [ -d /root/Choices/Puppy/.pup_event/drive_${DEVNAME} ] && DRVNAME="$DEVNAME"
  echo "$DEVNAME" "$DRVNAME" "$xDRVNAME"
  #if [ -d /root/.pup_event/drive_${DRVNAME} ];then
  if [ -d /root/Choices/Puppy/.pup_event/drive_${DRVNAME} ];then
  echo 'third if'
   case $DRVNAME in #v407
    fd*)
     DRV_CATEGORY="floppy"
    ;;
    *)
     dnPATTERN='/dev/'"${xDRVNAME}"'|'
     DRV_CATEGORY="`probedisk2 | grep "$dnPATTERN" | cut -f 2 -d '|'`"
    ;;
   esac
   [ "$DEBUG" ] && echo "starting icon_mounted_func '$DEVNAME $DRV_CATEGORY' from $0"
   icon_mounted_func $DEVNAME $DRV_CATEGORY #see functions4puppy4
  fi
 fi
fi

#v409 now have /etc/mtab a symlink to /proc/mounts so this section not needed...
##v2.10 do not update /etc/mtab if '-n' option...
#[ "`echo " $DASHOPTS" | grep '^\-n$'`" != "" ] && exit $RETVAL
##busybox does not support /etc/mtab, but some apps (ex: eject
##and the full mount,umount, mke2fs) need it...
#[ $RETVAL -eq 0 ] && busybox mount | sed -e 's/ on / /g' | sed -e 's/ type / /g' | sed -e 's/ (/ /g' | sed -e 's/)$/ 0 0/g' > /etc/mtab
##note, it is a long story here. Busybox can be configured to
##support /etc/mtab, however the information it writes to mtab
##is incomplete, different, and breaks my scripts.

#v409, instead just make sure the symlink stays there...
if [ ! -L /etc/mtab ];then
 rm -f /etc/mtab
 ln -s /proc/mounts /etc/mtab
fi

rm -f /tmp/ntfsmnterr$$.txt 2>$err
exit $RETVAL
# Very End of this file 'bin/mount' #
###END###
